//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package algo ;import _g "strconv";func RepeatString (s string ,cnt int )string {if cnt <=0{return "";};_de :=make ([]byte ,len (s )*cnt );_gd :=[]byte (s );for _b :=0;_b < cnt ;_b ++{copy (_de [_b :],_gd );};return string (_de );};

// NaturalLess compares two strings in a human manner so rId2 sorts less than rId10
func NaturalLess (lhs ,rhs string )bool {_d ,_fa :=0,0;for _d < len (lhs )&&_fa < len (rhs ){_f :=lhs [_d ];_fg :=rhs [_fa ];_be :=_gb (_f );_e :=_gb (_fg );switch {case _be &&!_e :return true ;case !_be &&_e :return false ;case !_be &&!_e :if _f !=_fg {return _f < _fg ;};_d ++;_fa ++;default:_bdd :=_d +1;_ga :=_fa +1;for _bdd < len (lhs )&&_gb (lhs [_bdd ]){_bdd ++;};for _ga < len (rhs )&&_gb (rhs [_ga ]){_ga ++;};_bd ,_ :=_g .ParseUint (lhs [_d :_bdd ],10,64);_da ,_ :=_g .ParseUint (rhs [_d :_ga ],10,64);if _bd !=_da {return _bd < _da ;};_d =_bdd ;_fa =_ga ;};};return len (lhs )< len (rhs );};func _gb (_ab byte )bool {return _ab >='0'&&_ab <='9'};