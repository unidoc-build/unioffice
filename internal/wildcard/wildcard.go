//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package wildcard ;func MatchSimple (pattern ,name string )bool {if pattern ==""{return name ==pattern ;};if pattern =="\u002a"{return true ;};_c :=make ([]rune ,0,len (name ));_d :=make ([]rune ,0,len (pattern ));for _ ,_bc :=range name {_c =append (_c ,_bc );};for _ ,_cg :=range pattern {_d =append (_d ,_cg );};_be :=true ;return _baf (_c ,_d ,_be );};func Index (pattern ,name string )(_gba int ){if pattern ==""||pattern =="\u002a"{return 0;};_fg :=make ([]rune ,0,len (name ));_bb :=make ([]rune ,0,len (pattern ));for _ ,_eac :=range name {_fg =append (_fg ,_eac );};for _ ,_bcb :=range pattern {_bb =append (_bb ,_bcb );};return _caa (_fg ,_bb ,0);};func _caa (_cf ,_ga []rune ,_fd int )int {for len (_ga )> 0{switch _ga [0]{default:if len (_cf )==0{return -1;};if _cf [0]!=_ga [0]{return _caa (_cf [1:],_ga ,_fd +1);};case '?':if len (_cf )==0{return -1;};case '*':if len (_cf )==0{return -1;};_bee :=_caa (_cf ,_ga [1:],_fd );if _bee !=-1{return _fd ;}else {_bee =_caa (_cf [1:],_ga ,_fd );if _bee !=-1{return _fd ;}else {return -1;};};};_cf =_cf [1:];_ga =_ga [1:];};return _fd ;};func Match (pattern ,name string )(_g bool ){if pattern ==""{return name ==pattern ;};if pattern =="\u002a"{return true ;};_ba :=make ([]rune ,0,len (name ));_ff :=make ([]rune ,0,len (pattern ));for _ ,_bg :=range name {_ba =append (_ba ,_bg );};for _ ,_ce :=range pattern {_ff =append (_ff ,_ce );};_a :=false ;return _baf (_ba ,_ff ,_a );};func _baf (_da ,_ea []rune ,_gb bool )bool {for len (_ea )> 0{switch _ea [0]{default:if len (_da )==0||_da [0]!=_ea [0]{return false ;};case '?':if len (_da )==0&&!_gb {return false ;};case '*':return _baf (_da ,_ea [1:],_gb )||(len (_da )> 0&&_baf (_da [1:],_ea ,_gb ));};_da =_da [1:];_ea =_ea [1:];};return len (_da )==0&&len (_ea )==0;};