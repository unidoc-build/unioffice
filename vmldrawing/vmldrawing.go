//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package vmldrawing ;import (_dda "encoding/xml";_eb "fmt";_e "github.com/unidoc/unioffice";_a "github.com/unidoc/unioffice/schema/soo/ofc/sharedTypes";_g "github.com/unidoc/unioffice/schema/urn/schemas_microsoft_com/office/excel";_bd "github.com/unidoc/unioffice/schema/urn/schemas_microsoft_com/vml";);

// NewCommentDrawing constructs a new comment drawing.
func NewCommentDrawing ()*Container {_fg :=NewContainer ();_fg .Layout =_bd .NewOfcShapelayout ();_fg .Layout .ExtAttr =_bd .ST_ExtEdit ;_fg .Layout .Idmap =_bd .NewOfcCT_IdMap ();_fg .Layout .Idmap .DataAttr =_e .String ("\u0031");_fg .Layout .Idmap .ExtAttr =_bd .ST_ExtEdit ;_fg .ShapeType =_bd .NewShapetype ();_fg .ShapeType .IdAttr =_e .String ("_\u0078\u0030\u0030\u0030\u0030\u005f\u0074\u0032\u0030\u0032");_fg .ShapeType .CoordsizeAttr =_e .String ("2\u0031\u0036\u0030\u0030\u002c\u0032\u0031\u0036\u0030\u0030");_fg .ShapeType .SptAttr =_e .Float32 (202);_fg .ShapeType .PathAttr =_e .String ("\u006d\u0030\u002c0l\u0030\u002c\u0032\u0031\u0036\u0030\u0030\u002c\u00321\u00360\u0030,\u00321\u0036\u0030\u0030\u002c\u0032\u0031\u0036\u0030\u0030\u002c\u0030\u0078\u0065");_fd :=_bd .NewEG_ShapeElements ();_fg .ShapeType .EG_ShapeElements =append (_fg .ShapeType .EG_ShapeElements ,_fd );_fd .Path =_bd .NewPath ();_fd .Path .GradientshapeokAttr =_a .ST_TrueFalseT ;_fd .Path .ConnecttypeAttr =_bd .OfcST_ConnectTypeRect ;return _fg ;};func NewContainer ()*Container {return &Container {}};func (_dd *Container )MarshalXML (e *_dda .Encoder ,start _dda .StartElement )error {start .Attr =append (start .Attr ,_dda .Attr {Name :_dda .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0076"},Value :"\u0075\u0072n\u003a\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d:v\u006d\u006c"});start .Attr =append (start .Attr ,_dda .Attr {Name :_dda .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u006f"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002d\u006di\u0063\u0072\u006f\u0073\u006f\u0066t\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u006ff\u0066\u0069\u0063\u0065"});start .Attr =append (start .Attr ,_dda .Attr {Name :_dda .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002d\u0063\u006fm\u003a\u006f\u0066\u0066\u0069c\u0065\u003ae\u0078\u0063\u0065\u006c"});start .Name .Local ="\u0078\u006d\u006c";e .EncodeToken (start );if _dd .Layout !=nil {_cd :=_dda .StartElement {Name :_dda .Name {Local :"\u006f\u003a\u0073\u0068\u0061\u0070\u0065\u006c\u0061\u0079\u006f\u0075\u0074"}};e .EncodeElement (_dd .Layout ,_cd );};if _dd .ShapeType !=nil {_c :=_dda .StartElement {Name :_dda .Name {Local :"v\u003a\u0073\u0068\u0061\u0070\u0065\u0074\u0079\u0070\u0065"}};e .EncodeElement (_dd .ShapeType ,_c );};for _ ,_af :=range _dd .Shape {_ff :=_dda .StartElement {Name :_dda .Name {Local :"\u0076:\u0073\u0068\u0061\u0070\u0065"}};e .EncodeElement (_af ,_ff );};return e .EncodeToken (_dda .EndElement {Name :start .Name });};type Container struct{Layout *_bd .OfcShapelayout ;ShapeType *_bd .Shapetype ;Shape []*_bd .Shape ;};func (_b *Container )UnmarshalXML (d *_dda .Decoder ,start _dda .StartElement )error {_b .Shape =nil ;_fe :for {_fc ,_d :=d .Token ();if _d !=nil {return _d ;};switch _da :=_fc .(type ){case _dda .StartElement :switch _da .Name .Local {case "s\u0068\u0061\u0070\u0065\u006c\u0061\u0079\u006f\u0075\u0074":_b .Layout =_bd .NewOfcShapelayout ();if _f :=d .DecodeElement (_b .Layout ,&_da );_f !=nil {return _f ;};case "\u0073h\u0061\u0070\u0065\u0074\u0079\u0070e":_b .ShapeType =_bd .NewShapetype ();if _cg :=d .DecodeElement (_b .ShapeType ,&_da );_cg !=nil {return _cg ;};case "\u0073\u0068\u0061p\u0065":_eg :=_bd .NewShape ();if _dg :=d .DecodeElement (_eg ,&_da );_dg !=nil {return _dg ;};_b .Shape =append (_b .Shape ,_eg );};case _dda .EndElement :break _fe ;};};return nil ;};

// NewCommentShape creates a new comment shape for a given cell index.  The
// indices here are zero based.
func NewCommentShape (col ,row int64 )*_bd .Shape {_fb :=_bd .NewShape ();_fb .IdAttr =_e .String (_eb .Sprintf ("\u0063\u0073\u005f\u0025\u0064\u005f\u0025\u0064",col ,row ));_fb .TypeAttr =_e .String ("\u0023\u005f\u00780\u0030\u0030\u0030\u005f\u0074\u0032\u0030\u0032");_fb .StyleAttr =_e .String ("\u0070\u006f\u0073i\u0074\u0069\u006f\u006e\u003a\u0061\u0062\u0073\u006f\u006cu\u0074\u0065\u003b\u006d\u0061\u0072\u0067\u0069\u006e\u002d\u006c\u0065\u0066\u0074:\u0038\u0030\u0070\u0074;\u006d\u0061\u0072\u0067\u0069n-\u0074o\u0070\u003a\u0032pt\u003b\u0077\u0069\u0064\u0074\u0068\u003a1\u0030\u0034\u0070\u0074\u003b\u0068\u0065\u0069\u0067\u0068\u0074\u003a\u0037\u0036\u0070\u0074\u003b\u007a\u002d\u0069\u006e\u0064\u0065x\u003a\u0031\u003bv\u0069\u0073\u0069\u0062\u0069\u006c\u0069t\u0079\u003a\u0068\u0069\u0064\u0064\u0065\u006e");_fb .FillcolorAttr =_e .String ("\u0023f\u0062\u0066\u0036\u0064\u0036");_fb .StrokecolorAttr =_e .String ("\u0023e\u0064\u0065\u0061\u0061\u0031");_ce :=_bd .NewEG_ShapeElements ();_ce .Fill =_bd .NewFill ();_ce .Fill .Color2Attr =_e .String ("\u0023f\u0062\u0066\u0065\u0038\u0032");_ce .Fill .AngleAttr =_e .Float64 (-180);_ce .Fill .TypeAttr =_bd .ST_FillTypeGradient ;_ce .Fill .Fill =_bd .NewOfcFill ();_ce .Fill .Fill .ExtAttr =_bd .ST_ExtView ;_ce .Fill .Fill .TypeAttr =_bd .OfcST_FillTypeGradientUnscaled ;_fb .EG_ShapeElements =append (_fb .EG_ShapeElements ,_ce );_ffb :=_bd .NewEG_ShapeElements ();_ffb .Shadow =_bd .NewShadow ();_ffb .Shadow .OnAttr =_a .ST_TrueFalseT ;_ffb .Shadow .ObscuredAttr =_a .ST_TrueFalseT ;_fb .EG_ShapeElements =append (_fb .EG_ShapeElements ,_ffb );_ae :=_bd .NewEG_ShapeElements ();_ae .Path =_bd .NewPath ();_ae .Path .ConnecttypeAttr =_bd .OfcST_ConnectTypeNone ;_fb .EG_ShapeElements =append (_fb .EG_ShapeElements ,_ae );_dgb :=_bd .NewEG_ShapeElements ();_dgb .Textbox =_bd .NewTextbox ();_dgb .Textbox .StyleAttr =_e .String ("\u006d\u0073\u006f\u002ddi\u0072\u0065\u0063\u0074\u0069\u006f\u006e\u002d\u0061\u006c\u0074\u003a\u0061\u0075t\u006f");_fb .EG_ShapeElements =append (_fb .EG_ShapeElements ,_dgb );_df :=_bd .NewEG_ShapeElements ();_df .ClientData =_g .NewClientData ();_df .ClientData .ObjectTypeAttr =_g .ST_ObjectTypeNote ;_df .ClientData .MoveWithCells =_a .ST_TrueFalseBlankT ;_df .ClientData .SizeWithCells =_a .ST_TrueFalseBlankT ;_df .ClientData .Anchor =_e .String ("\u0031,\u0020\u0031\u0035\u002c\u0020\u0030\u002c\u0020\u0032\u002c\u00202\u002c\u0020\u0035\u0034\u002c\u0020\u0035\u002c\u0020\u0033");_df .ClientData .AutoFill =_a .ST_TrueFalseBlankFalse ;_df .ClientData .Row =_e .Int64 (row );_df .ClientData .Column =_e .Int64 (col );_fb .EG_ShapeElements =append (_fb .EG_ShapeElements ,_df );return _fb ;};