//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package powerpoint ;import (_d "encoding/xml";_c "fmt";_cd "github.com/unidoc/unioffice";);func (_a *CT_Empty )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// Validate validates the CT_Empty and its children
func (_de *CT_Empty )Validate ()error {return _de .ValidateWithPath ("\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079");};func NewIscomment ()*Iscomment {_cf :=&Iscomment {};_cf .CT_Empty =*NewCT_Empty ();return _cf };type CT_Empty struct{};func NewCT_Empty ()*CT_Empty {_e :=&CT_Empty {};return _e };func NewTextdata ()*Textdata {_ce :=&Textdata {};_ce .CT_Rel =*NewCT_Rel ();return _ce };func (_ga *Iscomment )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_ga .CT_Empty =*NewCT_Empty ();for {_gca ,_fg :=d .Token ();if _fg !=nil {return _c .Errorf ("p\u0061\u0072\u0073\u0069ng\u0020I\u0073\u0063\u006f\u006d\u006de\u006e\u0074\u003a\u0020\u0025\u0073",_fg );};if _bg ,_fab :=_gca .(_d .EndElement );_fab &&_bg .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the Iscomment and its children, prefixing error messages with path
func (_ee *Iscomment )ValidateWithPath (path string )error {if _eg :=_ee .CT_Empty .ValidateWithPath (path );_eg !=nil {return _eg ;};return nil ;};

// ValidateWithPath validates the CT_Empty and its children, prefixing error messages with path
func (_fa *CT_Empty )ValidateWithPath (path string )error {return nil };func (_dd *Textdata )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_dd .CT_Rel =*NewCT_Rel ();for _ ,_dde :=range start .Attr {if _dde .Name .Local =="\u0069\u0064"{_db ,_gaa :=_dde .Value ,error (nil );if _gaa !=nil {return _gaa ;};_dd .IdAttr =&_db ;continue ;};};for {_ed ,_af :=d .Token ();if _af !=nil {return _c .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0054\u0065\u0078t\u0064\u0061\u0074\u0061: \u0025\u0073",_af );};if _egb ,_cdab :=_ed .(_d .EndElement );_cdab &&_egb .Name ==start .Name {break ;};};return nil ;};func (_ad *CT_Empty )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_da ,_ec :=d .Token ();if _ec !=nil {return _c .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fE\u006d\u0070\u0074\u0079: \u0025\u0073",_ec );};if _ca ,_f :=_da .(_d .EndElement );_f &&_ca .Name ==start .Name {break ;};};return nil ;};func (_bd *Iscomment )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Attr =append (start .Attr ,_d .Attr {Name :_d .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_d .Attr {Name :_d .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0069s\u0063\u006f\u006d\u006d\u0065\u006et";return _bd .CT_Empty .MarshalXML (e ,start );};type CT_Rel struct{IdAttr *string ;};type Iscomment struct{CT_Empty };type Textdata struct{CT_Rel };

// ValidateWithPath validates the CT_Rel and its children, prefixing error messages with path
func (_cg *CT_Rel )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the Textdata and its children, prefixing error messages with path
func (_gb *Textdata )ValidateWithPath (path string )error {if _bc :=_gb .CT_Rel .ValidateWithPath (path );_bc !=nil {return _bc ;};return nil ;};func (_ff *CT_Rel )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for _ ,_be :=range start .Attr {if _be .Name .Local =="\u0069\u0064"{_beg ,_fe :=_be .Value ,error (nil );if _fe !=nil {return _fe ;};_ff .IdAttr =&_beg ;continue ;};};for {_ag ,_fb :=d .Token ();if _fb !=nil {return _c .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0052e\u006c\u003a\u0020\u0025\u0073",_fb );};if _gc ,_eb :=_ag .(_d .EndElement );_eb &&_gc .Name ==start .Name {break ;};};return nil ;};func (_g *CT_Rel )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {if _g .IdAttr !=nil {start .Attr =append (start .Attr ,_d .Attr {Name :_d .Name {Local :"\u0069\u0064"},Value :_c .Sprintf ("\u0025\u0076",*_g .IdAttr )});};e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func NewCT_Rel ()*CT_Rel {_ae :=&CT_Rel {};return _ae };

// Validate validates the Iscomment and its children
func (_dec *Iscomment )Validate ()error {return _dec .ValidateWithPath ("\u0049s\u0063\u006f\u006d\u006d\u0065\u006et");};func (_gcc *Textdata )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Attr =append (start .Attr ,_d .Attr {Name :_d .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_d .Attr {Name :_d .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061";return _gcc .CT_Rel .MarshalXML (e ,start );};

// Validate validates the CT_Rel and its children
func (_gg *CT_Rel )Validate ()error {return _gg .ValidateWithPath ("\u0043\u0054\u005f\u0052\u0065\u006c");};

// Validate validates the Textdata and its children
func (_cb *Textdata )Validate ()error {return _cb .ValidateWithPath ("\u0054\u0065\u0078\u0074\u0064\u0061\u0074\u0061");};func init (){_cd .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079",NewCT_Empty );_cd .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0052\u0065\u006c",NewCT_Rel );_cd .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0069s\u0063\u006f\u006d\u006d\u0065\u006et",NewIscomment );_cd .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061",NewTextdata );};