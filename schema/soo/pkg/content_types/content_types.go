//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package content_types ;import (_dg "encoding/xml";_cbbe "fmt";_cg "github.com/unidoc/unioffice";_df "regexp";);func (_eg *Override )UnmarshalXML (d *_dg .Decoder ,start _dg .StartElement )error {_eg .CT_Override =*NewCT_Override ();for _ ,_fe :=range start .Attr {if _fe .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_cdac ,_fg :=_fe .Value ,error (nil );if _fg !=nil {return _fg ;};_eg .ContentTypeAttr =_cdac ;continue ;};if _fe .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_fcc ,_bfe :=_fe .Value ,error (nil );if _bfe !=nil {return _bfe ;};_eg .PartNameAttr =_fcc ;continue ;};};for {_ggf ,_bbb :=d .Token ();if _bbb !=nil {return _cbbe .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u004f\u0076\u0065r\u0072\u0069\u0064\u0065: \u0025\u0073",_bbb );};if _ea ,_feb :=_ggf .(_dg .EndElement );_feb &&_ea .Name ==start .Name {break ;};};return nil ;};

// Validate validates the CT_Default and its children
func (_fddc *CT_Default )Validate ()error {return _fddc .ValidateWithPath ("\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074");};func NewCT_Override ()*CT_Override {_aba :=&CT_Override {};_aba .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";return _aba ;};func (_ggdc *Override )MarshalXML (e *_dg .Encoder ,start _dg .StartElement )error {return _ggdc .CT_Override .MarshalXML (e ,start );};

// Validate validates the Override and its children
func (_gg *Override )Validate ()error {return _gg .ValidateWithPath ("\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};const ST_ExtensionPattern ="\u0028\u005b\u0021\u0024\u0026\u0027\\\u0028\u005c\u0029\u005c\u002a\\\u002b\u002c\u003a\u003d\u005d\u007c(\u0025\u005b\u0030\u002d\u0039a\u002d\u0066\u0041\u002d\u0046\u005d\u005b\u0030\u002d\u0039\u0061\u002df\u0041\u002d\u0046\u005d\u0029\u007c\u005b\u003a\u0040\u005d\u007c\u005b\u0061\u002d\u007aA\u002d\u005a\u0030\u002d\u0039\u005c\u002d\u005f~\u005d\u0029\u002b";

// ValidateWithPath validates the CT_Types and its children, prefixing error messages with path
func (_gdb *CT_Types )ValidateWithPath (path string )error {for _ff ,_cbb :=range _gdb .Default {if _ddg :=_cbb .ValidateWithPath (_cbbe .Sprintf ("\u0025\u0073\u002f\u0044\u0065\u0066\u0061\u0075\u006ct\u005b\u0025\u0064\u005d",path ,_ff ));_ddg !=nil {return _ddg ;};};for _caf ,_ggd :=range _gdb .Override {if _aadc :=_ggd .ValidateWithPath (_cbbe .Sprintf ("\u0025s\u002fO\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u005b\u0025\u0064\u005d",path ,_caf ));_aadc !=nil {return _aadc ;};};return nil ;};

// Validate validates the CT_Types and its children
func (_bbc *CT_Types )Validate ()error {return _bbc .ValidateWithPath ("\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073");};type CT_Types struct{Default []*Default ;Override []*Override ;};var ST_ContentTypePatternRe =_df .MustCompile (ST_ContentTypePattern );

// ValidateWithPath validates the CT_Default and its children, prefixing error messages with path
func (_fd *CT_Default )ValidateWithPath (path string )error {if !ST_ExtensionPatternRe .MatchString (_fd .ExtensionAttr ){return _cbbe .Errorf ("\u0025s\u002f\u006d.\u0045\u0078\u0074\u0065n\u0073\u0069\u006fn\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074 m\u0061\u0074\u0063h\u0020\u0027%\u0073\u0027\u0020\u0028\u0068\u0061v\u0065\u0020%\u0076\u0029",path ,ST_ExtensionPatternRe ,_fd .ExtensionAttr );};if !ST_ContentTypePatternRe .MatchString (_fd .ContentTypeAttr ){return _cbbe .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_fd .ContentTypeAttr );};return nil ;};type Default struct{CT_Default };func NewOverride ()*Override {_abc :=&Override {};_abc .CT_Override =*NewCT_Override ();return _abc };func (_ddf *Default )MarshalXML (e *_dg .Encoder ,start _dg .StartElement )error {return _ddf .CT_Default .MarshalXML (e ,start );};func (_c *CT_Types )UnmarshalXML (d *_dg .Decoder ,start _dg .StartElement )error {_gaa :for {_ef ,_cbag :=d .Token ();if _cbag !=nil {return _cbag ;};switch _bga :=_ef .(type ){case _dg .StartElement :switch _bga .Name {case _dg .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_cgd :=NewDefault ();if _gb :=d .DecodeElement (_cgd ,&_bga );_gb !=nil {return _gb ;};_c .Default =append (_c .Default ,_cgd );case _dg .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_gad :=NewOverride ();if _bgg :=d .DecodeElement (_gad ,&_bga );_bgg !=nil {return _bgg ;};_c .Override =append (_c .Override ,_gad );default:_cg .Log ("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076",_bga .Name );if _ddge :=d .Skip ();_ddge !=nil {return _ddge ;};};case _dg .EndElement :break _gaa ;case _dg .CharData :};};return nil ;};func (_adf *Types )UnmarshalXML (d *_dg .Decoder ,start _dg .StartElement )error {_adf .CT_Types =*NewCT_Types ();_ge :for {_afa ,_ad :=d .Token ();if _ad !=nil {return _ad ;};switch _ddff :=_afa .(type ){case _dg .StartElement :switch _ddff .Name {case _dg .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_cccc :=NewDefault ();if _ccc :=d .DecodeElement (_cccc ,&_ddff );_ccc !=nil {return _ccc ;};_adf .Default =append (_adf .Default ,_cccc );case _dg .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_bgd :=NewOverride ();if _gae :=d .DecodeElement (_bgd ,&_ddff );_gae !=nil {return _gae ;};_adf .Override =append (_adf .Override ,_bgd );default:_cg .Log ("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0054\u0079\u0070e\u0073 \u0025\u0076",_ddff .Name );if _e :=d .Skip ();_e !=nil {return _e ;};};case _dg .EndElement :break _ge ;case _dg .CharData :};};return nil ;};func (_ga *CT_Default )UnmarshalXML (d *_dg .Decoder ,start _dg .StartElement )error {_ga .ExtensionAttr ="\u0078\u006d\u006c";_ga .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";for _ ,_ce :=range start .Attr {if _ce .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_aad ,_bd :=_ce .Value ,error (nil );if _bd !=nil {return _bd ;};_ga .ExtensionAttr =_aad ;continue ;};if _ce .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_cde ,_ae :=_ce .Value ,error (nil );if _ae !=nil {return _ae ;};_ga .ContentTypeAttr =_cde ;continue ;};};for {_gcb ,_bf :=d .Token ();if _bf !=nil {return _cbbe .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020%\u0073",_bf );};if _a ,_bdg :=_gcb .(_dg .EndElement );_bdg &&_a .Name ==start .Name {break ;};};return nil ;};func (_cdg *CT_Default )MarshalXML (e *_dg .Encoder ,start _dg .StartElement )error {start .Attr =append (start .Attr ,_dg .Attr {Name :_dg .Name {Local :"\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"},Value :_cbbe .Sprintf ("\u0025\u0076",_cdg .ExtensionAttr )});start .Attr =append (start .Attr ,_dg .Attr {Name :_dg .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_cbbe .Sprintf ("\u0025\u0076",_cdg .ContentTypeAttr )});e .EncodeToken (start );e .EncodeToken (_dg .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the Default and its children, prefixing error messages with path
func (_cb *Default )ValidateWithPath (path string )error {if _fc :=_cb .CT_Default .ValidateWithPath (path );_fc !=nil {return _fc ;};return nil ;};func NewCT_Default ()*CT_Default {_ffb :=&CT_Default {};_ffb .ExtensionAttr ="\u0078\u006d\u006c";_ffb .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";return _ffb ;};var ST_ExtensionPatternRe =_df .MustCompile (ST_ExtensionPattern );type Override struct{CT_Override };

// ValidateWithPath validates the Override and its children, prefixing error messages with path
func (_g *Override )ValidateWithPath (path string )error {if _gc :=_g .CT_Override .ValidateWithPath (path );_gc !=nil {return _gc ;};return nil ;};

// ValidateWithPath validates the Types and its children, prefixing error messages with path
func (_cc *Types )ValidateWithPath (path string )error {if _eca :=_cc .CT_Types .ValidateWithPath (path );_eca !=nil {return _eca ;};return nil ;};func (_ba *CT_Override )MarshalXML (e *_dg .Encoder ,start _dg .StartElement )error {start .Attr =append (start .Attr ,_dg .Attr {Name :_dg .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_cbbe .Sprintf ("\u0025\u0076",_ba .ContentTypeAttr )});start .Attr =append (start .Attr ,_dg .Attr {Name :_dg .Name {Local :"\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"},Value :_cbbe .Sprintf ("\u0025\u0076",_ba .PartNameAttr )});e .EncodeToken (start );e .EncodeToken (_dg .EndElement {Name :start .Name });return nil ;};

// Validate validates the CT_Override and its children
func (_gda *CT_Override )Validate ()error {return _gda .ValidateWithPath ("C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};func NewDefault ()*Default {_da :=&Default {};_da .CT_Default =*NewCT_Default ();return _da };func (_af *Default )UnmarshalXML (d *_dg .Decoder ,start _dg .StartElement )error {_af .CT_Default =*NewCT_Default ();for _ ,_afg :=range start .Attr {if _afg .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_ggb ,_b :=_afg .Value ,error (nil );if _b !=nil {return _b ;};_af .ExtensionAttr =_ggb ;continue ;};if _afg .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_bfge ,_dgg :=_afg .Value ,error (nil );if _dgg !=nil {return _dgg ;};_af .ContentTypeAttr =_bfge ;continue ;};};for {_fdf ,_bg :=d .Token ();if _bg !=nil {return _cbbe .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020\u0025\u0073",_bg );};if _fdd ,_dc :=_fdf .(_dg .EndElement );_dc &&_fdd .Name ==start .Name {break ;};};return nil ;};type Types struct{CT_Types };func (_cda *CT_Override )UnmarshalXML (d *_dg .Decoder ,start _dg .StartElement )error {_cda .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";for _ ,_ec :=range start .Attr {if _ec .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_bdf ,_ee :=_ec .Value ,error (nil );if _ee !=nil {return _ee ;};_cda .ContentTypeAttr =_bdf ;continue ;};if _ec .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_bfg ,_bbg :=_ec .Value ,error (nil );if _bbg !=nil {return _bbg ;};_cda .PartNameAttr =_bfg ;continue ;};};for {_bge ,_efg :=d .Token ();if _efg !=nil {return _cbbe .Errorf ("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025\u0073",_efg );};if _be ,_cd :=_bge .(_dg .EndElement );_cd &&_be .Name ==start .Name {break ;};};return nil ;};type CT_Default struct{ExtensionAttr string ;ContentTypeAttr string ;};func NewTypes ()*Types {_efd :=&Types {};_efd .CT_Types =*NewCT_Types ();return _efd };type CT_Override struct{ContentTypeAttr string ;PartNameAttr string ;};

// Validate validates the Default and its children
func (_ab *Default )Validate ()error {return _ab .ValidateWithPath ("\u0044e\u0066\u0061\u0075\u006c\u0074");};const ST_ContentTypePattern ="\u005e\\\u0070{\u004c\u0061\u0074\u0069\u006e\u007d\u002b\u002f\u002e\u002a\u0024";

// ValidateWithPath validates the CT_Override and its children, prefixing error messages with path
func (_ca *CT_Override )ValidateWithPath (path string )error {if !ST_ContentTypePatternRe .MatchString (_ca .ContentTypeAttr ){return _cbbe .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_ca .ContentTypeAttr );};return nil ;};func (_de *Types )MarshalXML (e *_dg .Encoder ,start _dg .StartElement )error {start .Attr =append (start .Attr ,_dg .Attr {Name :_dg .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s"});start .Attr =append (start .Attr ,_dg .Attr {Name :_dg .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0054\u0079\u0070e\u0073";return _de .CT_Types .MarshalXML (e ,start );};

// Validate validates the Types and its children
func (_bfb *Types )Validate ()error {return _bfb .ValidateWithPath ("\u0054\u0079\u0070e\u0073")};func NewCT_Types ()*CT_Types {_f :=&CT_Types {};return _f };func (_dd *CT_Types )MarshalXML (e *_dg .Encoder ,start _dg .StartElement )error {e .EncodeToken (start );if _dd .Default !=nil {_cba :=_dg .StartElement {Name :_dg .Name {Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}};for _ ,_cf :=range _dd .Default {e .EncodeElement (_cf ,_cba );};};if _dd .Override !=nil {_gdaf :=_dg .StartElement {Name :_dg .Name {Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}};for _ ,_gce :=range _dd .Override {e .EncodeElement (_gce ,_gdaf );};};e .EncodeToken (_dg .EndElement {Name :start .Name });return nil ;};func init (){_cg .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073",NewCT_Types );_cg .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074",NewCT_Default );_cg .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewCT_Override );_cg .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0054\u0079\u0070e\u0073",NewTypes );_cg .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0044e\u0066\u0061\u0075\u006c\u0074",NewDefault );_cg .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewOverride );};