//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package content_types ;import (_fed "encoding/xml";_bad "fmt";_ggb "github.com/unidoc/unioffice";_ce "regexp";);

// Validate validates the CT_Override and its children
func (_ge *CT_Override )Validate ()error {return _ge .ValidateWithPath ("C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};func (_fbb *CT_Types )UnmarshalXML (d *_fed .Decoder ,start _fed .StartElement )error {_gc :for {_bgd ,_efd :=d .Token ();if _efd !=nil {return _efd ;};switch _ag :=_bgd .(type ){case _fed .StartElement :switch _ag .Name {case _fed .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_aaa :=NewDefault ();if _dbe :=d .DecodeElement (_aaa ,&_ag );_dbe !=nil {return _dbe ;};_fbb .Default =append (_fbb .Default ,_aaa );case _fed .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_gce :=NewOverride ();if _fa :=d .DecodeElement (_gce ,&_ag );_fa !=nil {return _fa ;};_fbb .Override =append (_fbb .Override ,_gce );default:_ggb .Log ("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076",_ag .Name );if _deb :=d .Skip ();_deb !=nil {return _deb ;};};case _fed .EndElement :break _gc ;case _fed .CharData :};};return nil ;};func (_bf *Default )MarshalXML (e *_fed .Encoder ,start _fed .StartElement )error {return _bf .CT_Default .MarshalXML (e ,start );};

// ValidateWithPath validates the Types and its children, prefixing error messages with path
func (_gf *Types )ValidateWithPath (path string )error {if _f :=_gf .CT_Types .ValidateWithPath (path );_f !=nil {return _f ;};return nil ;};type Default struct{CT_Default };func (_gef *CT_Override )UnmarshalXML (d *_fed .Decoder ,start _fed .StartElement )error {_gef .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";for _ ,_edc :=range start .Attr {if _edc .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_fea ,_fe :=_edc .Value ,error (nil );if _fe !=nil {return _fe ;};_gef .ContentTypeAttr =_fea ;continue ;};if _edc .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_fgb ,_aag :=_edc .Value ,error (nil );if _aag !=nil {return _aag ;};_gef .PartNameAttr =_fgb ;continue ;};};for {_ef ,_bd :=d .Token ();if _bd !=nil {return _bad .Errorf ("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025\u0073",_bd );};if _ed ,_gb :=_ef .(_fed .EndElement );_gb &&_ed .Name ==start .Name {break ;};};return nil ;};func (_e *CT_Override )MarshalXML (e *_fed .Encoder ,start _fed .StartElement )error {start .Attr =append (start .Attr ,_fed .Attr {Name :_fed .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_bad .Sprintf ("\u0025\u0076",_e .ContentTypeAttr )});start .Attr =append (start .Attr ,_fed .Attr {Name :_fed .Name {Local :"\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"},Value :_bad .Sprintf ("\u0025\u0076",_e .PartNameAttr )});e .EncodeToken (start );e .EncodeToken (_fed .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the CT_Types and its children, prefixing error messages with path
func (_fd *CT_Types )ValidateWithPath (path string )error {for _cgc ,_fdf :=range _fd .Default {if _fg :=_fdf .ValidateWithPath (_bad .Sprintf ("\u0025\u0073\u002f\u0044\u0065\u0066\u0061\u0075\u006ct\u005b\u0025\u0064\u005d",path ,_cgc ));_fg !=nil {return _fg ;};};for _fef ,_ga :=range _fd .Override {if _dd :=_ga .ValidateWithPath (_bad .Sprintf ("\u0025s\u002fO\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u005b\u0025\u0064\u005d",path ,_fef ));_dd !=nil {return _dd ;};};return nil ;};type Types struct{CT_Types };func (_aa *Override )MarshalXML (e *_fed .Encoder ,start _fed .StartElement )error {return _aa .CT_Override .MarshalXML (e ,start );};

// ValidateWithPath validates the Default and its children, prefixing error messages with path
func (_a *Default )ValidateWithPath (path string )error {if _fc :=_a .CT_Default .ValidateWithPath (path );_fc !=nil {return _fc ;};return nil ;};func (_gbc *Override )UnmarshalXML (d *_fed .Decoder ,start _fed .StartElement )error {_gbc .CT_Override =*NewCT_Override ();for _ ,_fedd :=range start .Attr {if _fedd .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_beg ,_gg :=_fedd .Value ,error (nil );if _gg !=nil {return _gg ;};_gbc .ContentTypeAttr =_beg ;continue ;};if _fedd .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_bfb ,_efg :=_fedd .Value ,error (nil );if _efg !=nil {return _efg ;};_gbc .PartNameAttr =_bfb ;continue ;};};for {_d ,_cdg :=d .Token ();if _cdg !=nil {return _bad .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u004f\u0076\u0065r\u0072\u0069\u0064\u0065: \u0025\u0073",_cdg );};if _efb ,_abe :=_d .(_fed .EndElement );_abe &&_efb .Name ==start .Name {break ;};};return nil ;};func NewCT_Default ()*CT_Default {_bfe :=&CT_Default {};_bfe .ExtensionAttr ="\u0078\u006d\u006c";_bfe .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";return _bfe ;};func (_be *Default )UnmarshalXML (d *_fed .Decoder ,start _fed .StartElement )error {_be .CT_Default =*NewCT_Default ();for _ ,_egb :=range start .Attr {if _egb .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_abb ,_dff :=_egb .Value ,error (nil );if _dff !=nil {return _dff ;};_be .ExtensionAttr =_abb ;continue ;};if _egb .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_ab ,_aeg :=_egb .Value ,error (nil );if _aeg !=nil {return _aeg ;};_be .ContentTypeAttr =_ab ;continue ;};};for {_df ,_cd :=d .Token ();if _cd !=nil {return _bad .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020\u0025\u0073",_cd );};if _cb ,_c :=_df .(_fed .EndElement );_c &&_cb .Name ==start .Name {break ;};};return nil ;};

// Validate validates the Default and its children
func (_cf *Default )Validate ()error {return _cf .ValidateWithPath ("\u0044e\u0066\u0061\u0075\u006c\u0074");};

// Validate validates the CT_Types and its children
func (_eefb *CT_Types )Validate ()error {return _eefb .ValidateWithPath ("\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073");};func (_gbff *CT_Types )MarshalXML (e *_fed .Encoder ,start _fed .StartElement )error {e .EncodeToken (start );if _gbff .Default !=nil {_fgg :=_fed .StartElement {Name :_fed .Name {Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}};for _ ,_b :=range _gbff .Default {e .EncodeElement (_b ,_fgg );};};if _gbff .Override !=nil {_ea :=_fed .StartElement {Name :_fed .Name {Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}};for _ ,_ecf :=range _gbff .Override {e .EncodeElement (_ecf ,_ea );};};e .EncodeToken (_fed .EndElement {Name :start .Name });return nil ;};func NewOverride ()*Override {_dgg :=&Override {};_dgg .CT_Override =*NewCT_Override ();return _dgg };var ST_ContentTypePatternRe =_ce .MustCompile (ST_ContentTypePattern );const ST_ExtensionPattern ="\u0028\u005b\u0021\u0024\u0026\u0027\\\u0028\u005c\u0029\u005c\u002a\\\u002b\u002c\u003a\u003d\u005d\u007c(\u0025\u005b\u0030\u002d\u0039a\u002d\u0066\u0041\u002d\u0046\u005d\u005b\u0030\u002d\u0039\u0061\u002df\u0041\u002d\u0046\u005d\u0029\u007c\u005b\u003a\u0040\u005d\u007c\u005b\u0061\u002d\u007aA\u002d\u005a\u0030\u002d\u0039\u005c\u002d\u005f~\u005d\u0029\u002b";

// ValidateWithPath validates the Override and its children, prefixing error messages with path
func (_eef *Override )ValidateWithPath (path string )error {if _fdc :=_eef .CT_Override .ValidateWithPath (path );_fdc !=nil {return _fdc ;};return nil ;};func (_ad *Types )MarshalXML (e *_fed .Encoder ,start _fed .StartElement )error {start .Attr =append (start .Attr ,_fed .Attr {Name :_fed .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s"});start .Attr =append (start .Attr ,_fed .Attr {Name :_fed .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0054\u0079\u0070e\u0073";return _ad .CT_Types .MarshalXML (e ,start );};

// Validate validates the Types and its children
func (_g *Types )Validate ()error {return _g .ValidateWithPath ("\u0054\u0079\u0070e\u0073")};

// ValidateWithPath validates the CT_Default and its children, prefixing error messages with path
func (_dfa *CT_Default )ValidateWithPath (path string )error {if !ST_ExtensionPatternRe .MatchString (_dfa .ExtensionAttr ){return _bad .Errorf ("\u0025s\u002f\u006d.\u0045\u0078\u0074\u0065n\u0073\u0069\u006fn\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074 m\u0061\u0074\u0063h\u0020\u0027%\u0073\u0027\u0020\u0028\u0068\u0061v\u0065\u0020%\u0076\u0029",path ,ST_ExtensionPatternRe ,_dfa .ExtensionAttr );};if !ST_ContentTypePatternRe .MatchString (_dfa .ContentTypeAttr ){return _bad .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_dfa .ContentTypeAttr );};return nil ;};func NewCT_Override ()*CT_Override {_fb :=&CT_Override {};_fb .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";return _fb ;};func (_abf *CT_Default )MarshalXML (e *_fed .Encoder ,start _fed .StartElement )error {start .Attr =append (start .Attr ,_fed .Attr {Name :_fed .Name {Local :"\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"},Value :_bad .Sprintf ("\u0025\u0076",_abf .ExtensionAttr )});start .Attr =append (start .Attr ,_fed .Attr {Name :_fed .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_bad .Sprintf ("\u0025\u0076",_abf .ContentTypeAttr )});e .EncodeToken (start );e .EncodeToken (_fed .EndElement {Name :start .Name });return nil ;};func (_ec *Types )UnmarshalXML (d *_fed .Decoder ,start _fed .StartElement )error {_ec .CT_Types =*NewCT_Types ();_db :for {_eff ,_cef :=d .Token ();if _cef !=nil {return _cef ;};switch _fgd :=_eff .(type ){case _fed .StartElement :switch _fgd .Name {case _fed .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_eea :=NewDefault ();if _fbc :=d .DecodeElement (_eea ,&_fgd );_fbc !=nil {return _fbc ;};_ec .Default =append (_ec .Default ,_eea );case _fed .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_bg :=NewOverride ();if _ee :=d .DecodeElement (_bg ,&_fgd );_ee !=nil {return _ee ;};_ec .Override =append (_ec .Override ,_bg );default:_ggb .Log ("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0054\u0079\u0070e\u0073 \u0025\u0076",_fgd .Name );if _bc :=d .Skip ();_bc !=nil {return _bc ;};};case _fed .EndElement :break _db ;case _fed .CharData :};};return nil ;};func (_cdc *CT_Default )UnmarshalXML (d *_fed .Decoder ,start _fed .StartElement )error {_cdc .ExtensionAttr ="\u0078\u006d\u006c";_cdc .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";for _ ,_eb :=range start .Attr {if _eb .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_afb ,_dc :=_eb .Value ,error (nil );if _dc !=nil {return _dc ;};_cdc .ExtensionAttr =_afb ;continue ;};if _eb .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_fbf ,_age :=_eb .Value ,error (nil );if _age !=nil {return _age ;};_cdc .ContentTypeAttr =_fbf ;continue ;};};for {_cdb ,_ae :=d .Token ();if _ae !=nil {return _bad .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020%\u0073",_ae );};if _fcc ,_bdg :=_cdb .(_fed .EndElement );_bdg &&_fcc .Name ==start .Name {break ;};};return nil ;};func NewDefault ()*Default {_gbf :=&Default {};_gbf .CT_Default =*NewCT_Default ();return _gbf };func NewCT_Types ()*CT_Types {_af :=&CT_Types {};return _af };

// ValidateWithPath validates the CT_Override and its children, prefixing error messages with path
func (_da *CT_Override )ValidateWithPath (path string )error {if !ST_ContentTypePatternRe .MatchString (_da .ContentTypeAttr ){return _bad .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_da .ContentTypeAttr );};return nil ;};

// Validate validates the CT_Default and its children
func (_afd *CT_Default )Validate ()error {return _afd .ValidateWithPath ("\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074");};type CT_Default struct{ExtensionAttr string ;ContentTypeAttr string ;};type Override struct{CT_Override };const ST_ContentTypePattern ="\u005e\\\u0070{\u004c\u0061\u0074\u0069\u006e\u007d\u002b\u002f\u002e\u002a\u0024";var ST_ExtensionPatternRe =_ce .MustCompile (ST_ExtensionPattern );type CT_Types struct{Default []*Default ;Override []*Override ;};type CT_Override struct{ContentTypeAttr string ;PartNameAttr string ;};

// Validate validates the Override and its children
func (_de *Override )Validate ()error {return _de .ValidateWithPath ("\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};func NewTypes ()*Types {_fdb :=&Types {};_fdb .CT_Types =*NewCT_Types ();return _fdb };func init (){_ggb .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073",NewCT_Types );_ggb .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074",NewCT_Default );_ggb .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewCT_Override );_ggb .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0054\u0079\u0070e\u0073",NewTypes );_ggb .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0044e\u0066\u0061\u0075\u006c\u0074",NewDefault );_ggb .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewOverride );};