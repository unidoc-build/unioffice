//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package terms ;import (_b "encoding/xml";_e "fmt";_bg "github.com/unidoc/unioffice";_f "github.com/unidoc/unioffice/schema/purl.org/dc/elements";);func NewISO3166 ()*ISO3166 {_befe :=&ISO3166 {};return _befe };func (_ega *RFC1766 )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0052F\u0043\u0031\u0037\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};func NewElementOrRefinementContainer ()*ElementOrRefinementContainer {_gcb :=&ElementOrRefinementContainer {};return _gcb ;};

// Validate validates the ElementsAndRefinementsGroupChoice and its children
func (_fa *ElementsAndRefinementsGroupChoice )Validate ()error {return _fa .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006et\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0043h\u006f\u0069\u0063\u0065");};

// ValidateWithPath validates the ElementsAndRefinementsGroup and its children, prefixing error messages with path
func (_eea *ElementsAndRefinementsGroup )ValidateWithPath (path string )error {for _ccf ,_ga :=range _eea .Choice {if _abc :=_ga .ValidateWithPath (_e .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_ccf ));_abc !=nil {return _abc ;};};return nil ;};func (_fg *ElementsAndRefinementsGroup )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {_bf :for {_bga ,_dfb :=d .Token ();if _dfb !=nil {return _dfb ;};switch _ba :=_bga .(type ){case _b .StartElement :switch _ba .Name {case _b .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_ggf :=NewElementsAndRefinementsGroupChoice ();if _bdf :=d .DecodeElement (&_ggf .Any ,&_ba );_bdf !=nil {return _bdf ;};_fg .Choice =append (_fg .Choice ,_ggf );default:_bg .Log ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006ce\u006d\u0065\u006e\u0074\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0020\u0025\u0076",_ba .Name );if _aag :=d .Skip ();_aag !=nil {return _aag ;};};case _b .EndElement :break _bf ;case _b .CharData :};};return nil ;};func NewIMT ()*IMT {_dc :=&IMT {};return _dc };func (_fc *DCMIType )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};type DDC struct{};

// ValidateWithPath validates the Box and its children, prefixing error messages with path
func (_cg *Box )ValidateWithPath (path string )error {return nil };

// Validate validates the UDC and its children
func (_cff *UDC )Validate ()error {return _cff .ValidateWithPath ("\u0055\u0044\u0043")};func NewW3CDTF ()*W3CDTF {_dfe :=&W3CDTF {};return _dfe };func (_cae *ElementsAndRefinementsGroupChoice )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {_da :for {_ea ,_eec :=d .Token ();if _eec !=nil {return _eec ;};switch _ce :=_ea .(type ){case _b .StartElement :switch _ce .Name {case _b .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_cgd :=_f .NewAny ();if _bgaf :=d .DecodeElement (_cgd ,&_ce );_bgaf !=nil {return _bgaf ;};_cae .Any =append (_cae .Any ,_cgd );default:_bg .Log ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0041\u006ed\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006fu\u0070\u0043\u0068o\u0069\u0063\u0065\u0020\u0025\u0076",_ce .Name );if _bgb :=d .Skip ();_bgb !=nil {return _bgb ;};};case _b .EndElement :break _da ;case _b .CharData :};};return nil ;};func (_be *Box )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_cc ,_g :=d .Token ();if _g !=nil {return _e .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0042\u006f\u0078\u003a\u0020\u0025\u0073",_g );};if _fd ,_ed :=_cc .(_b .EndElement );_ed &&_fd .Name ==start .Name {break ;};};return nil ;};

// Validate validates the IMT and its children
func (_abe *IMT )Validate ()error {return _abe .ValidateWithPath ("\u0049\u004d\u0054")};func NewRFC3066 ()*RFC3066 {_cade :=&RFC3066 {};return _cade };func NewLCC ()*LCC {_ae :=&LCC {};return _ae };func (_bcg *ISO639_2 )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};func (_eaa *URI )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_abca ,_bdg :=d .Token ();if _bdg !=nil {return _e .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0052\u0049\u003a\u0020\u0025\u0073",_bdg );};if _gbea ,_ecc :=_abca .(_b .EndElement );_ecc &&_gbea .Name ==start .Name {break ;};};return nil ;};type Period struct{};

// ValidateWithPath validates the RFC1766 and its children, prefixing error messages with path
func (_cda *RFC1766 )ValidateWithPath (path string )error {return nil };type MESH struct{};type UDC struct{};func (_beg *W3CDTF )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0057\u0033\u0043\u0044\u0054\u0046";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the ElementsAndRefinementsGroupChoice and its children, prefixing error messages with path
func (_efd *ElementsAndRefinementsGroupChoice )ValidateWithPath (path string )error {for _bge ,_fgbg :=range _efd .Any {if _acef :=_fgbg .ValidateWithPath (_e .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_bge ));_acef !=nil {return _acef ;};};return nil ;};func (_gbg *ISO3166 )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_fgbf ,_cee :=d .Token ();if _cee !=nil {return _e .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0049\u0053\u004f\u0033\u0031\u0036\u0036\u003a\u0020\u0025\u0073",_cee );};if _faa ,_gca :=_fgbf .(_b .EndElement );_gca &&_faa .Name ==start .Name {break ;};};return nil ;};type W3CDTF struct{};

// Validate validates the LCC and its children
func (_cb *LCC )Validate ()error {return _cb .ValidateWithPath ("\u004c\u0043\u0043")};

// Validate validates the RFC3066 and its children
func (_cbe *RFC3066 )Validate ()error {return _cbe .ValidateWithPath ("\u0052F\u0043\u0033\u0030\u0036\u0036");};func (_ebd *RFC3066 )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0052F\u0043\u0033\u0030\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};type ISO3166 struct{};type IMT struct{};

// Validate validates the TGN and its children
func (_dbe *TGN )Validate ()error {return _dbe .ValidateWithPath ("\u0054\u0047\u004e")};func (_ecbc *LCSH )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_ff ,_fe :=d .Token ();if _fe !=nil {return _e .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004c\u0043\u0053\u0048\u003a\u0020\u0025\u0073",_fe );};if _afe ,_aee :=_ff .(_b .EndElement );_aee &&_afe .Name ==start .Name {break ;};};return nil ;};type URI struct{};type DCMIType struct{};

// ValidateWithPath validates the URI and its children, prefixing error messages with path
func (_efa *URI )ValidateWithPath (path string )error {return nil };func (_fee *W3CDTF )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_bad ,_ddc :=d .Token ();if _ddc !=nil {return _e .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u00573\u0043\u0044T\u0046\u003a\u0020\u0025\u0073",_ddc );};if _bec ,_fda :=_bad .(_b .EndElement );_fda &&_bec .Name ==start .Name {break ;};};return nil ;};func (_cbb *TGN )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0054\u0047\u004e";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};func NewRFC1766 ()*RFC1766 {_abba :=&RFC1766 {};return _abba };

// ValidateWithPath validates the ISO639_2 and its children, prefixing error messages with path
func (_bca *ISO639_2 )ValidateWithPath (path string )error {return nil };

// Validate validates the Period and its children
func (_eag *Period )Validate ()error {return _eag .ValidateWithPath ("\u0050\u0065\u0072\u0069\u006f\u0064");};func NewBox ()*Box {_c :=&Box {};return _c };type RFC1766 struct{};type Point struct{};type ElementsAndRefinementsGroupChoice struct{Any []*_f .Any ;};

// ValidateWithPath validates the ISO3166 and its children, prefixing error messages with path
func (_bce *ISO3166 )ValidateWithPath (path string )error {return nil };func NewPoint ()*Point {_edd :=&Point {};return _edd };type ElementOrRefinementContainer struct{Choice []*ElementsAndRefinementsGroupChoice ;};

// ValidateWithPath validates the LCSH and its children, prefixing error messages with path
func (_faf *LCSH )ValidateWithPath (path string )error {return nil };func (_gff *Period )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0050\u0065\u0072\u0069\u006f\u0064";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};func NewURI ()*URI {_caed :=&URI {};return _caed };

// Validate validates the LCSH and its children
func (_gcg *LCSH )Validate ()error {return _gcg .ValidateWithPath ("\u004c\u0043\u0053\u0048")};

// Validate validates the URI and its children
func (_deec *URI )Validate ()error {return _deec .ValidateWithPath ("\u0055\u0052\u0049")};

// ValidateWithPath validates the LCC and its children, prefixing error messages with path
func (_cdf *LCC )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the ElementOrRefinementContainer and its children, prefixing error messages with path
func (_ecb *ElementOrRefinementContainer )ValidateWithPath (path string )error {for _bd ,_ace :=range _ecb .Choice {if _dg :=_ace .ValidateWithPath (_e .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_bd ));_dg !=nil {return _dg ;};};return nil ;};

// Validate validates the Point and its children
func (_dcaf *Point )Validate ()error {return _dcaf .ValidateWithPath ("\u0050\u006f\u0069n\u0074")};

// ValidateWithPath validates the Point and its children, prefixing error messages with path
func (_aff *Point )ValidateWithPath (path string )error {return nil };func NewMESH ()*MESH {_cfb :=&MESH {};return _cfb };type TGN struct{};

// Validate validates the DCMIType and its children
func (_gc *DCMIType )Validate ()error {return _gc .ValidateWithPath ("\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065");};type LCSH struct{};func (_gg *ElementOrRefinementContainer )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072";e .EncodeToken (start );if _gg .Choice !=nil {for _ ,_bc :=range _gg .Choice {_bc .MarshalXML (e ,_b .StartElement {});};};e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};func (_gb *ElementOrRefinementContainer )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {_gge :for {_dff ,_caa :=d .Token ();if _caa !=nil {return _caa ;};switch _eb :=_dff .(type ){case _b .StartElement :switch _eb .Name {case _b .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_ab :=NewElementsAndRefinementsGroupChoice ();if _cd :=d .DecodeElement (&_ab .Any ,&_eb );_cd !=nil {return _cd ;};_gb .Choice =append (_gb .Choice ,_ab );default:_bg .Log ("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020E\u006c\u0065\u006d\u0065\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065n\u0074\u0043on\u0074\u0061\u0069n\u0065\u0072\u0020\u0025\u0076",_eb .Name );if _acc :=d .Skip ();_acc !=nil {return _acc ;};};case _b .EndElement :break _gge ;case _b .CharData :};};return nil ;};func (_eff *ISO3166 )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0049S\u004f\u0033\u0031\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the Period and its children, prefixing error messages with path
func (_dec *Period )ValidateWithPath (path string )error {return nil };

// Validate validates the ElementOrRefinementContainer and its children
func (_abb *ElementOrRefinementContainer )Validate ()error {return _abb .ValidateWithPath ("\u0045\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072");};func (_dfa *MESH )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_cad ,_ecba :=d .Token ();if _ecba !=nil {return _e .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004d\u0045\u0053\u0048\u003a\u0020\u0025\u0073",_ecba );};if _gcgf ,_gbe :=_cad .(_b .EndElement );_gbe &&_gcgf .Name ==start .Name {break ;};};return nil ;};

// Validate validates the DDC and its children
func (_df *DDC )Validate ()error {return _df .ValidateWithPath ("\u0044\u0044\u0043")};func NewLCSH ()*LCSH {_dbb :=&LCSH {};return _dbb };func (_gfc *Point )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0050\u006f\u0069n\u0074";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};

// Validate validates the W3CDTF and its children
func (_deda *W3CDTF )Validate ()error {return _deda .ValidateWithPath ("\u0057\u0033\u0043\u0044\u0054\u0046");};func (_beac *Point )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_abg ,_gfdd :=d .Token ();if _gfdd !=nil {return _e .Errorf ("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0050\u006f\u0069\u006et\u003a\u0020\u0025\u0073",_gfdd );};if _dag ,_gae :=_abg .(_b .EndElement );_gae &&_dag .Name ==start .Name {break ;};};return nil ;};func (_cadf *Period )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_bcea ,_edb :=d .Token ();if _edb !=nil {return _e .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0050e\u0072\u0069o\u0064\u003a\u0020\u0025\u0073",_edb );};if _dca ,_add :=_bcea .(_b .EndElement );_add &&_dca .Name ==start .Name {break ;};};return nil ;};func (_bab *ElementsAndRefinementsGroupChoice )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {if _bab .Any !=nil {_fgb :=_b .StartElement {Name :_b .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};for _ ,_cgc :=range _bab .Any {e .EncodeElement (_cgc ,_fgb );};};return nil ;};func NewElementsAndRefinementsGroup ()*ElementsAndRefinementsGroup {_bdb :=&ElementsAndRefinementsGroup {};return _bdb ;};type RFC3066 struct{};func (_bb *DDC )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0044\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};func (_ggb *LCSH )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u004c\u0043\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};type Box struct{};func (_af *DDC )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_ged ,_acb :=d .Token ();if _acb !=nil {return _e .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0044\u0044\u0043\u003a\u0020\u0025\u0073",_acb );};if _cca ,_cga :=_ged .(_b .EndElement );_cga &&_cca .Name ==start .Name {break ;};};return nil ;};func NewDDC ()*DDC {_ac :=&DDC {};return _ac };

// ValidateWithPath validates the RFC3066 and its children, prefixing error messages with path
func (_ded *RFC3066 )ValidateWithPath (path string )error {return nil };

// Validate validates the RFC1766 and its children
func (_fff *RFC1766 )Validate ()error {return _fff .ValidateWithPath ("\u0052F\u0043\u0031\u0037\u0036\u0036");};

// ValidateWithPath validates the MESH and its children, prefixing error messages with path
func (_gfd *MESH )ValidateWithPath (path string )error {return nil };

// Validate validates the ElementsAndRefinementsGroup and its children
func (_bfa *ElementsAndRefinementsGroup )Validate ()error {return _bfa .ValidateWithPath ("E\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070");};

// ValidateWithPath validates the TGN and its children, prefixing error messages with path
func (_daga *TGN )ValidateWithPath (path string )error {return nil };func (_geg *ElementsAndRefinementsGroup )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {if _geg .Choice !=nil {for _ ,_ecg :=range _geg .Choice {_ecg .MarshalXML (e ,_b .StartElement {});};};return nil ;};func (_ca *Box )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0042\u006f\u0078";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};

// Validate validates the ISO3166 and its children
func (_afaa *ISO3166 )Validate ()error {return _afaa .ValidateWithPath ("\u0049S\u004f\u0033\u0031\u0036\u0036");};func (_ec *DCMIType )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_d ,_bea :=d .Token ();if _bea !=nil {return _e .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0044\u0043\u004dI\u0054\u0079\u0070\u0065: \u0025\u0073",_bea );};if _caf ,_ee :=_d .(_b .EndElement );_ee &&_caf .Name ==start .Name {break ;};};return nil ;};func NewUDC ()*UDC {_ggfa :=&UDC {};return _ggfa };

// ValidateWithPath validates the DDC and its children, prefixing error messages with path
func (_gf *DDC )ValidateWithPath (path string )error {return nil };func NewElementsAndRefinementsGroupChoice ()*ElementsAndRefinementsGroupChoice {_bfd :=&ElementsAndRefinementsGroupChoice {};return _bfd ;};type ElementsAndRefinementsGroup struct{Choice []*ElementsAndRefinementsGroupChoice ;};func (_daf *RFC3066 )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_aabe ,_efdd :=d .Token ();if _efdd !=nil {return _e .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0033\u0030\u0036\u0036\u003a\u0020\u0025\u0073",_efdd );};if _egc ,_dba :=_aabe .(_b .EndElement );_dba &&_egc .Name ==start .Name {break ;};};return nil ;};func (_eg *ISO639_2 )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_cf ,_gfb :=d .Token ();if _gfb !=nil {return _e .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0049\u0053\u004f6\u0033\u0039\u005f\u0032: \u0025\u0073",_gfb );};if _aab ,_ag :=_cf .(_b .EndElement );_ag &&_aab .Name ==start .Name {break ;};};return nil ;};func NewPeriod ()*Period {_bfac :=&Period {};return _bfac };func (_daa *LCC )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_bgf ,_de :=d .Token ();if _de !=nil {return _e .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u004c\u0043\u0043\u003a\u0020\u0025\u0073",_de );};if _gfbb ,_cafg :=_bgf .(_b .EndElement );_cafg &&_gfbb .Name ==start .Name {break ;};};return nil ;};func (_fb *UDC )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_bag ,_ebb :=d .Token ();if _ebb !=nil {return _e .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0044\u0043\u003a\u0020\u0025\u0073",_ebb );};if _aac ,_agb :=_bag .(_b .EndElement );_agb &&_aac .Name ==start .Name {break ;};};return nil ;};type ISO639_2 struct{};func NewDCMIType ()*DCMIType {_ge :=&DCMIType {};return _ge };func (_aaga *RFC1766 )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_cac ,_cgda :=d .Token ();if _cgda !=nil {return _e .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0031\u0037\u0036\u0036\u003a\u0020\u0025\u0073",_cgda );};if _bfb ,_eeae :=_cac .(_b .EndElement );_eeae &&_bfb .Name ==start .Name {break ;};};return nil ;};func (_cab *TGN )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_gef ,_gag :=d .Token ();if _gag !=nil {return _e .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0054\u0047\u004e\u003a\u0020\u0025\u0073",_gag );};if _bbc ,_gfe :=_gef .(_b .EndElement );_gfe &&_bbc .Name ==start .Name {break ;};};return nil ;};func NewISO639_2 ()*ISO639_2 {_adc :=&ISO639_2 {};return _adc };func (_gd *IMT )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_bef ,_ad :=d .Token ();if _ad !=nil {return _e .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0049\u004d\u0054\u003a\u0020\u0025\u0073",_ad );};if _fgf ,_beab :=_bef .(_b .EndElement );_beab &&_fgf .Name ==start .Name {break ;};};return nil ;};func (_gfdg *URI )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0055\u0052\u0049";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};type LCC struct{};

// ValidateWithPath validates the DCMIType and its children, prefixing error messages with path
func (_cag *DCMIType )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the W3CDTF and its children, prefixing error messages with path
func (_aae *W3CDTF )ValidateWithPath (path string )error {return nil };func (_afa *IMT )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0049\u004d\u0054";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};func (_eaf *MESH )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u004d\u0045\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};

// Validate validates the ISO639_2 and its children
func (_db *ISO639_2 )Validate ()error {return _db .ValidateWithPath ("\u0049\u0053\u004f\u0036\u0033\u0039\u005f\u0032");};

// Validate validates the MESH and its children
func (_dee *MESH )Validate ()error {return _dee .ValidateWithPath ("\u004d\u0045\u0053\u0048")};func (_cfd *UDC )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0055\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the UDC and its children, prefixing error messages with path
func (_aea *UDC )ValidateWithPath (path string )error {return nil };

// Validate validates the Box and its children
func (_aa *Box )Validate ()error {return _aa .ValidateWithPath ("\u0042\u006f\u0078")};func NewTGN ()*TGN {_dd :=&TGN {};return _dd };func (_ecga *LCC )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u004c\u0043\u0043";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the IMT and its children, prefixing error messages with path
func (_bdfg *IMT )ValidateWithPath (path string )error {return nil };func init (){_bg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0053\u0048",NewLCSH );_bg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004d\u0045\u0053\u0048",NewMESH );_bg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0044\u0043",NewDDC );_bg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0043",NewLCC );_bg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0044\u0043",NewUDC );_bg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u0065\u0072\u0069\u006f\u0064",NewPeriod );_bg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0057\u0033\u0043\u0044\u0054\u0046",NewW3CDTF );_bg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065",NewDCMIType );_bg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u004d\u0054",NewIMT );_bg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0052\u0049",NewURI );_bg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032",NewISO639_2 );_bg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0031\u0037\u0036\u0036",NewRFC1766 );_bg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0033\u0030\u0036\u0036",NewRFC3066 );_bg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u006f\u0069n\u0074",NewPoint );_bg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049S\u004f\u0033\u0031\u0036\u0036",NewISO3166 );_bg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0042\u006f\u0078",NewBox );_bg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0054\u0047\u004e",NewTGN );_bg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072",NewElementOrRefinementContainer );_bg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","e\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070",NewElementsAndRefinementsGroup );};