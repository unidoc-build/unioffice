//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package elements ;import (_g "encoding/xml";_cc "fmt";_ada "github.com/unidoc/unioffice";);type ElementContainer struct{Choice []*ElementsGroupChoice ;};func (_ge *ElementsGroupChoice )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {if _ge .Any !=nil {_dg :=_g .StartElement {Name :_g .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};for _ ,_aafd :=range _ge .Any {e .EncodeElement (_aafd ,_dg );};};return nil ;};

// ValidateWithPath validates the ElementContainer and its children, prefixing error messages with path
func (_ac *ElementContainer )ValidateWithPath (path string )error {for _aa ,_a :=range _ac .Choice {if _ea :=_a .ValidateWithPath (_cc .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_aa ));_ea !=nil {return _ea ;};};return nil ;};func NewAny ()*Any {_efd :=&Any {};_efd .SimpleLiteral =*NewSimpleLiteral ();return _efd };func (_dd *ElementContainer )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0065\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072";e .EncodeToken (start );if _dd .Choice !=nil {for _ ,_ecac :=range _dd .Choice {_ecac .MarshalXML (e ,_g .StartElement {});};};e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the ElementsGroup and its children, prefixing error messages with path
func (_fdd *ElementsGroup )ValidateWithPath (path string )error {for _cdc ,_ee :=range _fdd .Choice {if _eb :=_ee .ValidateWithPath (_cc .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_cdc ));_eb !=nil {return _eb ;};};return nil ;};func (_afb *Any )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {_afb .SimpleLiteral =*NewSimpleLiteral ();for {_bb ,_de :=d .Token ();if _de !=nil {return _cc .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0041\u006e\u0079\u003a\u0020\u0025\u0073",_de );};if _fgg ,_ebf :=_bb .(_g .EndElement );_ebf &&_fgg .Name ==start .Name {break ;};};return nil ;};func NewElementContainer ()*ElementContainer {_fdf :=&ElementContainer {};return _fdf };func NewElementsGroup ()*ElementsGroup {_d :=&ElementsGroup {};return _d };type ElementsGroup struct{Choice []*ElementsGroupChoice ;};func (_ce *SimpleLiteral )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};func (_ef *ElementsGroup )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {_ebb :for {_cdb ,_dc :=d .Token ();if _dc !=nil {return _dc ;};switch _af :=_cdb .(type ){case _g .StartElement :switch _af .Name {case _g .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_feg :=NewElementsGroupChoice ();if _ae :=d .DecodeElement (&_feg .Any ,&_af );_ae !=nil {return _ae ;};_ef .Choice =append (_ef .Choice ,_feg );default:_ada .Log ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006de\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070 \u0025\u0076",_af .Name );if _ec :=d .Skip ();_ec !=nil {return _ec ;};};case _g .EndElement :break _ebb ;case _g .CharData :};};return nil ;};func (_dfb *ElementsGroupChoice )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {_gce :for {_fe ,_ca :=d .Token ();if _ca !=nil {return _ca ;};switch _aaf :=_fe .(type ){case _g .StartElement :switch _aaf .Name {case _g .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_fa :=NewAny ();if _cee :=d .DecodeElement (_fa ,&_aaf );_cee !=nil {return _cee ;};_dfb .Any =append (_dfb .Any ,_fa );default:_ada .Log ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072ou\u0070\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076",_aaf .Name );if _fb :=d .Skip ();_fb !=nil {return _fb ;};};case _g .EndElement :break _gce ;case _g .CharData :};};return nil ;};func NewElementsGroupChoice ()*ElementsGroupChoice {_fgc :=&ElementsGroupChoice {};return _fgc };

// ValidateWithPath validates the ElementsGroupChoice and its children, prefixing error messages with path
func (_bee *ElementsGroupChoice )ValidateWithPath (path string )error {for _aae ,_fdg :=range _bee .Any {if _e :=_fdg .ValidateWithPath (_cc .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_aae ));_e !=nil {return _e ;};};return nil ;};type SimpleLiteral struct{};func (_bg *ElementContainer )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {_c :for {_dea ,_bege :=d .Token ();if _bege !=nil {return _bege ;};switch _gc :=_dea .(type ){case _g .StartElement :switch _gc .Name {case _g .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_bgg :=NewElementsGroupChoice ();if _bec :=d .DecodeElement (&_bgg .Any ,&_gc );_bec !=nil {return _bec ;};_bg .Choice =append (_bg .Choice ,_bgg );default:_ada .Log ("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0025v",_gc .Name );if _ad :=d .Skip ();_ad !=nil {return _ad ;};};case _g .EndElement :break _c ;case _g .CharData :};};return nil ;};

// ValidateWithPath validates the Any and its children, prefixing error messages with path
func (_b *Any )ValidateWithPath (path string )error {if _ed :=_b .SimpleLiteral .ValidateWithPath (path );_ed !=nil {return _ed ;};return nil ;};type ElementsGroupChoice struct{Any []*Any ;};func NewSimpleLiteral ()*SimpleLiteral {_ebd :=&SimpleLiteral {};return _ebd };func (_bf *SimpleLiteral )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_bd ,_fd :=d .Token ();if _fd !=nil {return _cc .Errorf ("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0053\u0069\u006d\u0070l\u0065L\u0069t\u0065\u0072\u0061\u006c\u003a\u0020\u0025s",_fd );};if _eed ,_ab :=_bd .(_g .EndElement );_ab &&_eed .Name ==start .Name {break ;};};return nil ;};

// Validate validates the SimpleLiteral and its children
func (_beg *SimpleLiteral )Validate ()error {return _beg .ValidateWithPath ("\u0053\u0069\u006d\u0070\u006c\u0065\u004c\u0069\u0074\u0065\u0072\u0061\u006c");};

// Validate validates the Any and its children
func (_aeg *Any )Validate ()error {return _aeg .ValidateWithPath ("\u0041\u006e\u0079")};

// Validate validates the ElementsGroup and its children
func (_cde *ElementsGroup )Validate ()error {return _cde .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070");};func (_f *Any )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {return _f .SimpleLiteral .MarshalXML (e ,start );};

// Validate validates the ElementContainer and its children
func (_gcg *ElementContainer )Validate ()error {return _gcg .ValidateWithPath ("\u0045\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072");};func (_ga *ElementsGroup )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {if _ga .Choice !=nil {for _ ,_gf :=range _ga .Choice {_gf .MarshalXML (e ,_g .StartElement {});};};return nil ;};

// ValidateWithPath validates the SimpleLiteral and its children, prefixing error messages with path
func (_cd *SimpleLiteral )ValidateWithPath (path string )error {return nil };type Any struct{SimpleLiteral };

// Validate validates the ElementsGroupChoice and its children
func (_df *ElementsGroupChoice )Validate ()error {return _df .ValidateWithPath ("\u0045\u006c\u0065\u006den\u0074\u0073\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u006f\u0069\u0063\u0065");};func init (){_ada .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0053\u0069\u006d\u0070\u006c\u0065\u004c\u0069\u0074\u0065\u0072\u0061\u006c",NewSimpleLiteral );_ada .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0065\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072",NewElementContainer );_ada .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0061\u006e\u0079",NewAny );_ada .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070",NewElementsGroup );};