//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package presentation ;import (_d "archive/zip";_egbb "bytes";_eeee "encoding/xml";_abg "errors";_ead "fmt";_cff "github.com/unidoc/unioffice";_eaeg "github.com/unidoc/unioffice/common";_gfgd "github.com/unidoc/unioffice/common/license";_ffa "github.com/unidoc/unioffice/drawing";_ecce "github.com/unidoc/unioffice/measurement";_dbd "github.com/unidoc/unioffice/schema/soo/dml";_fbe "github.com/unidoc/unioffice/schema/soo/dml/chart";_fgea "github.com/unidoc/unioffice/schema/soo/ofc/sharedTypes";_cdd "github.com/unidoc/unioffice/schema/soo/pkg/relationships";_dbde "github.com/unidoc/unioffice/schema/soo/pml";_feff "github.com/unidoc/unioffice/zippkg";_dbc "image";_gab "image/jpeg";_gac "io";_ga "io/ioutil";_ecc "log";_fdbd "os";_cgb "path";_bca "runtime/debug";_agd "strconv";_abbc "strings";);

// NotesTextViewPr returns the NotesTextViewPr property.
func (_ccgc ViewProperties )NotesTextViewPr ()*_dbde .CT_NotesTextViewProperties {return _ccgc ._gaa .NotesTextViewPr ;};

// GetPlaceholder returns a placeholder given its type.  If there are multiplace
// placeholders of the same type, this method returns the first one.  You must use the
// PlaceHolders() method to access the others.
func (_fcg Slide )GetPlaceholder (t _dbde .ST_PlaceholderType )(PlaceHolder ,error ){for _ ,_bbd :=range _fcg ._adf .CSld .SpTree .Choice {for _ ,_cee :=range _bbd .Sp {if _cee .NvSpPr !=nil &&_cee .NvSpPr .NvPr !=nil &&_cee .NvSpPr .NvPr .Ph !=nil {if _cee .NvSpPr .NvPr .Ph .TypeAttr ==t {return PlaceHolder {_cee ,_fcg ._adf },nil ;};};};};return PlaceHolder {},_abg .New ("\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0066i\u006e\u0064\u0020\u0070\u006c\u0061\u0063\u0065\u0068\u006fl\u0064\u0065\u0072");};

// HtmlPubPr returns the HtmlPubPr property.
func (_gde PresentationProperties )HtmlPubPr ()*_dbde .CT_HtmlPublishProperties {return _gde ._dccd .HtmlPubPr ;};

// AddParagraph adds a new paragraph to a placeholder.
func (_ccec PlaceHolder )AddParagraph ()_ffa .Paragraph {_eadg :=_ffa .MakeParagraph (_dbd .NewCT_TextParagraph ());_ccec ._acd .TxBody .P =append (_ccec ._acd .TxBody .P ,_eadg .X ());return _eadg ;};

// SaveToFile writes the Presentation out to a file.
func (_dab *Presentation )SaveToFile (path string )error {return _dab .saveToFile (path ,false )};func init (){_bcd ()};

// GetLayoutByName retrieves a slide layout given a layout name.
func (_edab *Presentation )GetLayoutByName (name string )(SlideLayout ,error ){for _ ,_geee :=range _edab ._gfe {if _geee .CSld .NameAttr !=nil &&name ==*_geee .CSld .NameAttr {return SlideLayout {_geee },nil ;};};return SlideLayout {},_abg .New ("\u0075\u006eab\u006c\u0065\u0020t\u006f\u0020\u0066\u0069nd \u006cay\u006f\u0075\u0074\u0020\u0077\u0069\u0074h \u0074\u0068\u0061\u0074\u0020\u006e\u0061m\u0065");};

// AddTextBox adds an empty textbox to a slide.
func (_dad Slide )AddTextBox ()TextBox {_dce :=_dbde .NewCT_GroupShapeChoice ();_dad ._adf .CSld .SpTree .Choice =append (_dad ._adf .CSld .SpTree .Choice ,_dce );_bc :=_dbde .NewCT_Shape ();_dce .Sp =append (_dce .Sp ,_bc );_bc .SpPr =_dbd .NewCT_ShapeProperties ();_bc .SpPr .Xfrm =_dbd .NewCT_Transform2D ();_bc .SpPr .PrstGeom =_dbd .NewCT_PresetGeometry2D ();_bc .SpPr .PrstGeom .PrstAttr =_dbd .ST_ShapeTypeRect ;_bc .TxBody =_dbd .NewCT_TextBody ();_bc .TxBody .BodyPr =_dbd .NewCT_TextBodyProperties ();_bc .TxBody .BodyPr .WrapAttr =_dbd .ST_TextWrappingTypeSquare ;_bc .TxBody .BodyPr .SpAutoFit =_dbd .NewCT_TextShapeAutofit ();_fcf :=TextBox {_bc };_fcf .Properties ().SetWidth (3*_ecce .Inch );_fcf .Properties ().SetHeight (1*_ecce .Inch );_fcf .Properties ().SetPosition (0,0);return _fcf ;};func (_fge *Presentation )nextSlideID ()uint32 {_ddb :=uint32 (256);for _ ,_cd :=range _fge ._edb .SldIdLst .SldId {if _cd .IdAttr >=_ddb {_ddb =_cd .IdAttr +1;};};return _ddb ;};

// X returns the inner wrapped XML type.
func (_bga Slide )X ()*_dbde .Sld {return _bga ._adf };

// X returns the inner wrapped XML type.
func (_dcce SlideLayout )X ()*_dbde .SldLayout {return _dcce ._cg };

// SetText sets the text of a placeholder for the initial paragraph. This is a
// shortcut method that is useful for things like titles which only contain a
// single paragraph.
func (_eff PlaceHolder )SetText (text string ){_eff .Clear ();_afc :=_dbd .NewEG_TextRun ();_afc .R =_dbd .NewCT_RegularTextRun ();_afc .R .T =text ;if len (_eff ._acd .TxBody .P )==0{_eff ._acd .TxBody .P =append (_eff ._acd .TxBody .P ,_dbd .NewCT_TextParagraph ());};_eff ._acd .TxBody .P [0].EG_TextRun =nil ;_eff ._acd .TxBody .P [0].EG_TextRun =append (_eff ._acd .TxBody .P [0].EG_TextRun ,_afc );};

// New initializes and reurns a new presentation
func New ()*Presentation {_ebgb :=_dde ();_ebgb .ContentTypes .AddOverride ("/\u0070\u0070\u0074\u002fpr\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006e\u002e\u0078\u006d\u006c","\u0061\u0070\u0070\u006c\u0069\u0063\u0061t\u0069\u006f\u006e\u002f\u0076\u006e\u0064\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002d\u006ff\u0066\u0069\u0063\u0065\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u002e\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002e\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u002e\u006d\u0061\u0069\u006e\u002b\u0078\u006d\u006c");_ebgb .Rels .AddRelationship ("\u0064\u006f\u0063\u0050\u0072\u006f\u0070\u0073\u002f\u0063\u006f\u0072e\u002e\u0078\u006d\u006c","\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066o\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006ba\u0067\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073\u002f\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061/\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006f\u0070e\u0072\u0074i\u0065\u0073");_ebgb .Rels .AddRelationship ("\u0064\u006fc\u0050\u0072\u006fp\u0073\u002f\u0061\u0070\u0070\u002e\u0078\u006d\u006c","\u0068t\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002eo\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072\u006da\u0074\u0073.\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0073\u0068\u0069p\u0073\u002f\u0065x\u0074\u0065\u006e\u0064\u0065d\u002d\u0070\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_ebgb .Rels .AddRelationship ("p\u0070t\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074a\u0074\u0069\u006f\u006e.x\u006d\u006c","\u0068\u0074\u0074\u0070\u003a\u002f\u002fs\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006da\u0074\u0073\u002e\u006f\u0072g\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006fc\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074");_ebgb .Rels .AddRelationship ("\u0070\u0070\u0074\u002f\u0070\u0072\u0065\u0073\u0050\u0072\u006f\u0070s\u002e\u0078\u006d\u006c","ht\u0074\u0070\u003a\u002f\u002f\u0073\u0063he\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006da\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006et\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068i\u0070s\u002f\u0070\u0072\u0065\u0073\u0050\u0072\u006f\u0070\u0073");_ebgb .Rels .AddRelationship ("\u0070\u0070\u0074\u002f\u0076\u0069\u0065\u0077\u0050\u0072\u006f\u0070s\u002e\u0078\u006d\u006c","ht\u0074\u0070\u003a\u002f\u002f\u0073\u0063he\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006da\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006et\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068i\u0070s\u002f\u0076\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0073");_ebgb .Rels .AddRelationship ("\u0070\u0070\u0074\u002fta\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073\u002e\u0078\u006d\u006c","\u0068\u0074\u0074\u0070\u003a\u002f\u002fs\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006cf\u006fr\u006d\u0061\u0074\u0073\u002e\u006fr\u0067\u002f\u006f\u0066\u0066\u0069\u0063e\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073\u002f\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0073");_ebgb ._edb .SldMasterIdLst =_dbde .NewCT_SlideMasterIdList ();_cfg :=_dbde .NewSldMaster ();_cfg .ClrMap .Bg1Attr =_dbd .ST_ColorSchemeIndexLt1 ;_cfg .ClrMap .Bg2Attr =_dbd .ST_ColorSchemeIndexLt2 ;_cfg .ClrMap .Tx1Attr =_dbd .ST_ColorSchemeIndexDk1 ;_cfg .ClrMap .Tx2Attr =_dbd .ST_ColorSchemeIndexDk2 ;_cfg .ClrMap .Accent1Attr =_dbd .ST_ColorSchemeIndexAccent1 ;_cfg .ClrMap .Accent2Attr =_dbd .ST_ColorSchemeIndexAccent2 ;_cfg .ClrMap .Accent3Attr =_dbd .ST_ColorSchemeIndexAccent3 ;_cfg .ClrMap .Accent4Attr =_dbd .ST_ColorSchemeIndexAccent4 ;_cfg .ClrMap .Accent5Attr =_dbd .ST_ColorSchemeIndexAccent5 ;_cfg .ClrMap .Accent6Attr =_dbd .ST_ColorSchemeIndexAccent6 ;_cfg .ClrMap .HlinkAttr =_dbd .ST_ColorSchemeIndexHlink ;_cfg .ClrMap .FolHlinkAttr =_dbd .ST_ColorSchemeIndexFolHlink ;_ebgb ._gfb =append (_ebgb ._gfb ,_cfg );_bgf :=_cff .AbsoluteFilename (_cff .DocTypePresentation ,_cff .SlideMasterType ,1);_ebgb .ContentTypes .AddOverride (_bgf ,_cff .SlideMasterContentType );_gbfc :=_ebgb ._bgb .AddAutoRelationship (_cff .DocTypePresentation ,_cff .OfficeDocumentType ,1,_cff .SlideMasterType );_gdc :=_dbde .NewCT_SlideMasterIdListEntry ();_gdc .IdAttr =_cff .Uint32 (2147483648);_gdc .RIdAttr =_gbfc .ID ();_ebgb ._edb .SldMasterIdLst .SldMasterId =append (_ebgb ._edb .SldMasterIdLst .SldMasterId ,_gdc );_daba :=_eaeg .NewRelationships ();_ebgb ._cbd =append (_ebgb ._cbd ,_daba );_ceg :=_dbde .NewSldLayout ();_eg :=_daba .AddAutoRelationship (_cff .DocTypePresentation ,_cff .SlideMasterType ,1,_cff .SlideLayoutType );_dca :=_cff .AbsoluteFilename (_cff .DocTypePresentation ,_cff .SlideLayoutType ,1);_ebgb .ContentTypes .AddOverride (_dca ,_cff .SlideLayoutContentType );_daba .AddAutoRelationship (_cff .DocTypePresentation ,_cff .SlideMasterType ,1,_cff .ThemeType );_ebgb ._gfe =append (_ebgb ._gfe ,_ceg );_cfg .SldLayoutIdLst =_dbde .NewCT_SlideLayoutIdList ();_gae :=_dbde .NewCT_SlideLayoutIdListEntry ();_gae .IdAttr =_cff .Uint32 (2147483649);_gae .RIdAttr =_eg .ID ();_cfg .SldLayoutIdLst .SldLayoutId =append (_cfg .SldLayoutIdLst .SldLayoutId ,_gae );_cb :=_eaeg .NewRelationships ();_ebgb ._a =append (_ebgb ._a ,_cb );_cb .AddAutoRelationship (_cff .DocTypePresentation ,_cff .SlideType ,1,_cff .SlideMasterType );_ebgb ._edb .NotesSz .CxAttr =6858000;_ebgb ._edb .NotesSz .CyAttr =9144000;_ece :=_dbd .NewTheme ();_ece .NameAttr =_cff .String ("\u0067\u006f\u006fx\u006d\u006c\u0020\u0054\u0068\u0065\u006d\u0065");_ece .ThemeElements .ClrScheme .NameAttr ="\u004f\u0066\u0066\u0069\u0063\u0065";_ece .ThemeElements .ClrScheme .Dk1 .SysClr =_dbd .NewCT_SystemColor ();_ece .ThemeElements .ClrScheme .Dk1 .SysClr .LastClrAttr =_cff .String ("\u0030\u0030\u0030\u0030\u0030\u0030");_ece .ThemeElements .ClrScheme .Dk1 .SysClr .ValAttr =_dbd .ST_SystemColorValWindowText ;_ece .ThemeElements .ClrScheme .Lt1 .SysClr =_dbd .NewCT_SystemColor ();_ece .ThemeElements .ClrScheme .Lt1 .SysClr .LastClrAttr =_cff .String ("\u0066\u0066\u0066\u0066\u0066\u0066");_ece .ThemeElements .ClrScheme .Lt1 .SysClr .ValAttr =_dbd .ST_SystemColorValWindow ;_ece .ThemeElements .ClrScheme .Dk2 .SrgbClr =_dbd .NewCT_SRgbColor ();_ece .ThemeElements .ClrScheme .Dk2 .SrgbClr .ValAttr ="\u0034\u0034\u0035\u0034\u0036\u0061";_ece .ThemeElements .ClrScheme .Lt2 .SrgbClr =_dbd .NewCT_SRgbColor ();_ece .ThemeElements .ClrScheme .Lt2 .SrgbClr .ValAttr ="\u0065\u0037\u0065\u0037\u0065\u0036";_ece .ThemeElements .ClrScheme .Accent1 .SrgbClr =_dbd .NewCT_SRgbColor ();_ece .ThemeElements .ClrScheme .Accent1 .SrgbClr .ValAttr ="\u0034\u0034\u0037\u0032\u0063\u0034";_ece .ThemeElements .ClrScheme .Accent2 .SrgbClr =_dbd .NewCT_SRgbColor ();_ece .ThemeElements .ClrScheme .Accent2 .SrgbClr .ValAttr ="\u0065\u0064\u0037\u0064\u0033\u0031";_ece .ThemeElements .ClrScheme .Accent3 .SrgbClr =_dbd .NewCT_SRgbColor ();_ece .ThemeElements .ClrScheme .Accent3 .SrgbClr .ValAttr ="\u0061\u0035\u0061\u0035\u0061\u0035";_ece .ThemeElements .ClrScheme .Accent4 .SrgbClr =_dbd .NewCT_SRgbColor ();_ece .ThemeElements .ClrScheme .Accent4 .SrgbClr .ValAttr ="\u0066\u0066\u0063\u0030\u0030\u0030";_ece .ThemeElements .ClrScheme .Accent5 .SrgbClr =_dbd .NewCT_SRgbColor ();_ece .ThemeElements .ClrScheme .Accent5 .SrgbClr .ValAttr ="\u0035\u0062\u0039\u0062\u0064\u0035";_ece .ThemeElements .ClrScheme .Accent6 .SrgbClr =_dbd .NewCT_SRgbColor ();_ece .ThemeElements .ClrScheme .Accent6 .SrgbClr .ValAttr ="\u0037\u0030\u0061\u0064\u0034\u0037";_ece .ThemeElements .ClrScheme .Hlink .SrgbClr =_dbd .NewCT_SRgbColor ();_ece .ThemeElements .ClrScheme .Hlink .SrgbClr .ValAttr ="\u0030\u0035\u0036\u0033\u0063\u0031";_ece .ThemeElements .ClrScheme .FolHlink .SrgbClr =_dbd .NewCT_SRgbColor ();_ece .ThemeElements .ClrScheme .FolHlink .SrgbClr .ValAttr ="\u0039\u0035\u0034\u0066\u0037\u0032";_ece .ThemeElements .FontScheme .NameAttr ="\u004f\u0066\u0066\u0069\u0063\u0065";_ece .ThemeElements .FontScheme .MajorFont .Latin .TypefaceAttr ="\u0043\u0061\u006c\u0069\u0062\u0072\u0069\u0020\u004c\u0069\u0067\u0068\u0074";_ece .ThemeElements .FontScheme .MinorFont .Latin .TypefaceAttr ="\u0043a\u006c\u0069\u0062\u0072\u0069";_ece .ThemeElements .FmtScheme .NameAttr =_cff .String ("\u004f\u0066\u0066\u0069\u0063\u0065");_deb :=_dbd .NewEG_FillProperties ();_ece .ThemeElements .FmtScheme .FillStyleLst .EG_FillProperties =append (_ece .ThemeElements .FmtScheme .FillStyleLst .EG_FillProperties ,_deb );_deb .SolidFill =&_dbd .CT_SolidColorFillProperties {SchemeClr :&_dbd .CT_SchemeColor {ValAttr :_dbd .ST_SchemeColorValPhClr }};_deb =_dbd .NewEG_FillProperties ();_ece .ThemeElements .FmtScheme .FillStyleLst .EG_FillProperties =append (_ece .ThemeElements .FmtScheme .FillStyleLst .EG_FillProperties ,_deb );_ece .ThemeElements .FmtScheme .FillStyleLst .EG_FillProperties =append (_ece .ThemeElements .FmtScheme .FillStyleLst .EG_FillProperties ,_deb );_deb .GradFill =&_dbd .CT_GradientFillProperties {RotWithShapeAttr :_cff .Bool (true ),GsLst :&_dbd .CT_GradientStopList {},Lin :&_dbd .CT_LinearShadeProperties {}};_deb .GradFill .Lin .AngAttr =_cff .Int32 (5400000);_deb .GradFill .Lin .ScaledAttr =_cff .Bool (false );_aea :=_dbd .NewCT_GradientStop ();_aea .PosAttr .ST_PositiveFixedPercentageDecimal =_cff .Int32 (0);_aea .SchemeClr =&_dbd .CT_SchemeColor {ValAttr :_dbd .ST_SchemeColorValPhClr };_deb .GradFill .GsLst .Gs =append (_deb .GradFill .GsLst .Gs ,_aea );_aea =_dbd .NewCT_GradientStop ();_aea .PosAttr .ST_PositiveFixedPercentageDecimal =_cff .Int32 (50000);_aea .SchemeClr =&_dbd .CT_SchemeColor {ValAttr :_dbd .ST_SchemeColorValPhClr };_deb .GradFill .GsLst .Gs =append (_deb .GradFill .GsLst .Gs ,_aea );_ece .ThemeElements .FmtScheme .LnStyleLst =_dbd .NewCT_LineStyleList ();for _fcfc :=0;_fcfc < 3;_fcfc ++{_dgd :=_dbd .NewCT_LineProperties ();_dgd .WAttr =_cff .Int32 (int32 (6350*(_fcfc +1)));_dgd .CapAttr =_dbd .ST_LineCapFlat ;_dgd .CmpdAttr =_dbd .ST_CompoundLineSng ;_dgd .AlgnAttr =_dbd .ST_PenAlignmentCtr ;_ece .ThemeElements .FmtScheme .LnStyleLst .Ln =append (_ece .ThemeElements .FmtScheme .LnStyleLst .Ln ,_dgd );};_ece .ThemeElements .FmtScheme .EffectStyleLst =_dbd .NewCT_EffectStyleList ();for _eeed :=0;_eeed < 3;_eeed ++{_ddbf :=_dbd .NewCT_EffectStyleItem ();_ddbf .EffectLst =_dbd .NewCT_EffectList ();_ece .ThemeElements .FmtScheme .EffectStyleLst .EffectStyle =append (_ece .ThemeElements .FmtScheme .EffectStyleLst .EffectStyle ,_ddbf );};_ddbg :=_dbd .NewEG_FillProperties ();_ddbg .SolidFill =&_dbd .CT_SolidColorFillProperties {SchemeClr :&_dbd .CT_SchemeColor {ValAttr :_dbd .ST_SchemeColorValPhClr }};_ece .ThemeElements .FmtScheme .BgFillStyleLst .EG_FillProperties =append (_ece .ThemeElements .FmtScheme .BgFillStyleLst .EG_FillProperties ,_ddbg );_ece .ThemeElements .FmtScheme .BgFillStyleLst .EG_FillProperties =append (_ece .ThemeElements .FmtScheme .BgFillStyleLst .EG_FillProperties ,_ddbg );_ece .ThemeElements .FmtScheme .BgFillStyleLst .EG_FillProperties =append (_ece .ThemeElements .FmtScheme .BgFillStyleLst .EG_FillProperties ,_deb );_ebgb ._gec =append (_ebgb ._gec ,_ece );_acb :=_cff .AbsoluteFilename (_cff .DocTypePresentation ,_cff .ThemeType ,1);_ebgb .ContentTypes .AddOverride (_acb ,_cff .ThemeContentType );_ebgb ._bgb .AddAutoRelationship (_cff .DocTypePresentation ,_cff .OfficeDocumentType ,1,_cff .ThemeType );_cef :=_eaeg .NewRelationships ();_ebgb ._gcg =append (_ebgb ._gcg ,_cef );return _ebgb ;};

// SlideMasters returns the slide masters defined in the presentation.
func (_afee *Presentation )SlideMasters ()[]SlideMaster {_ac :=[]SlideMaster {};for _bac ,_baf :=range _afee ._gfb {_ac =append (_ac ,SlideMaster {_afee ,_afee ._cbd [_bac ],_baf });};return _ac ;};

// SlideLayout is a layout from which slides can be created.
type SlideLayout struct{_cg *_dbde .SldLayout };

// X returns the inner wrapped XML type.
func (_fb ViewProperties )X ()*_dbde .ViewPr {return _fb ._gaa };

// ClrMru returns the ClrMru property.
func (_aggc PresentationProperties )ClrMru ()*_dbd .CT_ColorMRU {return _aggc ._dccd .ClrMru };

// X returns the inner wrapped XML type.
func (_egc PlaceHolder )X ()*_dbde .CT_Shape {return _egc ._acd };

// Open opens and reads a document from a file (.pptx).
func Open (filename string )(*Presentation ,error ){_ebbe ,_bbf :=_fdbd .Open (filename );if _bbf !=nil {return nil ,_ead .Errorf ("e\u0072r\u006f\u0072\u0020\u006f\u0070\u0065\u006e\u0069n\u0067\u0020\u0025\u0073: \u0025\u0073",filename ,_bbf );};defer _ebbe .Close ();_ggc ,_bbf :=_fdbd .Stat (filename );if _bbf !=nil {return nil ,_ead .Errorf ("e\u0072r\u006f\u0072\u0020\u006f\u0070\u0065\u006e\u0069n\u0067\u0020\u0025\u0073: \u0025\u0073",filename ,_bbf );};_ =_ggc ;return Read (_ebbe ,_ggc .Size ());};

// Presentation is the a presentation base document.
type Presentation struct{_eaeg .DocBase ;_edb *_dbde .Presentation ;_bgb _eaeg .Relationships ;_aff []*_dbde .Sld ;_fcb []_eaeg .Relationships ;_gfb []*_dbde .SldMaster ;_cbd []_eaeg .Relationships ;_gfe []*_dbde .SldLayout ;_a []_eaeg .Relationships ;_gec []*_dbd .Theme ;_gcg []_eaeg .Relationships ;_acbg _eaeg .TableStyles ;_ecd PresentationProperties ;_dea ViewProperties ;_eae []*_dbd .CT_Hyperlink ;_caf []*_fbe .ChartSpace ;_fcd []*_dbde .HandoutMaster ;_fgf []*_dbde .NotesMaster ;_cbdf []*_cff .XSDAny ;_abb map[string ]string ;};

// Index returns the placeholder index
func (_cag PlaceHolder )Index ()uint32 {if _cag ._acd .NvSpPr .NvPr .Ph .IdxAttr ==nil {return 0;};return *_cag ._acd .NvSpPr .NvPr .Ph .IdxAttr ;};

// GetOrCreateCustomProperties returns the custom properties of the document (and if they not exist yet, creating them first)
func (_cedc *Presentation )GetOrCreateCustomProperties ()_eaeg .CustomProperties {if _cedc .CustomProperties .X ()==nil {_cedc .createCustomProperties ();};return _cedc .CustomProperties ;};

// ShowPr returns the ShowPr property.
func (_gda PresentationProperties )ShowPr ()*_dbde .CT_ShowProperties {return _gda ._dccd .ShowPr };

// LastViewAttr returns the LastViewAttr property.
func (_ae ViewProperties )LastViewAttr ()_dbde .ST_ViewType {return _ae ._gaa .LastViewAttr };

// AddSlideWithLayout adds a new slide with content copied from a layout.  Normally you should
// use AddDefaultSlideWithLayout as it will do some post processing similar to PowerPoint to
// clear place holder text, etc.
func (_aged *Presentation )AddSlideWithLayout (l SlideLayout )(Slide ,error ){_gbfa :=_dbde .NewCT_SlideIdListEntry ();_gbfa .IdAttr =256;for _ ,_ad :=range _aged ._edb .SldIdLst .SldId {if _ad .IdAttr >=_gbfa .IdAttr {_gbfa .IdAttr =_ad .IdAttr +1;};};_aged ._edb .SldIdLst .SldId =append (_aged ._edb .SldIdLst .SldId ,_gbfa );_bcc :=_dbde .NewSld ();_eea :=_egbb .Buffer {};_egaf :=_eeee .NewEncoder (&_eea );_fac :=_eeee .StartElement {Name :_eeee .Name {Local :"\u0073\u006c\u0069d\u0065"}};_fac .Attr =append (_fac .Attr ,_eeee .Attr {Name :_eeee .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"});_fac .Attr =append (_fac .Attr ,_eeee .Attr {Name :_eeee .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0061"},Value :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"});_fac .Attr =append (_fac .Attr ,_eeee .Attr {Name :_eeee .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0070"},Value :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"});_fac .Attr =append (_fac .Attr ,_eeee .Attr {Name :_eeee .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0072"},Value :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"});_fac .Attr =append (_fac .Attr ,_eeee .Attr {Name :_eeee .Name {Local :"\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"},Value :"\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"});_fac .Attr =append (_fac .Attr ,_eeee .Attr {Name :_eeee .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});if _bceb :=l ._cg .CSld .MarshalXML (_egaf ,_fac );_bceb !=nil {return Slide {},_bceb ;};_egaf .Flush ();_da :=_eeee .NewDecoder (&_eea );_bcc .CSld =_dbde .NewCT_CommonSlideData ();if _bb :=_da .Decode (_bcc .CSld );_bb !=nil {return Slide {},_bb ;};_bcc .CSld .NameAttr =nil ;_bcc .CSld .SpTree .Choice =_gdda (_bcc .CSld .SpTree .Choice );_aged ._aff =append (_aged ._aff ,_bcc );_gbc :=_aged ._bgb .AddAutoRelationship (_cff .DocTypePresentation ,_cff .OfficeDocumentType ,len (_aged ._aff ),_cff .SlideType );_gbfa .RIdAttr =_gbc .ID ();_cgg :=_cff .AbsoluteFilename (_cff .DocTypePresentation ,_cff .SlideType ,len (_aged ._aff ));_aged .ContentTypes .AddOverride (_cgg ,_cff .SlideContentType );_bcg :=_eaeg .NewRelationships ();_aged ._fcb =append (_aged ._fcb ,_bcg );_acdb :=len (_aged ._fcb )-1;for _ffca ,_gged :=range _aged ._gfe {if _gged ==l .X (){_fa :=_aged ._a [_ffca ];for _ ,_agc :=range _fa .X ().Relationship {if _agc .TypeAttr !=_cff .SlideMasterType {_aged ._fcb [_acdb ].X ().Relationship =append (_aged ._fcb [_acdb ].X ().Relationship ,_agc );};};_bcg .AddAutoRelationship (_cff .DocTypePresentation ,_cff .SlideType ,_ffca +1,_cff .SlideLayoutType );};};_gfg :=Slide {_gbfa ,_bcc ,_aged };return _gfg ,nil ;};

// NewPresentationProperties constructs a new PresentationProperties.
func NewPresentationProperties ()PresentationProperties {return PresentationProperties {_dccd :_dbde .NewPresentationPr ()};};

// X returns the inner wrapped XML type.
func (_fdbdg *Presentation )X ()*_dbde .Presentation {return _fdbdg ._edb };

// GetPlaceholderByIndex returns a placeholder given its index.  If there are multiplace
// placeholders of the same index, this method returns the first one.  You must use the
// PlaceHolders() method to access the others.
func (_fd Slide )GetPlaceholderByIndex (idx uint32 )(PlaceHolder ,error ){for _ ,_dfe :=range _fd ._adf .CSld .SpTree .Choice {for _ ,_dgb :=range _dfe .Sp {if _dgb .NvSpPr !=nil &&_dgb .NvSpPr .NvPr !=nil &&_dgb .NvSpPr .NvPr .Ph !=nil {if (idx ==0&&_dgb .NvSpPr .NvPr .Ph .IdxAttr ==nil )||(_dgb .NvSpPr .NvPr .Ph .IdxAttr !=nil &&*_dgb .NvSpPr .NvPr .Ph .IdxAttr ==idx ){return PlaceHolder {_dgb ,_fd ._adf },nil ;};};};};return PlaceHolder {},_abg .New ("\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0066i\u006e\u0064\u0020\u0070\u006c\u0061\u0063\u0065\u0068\u006fl\u0064\u0065\u0072");};

// AddSlide adds a new slide to the presentation.
func (_bf *Presentation )AddSlide ()Slide {_edgc :=_dbde .NewCT_SlideIdListEntry ();_edgc .IdAttr =_bf .nextSlideID ();_bf ._edb .SldIdLst .SldId =append (_bf ._edb .SldIdLst .SldId ,_edgc );_fg :=_dbde .NewSld ();_fg .CSld .SpTree .NvGrpSpPr .CNvPr .IdAttr =1;_fg .CSld .SpTree .GrpSpPr .Xfrm =_dbd .NewCT_GroupTransform2D ();_fg .CSld .SpTree .GrpSpPr .Xfrm .Off =_dbd .NewCT_Point2D ();_fg .CSld .SpTree .GrpSpPr .Xfrm .Off .XAttr .ST_CoordinateUnqualified =_cff .Int64 (0);_fg .CSld .SpTree .GrpSpPr .Xfrm .Off .YAttr .ST_CoordinateUnqualified =_cff .Int64 (0);_fg .CSld .SpTree .GrpSpPr .Xfrm .Ext =_dbd .NewCT_PositiveSize2D ();_fg .CSld .SpTree .GrpSpPr .Xfrm .Ext .CxAttr =int64 (0*_ecce .Point );_fg .CSld .SpTree .GrpSpPr .Xfrm .Ext .CyAttr =int64 (0*_ecce .Point );_fg .CSld .SpTree .GrpSpPr .Xfrm .ChOff =_fg .CSld .SpTree .GrpSpPr .Xfrm .Off ;_fg .CSld .SpTree .GrpSpPr .Xfrm .ChExt =_fg .CSld .SpTree .GrpSpPr .Xfrm .Ext ;_bf ._aff =append (_bf ._aff ,_fg );_edd :=_bf ._bgb .AddAutoRelationship (_cff .DocTypePresentation ,_cff .OfficeDocumentType ,len (_bf ._aff ),_cff .SlideType );_edgc .RIdAttr =_edd .ID ();_cdf :=_cff .AbsoluteFilename (_cff .DocTypePresentation ,_cff .SlideType ,len (_bf ._aff ));_bf .ContentTypes .AddOverride (_cdf ,_cff .SlideContentType );_ffcc :=_eaeg .NewRelationships ();_bf ._fcb =append (_bf ._fcb ,_ffcc );_ffcc .AddAutoRelationship (_cff .DocTypePresentation ,_cff .SlideType ,len (_bf ._gfe ),_cff .SlideLayoutType );return Slide {_edgc ,_fg ,_bf };};

// ShowCommentsAttr returns the WebPr property.
func (_afa ViewProperties )ShowCommentsAttr ()*bool {return _afa ._gaa .ShowCommentsAttr };

// ValidateWithPath validates the slide passing path informaton for a better
// error message.
func (_ab Slide )ValidateWithPath (path string )error {if _ffc :=_ab ._adf .ValidateWithPath (path );_ffc !=nil {return _ffc ;};for _ ,_eef :=range _ab ._adf .CSld .SpTree .Choice {for _ ,_bdbb :=range _eef .Sp {if _bdbb .TxBody !=nil {if len (_bdbb .TxBody .P )==0{return _abg .New (path +"\u0020\u003a \u0073\u006c\u0069\u0064\u0065 \u0073\u0068\u0061\u0070\u0065 \u0077\u0069\u0074\u0068\u0020\u0061\u0020\u0074\u0078\u0062\u006f\u0064\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0070\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068\u0073");};};};};return nil ;};

// NormalViewPr returns the NormalViewPr property.
func (_fce ViewProperties )NormalViewPr ()*_dbde .CT_NormalViewProperties {return _fce ._gaa .NormalViewPr ;};

// GridSpacing returns the GridSpacing property.
func (_fcad ViewProperties )GridSpacing ()*_dbd .CT_PositiveSize2D {return _fcad ._gaa .GridSpacing };

// Paragraphs returns the paragraphs defined in the placeholder.
func (_cfd PlaceHolder )Paragraphs ()[]_ffa .Paragraph {_cf :=[]_ffa .Paragraph {};for _ ,_fc :=range _cfd ._acd .TxBody .P {_cf =append (_cf ,_ffa .MakeParagraph (_fc ));};return _cf ;};func (_aca *Presentation )saveToFile (_ecec string ,_eab bool )error {_dbcf ,_egd :=_fdbd .Create (_ecec );if _egd !=nil {return _egd ;};defer _dbcf .Close ();return _aca .save (_dbcf ,_eab );};

// Read reads a document from an io.Reader.
func Read (r _gac .ReaderAt ,size int64 )(*Presentation ,error ){_bgg :=_dde ();_effd ,_gc :=_ga .TempDir ("","g\u006f\u006f\u0078\u006d\u006c\u002d\u0070\u0070\u0074\u0078");if _gc !=nil {return nil ,_gc ;};_bgg .TmpPath =_effd ;_adg ,_gc :=_d .NewReader (r ,size );if _gc !=nil {return nil ,_ead .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u007a\u0069\u0070\u003a\u0020\u0025\u0073",_gc );};_bgd :=[]*_d .File {};_bgd =append (_bgd ,_adg .File ...);_ceec :=false ;for _ ,_afb :=range _bgd {if _afb .FileHeader .Name =="\u0064\u006f\u0063\u0050ro\u0070\u0073\u002f\u0063\u0075\u0073\u0074\u006f\u006d\u002e\u0078\u006d\u006c"{_ceec =true ;break ;};};if _ceec {_bgg .createCustomProperties ();};_gcb :=_feff .DecodeMap {};_gcb .SetOnNewRelationshipFunc (_bgg .onNewRelationship );_gcb .AddTarget (_cff .ContentTypesFilename ,_bgg .ContentTypes .X (),"",0);_gcb .AddTarget (_cff .BaseRelsFilename ,_bgg .Rels .X (),"",0);if _bdee :=_gcb .Decode (_bgd );_bdee !=nil {return nil ,_bdee ;};for _ ,_fee :=range _bgd {if _fee ==nil {continue ;};if _bd :=_bgg .AddExtraFileFromZip (_fee );_bd !=nil {return nil ,_bd ;};};if _ceec {_ebaa :=false ;for _ ,_efc :=range _bgg .Rels .X ().Relationship {if _efc .TargetAttr =="\u0064\u006f\u0063\u0050ro\u0070\u0073\u002f\u0063\u0075\u0073\u0074\u006f\u006d\u002e\u0078\u006d\u006c"{_ebaa =true ;break ;};};if !_ebaa {_bgg .addCustomRelationships ();};};return _bgg ,nil ;};

// PlaceHolder is a place holder from a slide.
type PlaceHolder struct{_acd *_dbde .CT_Shape ;_caa *_dbde .Sld ;};

// Image is an image within a slide.
type Image struct{_aac *_dbde .CT_Picture };func _gdda (_afca []*_dbde .CT_GroupShapeChoice )[]*_dbde .CT_GroupShapeChoice {var _eefe []*_dbde .CT_GroupShapeChoice ;for _ ,_fbef :=range _afca {if len (_fbef .Pic )==0{_eefe =append (_eefe ,_fbef );};};return _eefe ;};

// AddImage adds an image textbox to a slide.
func (_gb Slide )AddImage (img _eaeg .ImageRef )Image {_bg :=_dbde .NewCT_GroupShapeChoice ();_gb ._adf .CSld .SpTree .Choice =append (_gb ._adf .CSld .SpTree .Choice ,_bg );_db :=_dbde .NewCT_Picture ();_bg .Pic =append (_bg .Pic ,_db );_db .NvPicPr .CNvPicPr =_dbd .NewCT_NonVisualPictureProperties ();_db .NvPicPr .CNvPicPr .PicLocks =_dbd .NewCT_PictureLocking ();_db .NvPicPr .CNvPicPr .PicLocks .NoChangeAspectAttr =_cff .Bool (true );_db .BlipFill =_dbd .NewCT_BlipFillProperties ();_db .BlipFill .Blip =_dbd .NewCT_Blip ();_cad :=_gb .AddImageToRels (img );_db .BlipFill .Blip .EmbedAttr =_cff .String (_cad );_db .BlipFill .Stretch =_dbd .NewCT_StretchInfoProperties ();_db .BlipFill .Stretch .FillRect =_dbd .NewCT_RelativeRect ();_db .SpPr =_dbd .NewCT_ShapeProperties ();_db .SpPr .PrstGeom =_dbd .NewCT_PresetGeometry2D ();_db .SpPr .PrstGeom .PrstAttr =_dbd .ST_ShapeTypeRect ;_aef :=Image {_db };_efec :=img .Size ();_aef .Properties ().SetWidth (_ecce .Distance (_efec .X )*_ecce .Pixel72 );_aef .Properties ().SetHeight (_ecce .Distance (_efec .Y )*_ecce .Pixel72 );_aef .Properties ().SetPosition (0,0);return _aef ;};

// SaveAsTemplate writes the presentation out to a writer in the Zip package format as a template
func (_cfb *Presentation )SaveAsTemplate (w _gac .Writer )error {return _cfb .save (w ,true )};func (_df *Presentation )addCustomRelationships (){_df .ContentTypes .AddOverride ("/\u0064o\u0063\u0050\u0072\u006f\u0070\u0073\u002f\u0063u\u0073\u0074\u006f\u006d.x\u006d\u006c","\u0061\u0070\u0070\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002fv\u006e\u0064\u002e\u006f\u0070\u0065n\u0078\u006d\u006c\u0066\u006fr\u006d\u0061\u0074\u0073\u002d\u006f\u0066\u0066\u0069\u0063\u0065\u0064o\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0063\u0075\u0073\u0074\u006f\u006d\u002d\u0070r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073+\u0078\u006d\u006c");_df .Rels .AddRelationship ("\u0064\u006f\u0063\u0050ro\u0070\u0073\u002f\u0063\u0075\u0073\u0074\u006f\u006d\u002e\u0078\u006d\u006c",_cff .CustomPropertiesType );};

// X returns the inner wrapped XML type.
func (_aa SlideMaster )X ()*_dbde .SldMaster {return _aa ._deg };func (_ebe *Presentation )Validate ()error {if _cbc :=_ebe ._edb .Validate ();_cbc !=nil {return _cbc ;};for _bde ,_gbfg :=range _ebe .Slides (){if _fe :=_gbfg .ValidateWithPath (_ead .Sprintf ("\u0053l\u0069\u0064\u0065\u005b\u0025\u0064]",_bde ));_fe !=nil {return _fe ;};};for _dbac ,_ggee :=range _ebe ._gfb {if _ebb :=_ggee .ValidateWithPath (_ead .Sprintf ("\u0053l\u0069d\u0065\u004d\u0061\u0073\u0074\u0065\u0072\u005b\u0025\u0064\u005d",_dbac ));_ebb !=nil {return _ebb ;};};for _cbe ,_befa :=range _ebe ._gfe {if _bbeg :=_befa .ValidateWithPath (_ead .Sprintf ("\u0053l\u0069d\u0065\u004c\u0061\u0079\u006f\u0075\u0074\u005b\u0025\u0064\u005d",_cbe ));_bbeg !=nil {return _bbeg ;};};return nil ;};var _bdc =false ;

// PresentationProperties contains document specific properties.
type PresentationProperties struct{_dccd *_dbde .PresentationPr };

// PlaceHolders returns all of the content place holders within a given slide.
func (_dffb Slide )PlaceHolders ()[]PlaceHolder {_gce :=[]PlaceHolder {};for _ ,_gcae :=range _dffb ._adf .CSld .SpTree .Choice {for _ ,_eefb :=range _gcae .Sp {if _eefb .NvSpPr !=nil &&_eefb .NvSpPr .NvPr !=nil &&_eefb .NvSpPr .NvPr .Ph !=nil {_gce =append (_gce ,PlaceHolder {_eefb ,_dffb ._adf });};};};return _gce ;};

// ExtLst returns the ExtLst property.
func (_cge PresentationProperties )ExtLst ()*_dbde .CT_ExtensionList {return _cge ._dccd .ExtLst };func (_ace *Presentation )createCustomProperties (){_ace .CustomProperties =_eaeg .NewCustomProperties ();_ace .addCustomRelationships ();};

// OutlineViewPr returns the OutlineViewPr property.
func (_egb ViewProperties )OutlineViewPr ()*_dbde .CT_OutlineViewProperties {return _egb ._gaa .OutlineViewPr ;};

// Clear clears the placeholder contents and adds a single empty paragraph.  The
// empty paragrah is required by PowerPoint or it will report the file as being
// invalid.
func (_gd PlaceHolder )Clear (){_gd .ClearAll ();_fgcf :=_dbd .NewCT_TextParagraph ();_gd ._acd .TxBody .P =[]*_dbd .CT_TextParagraph {_fgcf };_fgcf .EndParaRPr =_dbd .NewCT_TextCharacterProperties ();_fgcf .EndParaRPr .LangAttr =_cff .String ("\u0065\u006e\u002dU\u0053");};

// SlideLayouts returns a slice of all layouts in SlideMaster.
func (_dg SlideMaster )SlideLayouts ()[]SlideLayout {_fgcd :=map[string ]int {};_bdae :=[]SlideLayout {};for _ ,_bce :=range _dg ._fec .Relationships (){_age :=_abbc .Replace (_bce .Target (),".\u002e\u002f\u0073\u006c\u0069\u0064e\u004c\u0061\u0079\u006f\u0075\u0074\u0073\u002f\u0073l\u0069\u0064\u0065L\u0061y\u006f\u0075\u0074","",-1);_age =_abbc .Replace (_age ,"\u002e\u0078\u006d\u006c","",-1);if _ee ,_ffg :=_agd .ParseInt (_age ,10,32);_ffg ==nil {_fgcd [_bce .ID ()]=int (_ee );};};for _ ,_edbg :=range _dg ._deg .SldLayoutIdLst .SldLayoutId {if _aace ,_agg :=_fgcd [_edbg .RIdAttr ];_agg {_acf :=_dg ._afe ._gfe [_aace -1];_bdae =append (_bdae ,SlideLayout {_acf });};};return _bdae ;};

// AddImage adds an image to the document package, returning a reference that
// can be used to add the image to a run and place it in the document contents.
func (_fcde *Presentation )AddImage (i _eaeg .Image )(_eaeg .ImageRef ,error ){_afcc :=_eaeg .MakeImageRef (i ,&_fcde .DocBase ,_fcde ._bgb );if i .Data ==nil &&i .Path ==""{return _afcc ,_abg .New ("\u0069\u006d\u0061\u0067\u0065\u0020\u006d\u0075\u0073\u0074 \u0068\u0061\u0076\u0065\u0020\u0064\u0061t\u0061\u0020\u006f\u0072\u0020\u0061\u0020\u0070\u0061\u0074\u0068");};if i .Format ==""{return _afcc ,_abg .New ("\u0069\u006d\u0061\u0067\u0065\u0020\u006d\u0075\u0073\u0074 \u0068\u0061\u0076\u0065\u0020\u0061\u0020v\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if i .Size .X ==0||i .Size .Y ==0{return _afcc ,_abg .New ("\u0069\u006d\u0061\u0067e\u0020\u006d\u0075\u0073\u0074\u0020\u0068\u0061\u0076\u0065 \u0061 \u0076\u0061\u006c\u0069\u0064\u0020\u0073i\u007a\u0065");};_fcde .Images =append (_fcde .Images ,_afcc );_fcde .ContentTypes .EnsureDefault ("\u0070\u006e\u0067","\u0069m\u0061\u0067\u0065\u002f\u0070\u006eg");_fcde .ContentTypes .EnsureDefault ("\u006a\u0070\u0065\u0067","\u0069\u006d\u0061\u0067\u0065\u002f\u006a\u0070\u0065\u0067");_fcde .ContentTypes .EnsureDefault ("\u006a\u0070\u0067","\u0069\u006d\u0061\u0067\u0065\u002f\u006a\u0070\u0065\u0067");_fcde .ContentTypes .EnsureDefault ("\u0077\u006d\u0066","i\u006d\u0061\u0067\u0065\u002f\u0078\u002d\u0077\u006d\u0066");_fcde .ContentTypes .EnsureDefault (i .Format ,"\u0069\u006d\u0061\u0067\u0065\u002f"+i .Format );return _afcc ,nil ;};func _bcd (){_bdb ,_ddc :=_bca .ReadBuildInfo ();if !_ddc {if !_bdc {_ead .Printf ("\u0042\u0075il\u0064\u0020\u0069n\u0066\u006f\u0072\u006dati\u006fn \u006d\u0069\u0073\u0073\u0069\u006e\u0067 -\u0020\u0045\u0078\u0069\u0074\u0069\u006eg\u000a");_fdbd .Exit (1);}else {return ;};};_cce :=0;for _ ,_de :=range _bdb .Deps {if _de .Path =="g\u0069\u0074\u0068\u0075\u0062\u002ec\u006f\u006d\u002f\u0075\u006e\u0069\u0064\u006f\u0063/\u0075\u006e\u0069o\u0066f\u0069\u0063\u0065"&&_de .Replace ==nil {_cce =1;};};_fda :=_bdc ;if _abbc .HasPrefix (_bdb .Path ,"\u0067i\u0074h\u0075\u0062\u002e\u0063\u006fm\u002f\u0075n\u0069\u0064\u006f\u0063\u002f"){_fda =true ;};if _cce !=1&&!_fda {_ead .Printf ("\u0050\u0061\u0063\u006b\u0061\u0067\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u002d\u0020E\u0078\u0069t\u0069\u006e\u0067\u000a");_fdbd .Exit (1);};};

// TextBox is a text box within a slide.
type TextBox struct{_ddeg *_dbde .CT_Shape };

// ViewProperties contains presentation specific properties.
type ViewProperties struct{_gaa *_dbde .ViewPr };

// Save writes the presentation out to a writer in the Zip package format
func (_aae *Presentation )Save (w _gac .Writer )error {return _aae .save (w ,false )};

// Properties returns the properties of the TextBox.
func (_abe TextBox )Properties ()_ffa .ShapeProperties {if _abe ._ddeg .SpPr ==nil {_abe ._ddeg .SpPr =_dbd .NewCT_ShapeProperties ();};return _ffa .MakeShapeProperties (_abe ._ddeg .SpPr );};

// SorterViewPr returns the SorterViewPr property.
func (_eb ViewProperties )SorterViewPr ()*_dbde .CT_SlideSorterViewProperties {return _eb ._gaa .SorterViewPr ;};

// PrnPr returns the PrnPr property.
func (_ddd PresentationProperties )PrnPr ()*_dbde .CT_PrintProperties {return _ddd ._dccd .PrnPr };

// Slides returns the slides in the presentation.
func (_eba *Presentation )Slides ()[]Slide {_fbg :=[]Slide {};for _faa ,_bda :=range _eba ._aff {_fbg =append (_fbg ,Slide {_eba ._edb .SldIdLst .SldId [_faa ],_bda ,_eba });};return _fbg ;};

// Properties returns the properties of the TextBox.
func (_fdb Image )Properties ()_ffa .ShapeProperties {if _fdb ._aac .SpPr ==nil {_fdb ._aac .SpPr =_dbd .NewCT_ShapeProperties ();};return _ffa .MakeShapeProperties (_fdb ._aac .SpPr );};func (_cae *Presentation )onNewRelationship (_c *_feff .DecodeMap ,_cdc ,_bbb string ,_b []*_d .File ,_eeab *_cdd .Relationship ,_eee _feff .Target )error {_eeg :=_cff .DocTypePresentation ;switch _bbb {case _cff .OfficeDocumentType :_cae ._edb =_dbde .NewPresentation ();_c .AddTarget (_cdc ,_cae ._edb ,_bbb ,0);_c .AddTarget (_feff .RelationsPathFor (_cdc ),_cae ._bgb .X (),_bbb ,0);_eeab .TargetAttr =_cff .RelativeFilename (_eeg ,_eee .Typ ,_bbb ,0);case _cff .CorePropertiesType :_c .AddTarget (_cdc ,_cae .CoreProperties .X (),_bbb ,0);_eeab .TargetAttr =_cff .RelativeFilename (_eeg ,_eee .Typ ,_bbb ,0);case _cff .CustomPropertiesType :_c .AddTarget (_cdc ,_cae .CustomProperties .X (),_bbb ,0);_eeab .TargetAttr =_cff .RelativeFilename (_eeg ,_eee .Typ ,_bbb ,0);case _cff .PresentationPropertiesType :_c .AddTarget (_cdc ,_cae ._ecd .X (),_bbb ,0);_eeab .TargetAttr =_cff .RelativeFilename (_eeg ,_eee .Typ ,_bbb ,0);case _cff .ViewPropertiesType :_c .AddTarget (_cdc ,_cae ._dea .X (),_bbb ,0);_eeab .TargetAttr =_cff .RelativeFilename (_eeg ,_eee .Typ ,_bbb ,0);case _cff .TableStylesType :_c .AddTarget (_cdc ,_cae ._acbg .X (),_bbb ,0);_eeab .TargetAttr =_cff .RelativeFilename (_eeg ,_eee .Typ ,_bbb ,0);case _cff .HyperLinkType :_gg :=_dbd .NewCT_Hyperlink ();_gdd :=uint32 (len (_cae ._eae ));_c .AddTarget (_cdc ,_gg ,_bbb ,_gdd );_cae ._eae =append (_cae ._eae ,_gg );case _cff .CustomXMLType :_fafb :=&_cff .XSDAny {};_gfc :=uint32 (len (_cae ._cbdf ));_c .AddTarget (_cdc ,_fafb ,_bbb ,_gfc );_cae ._cbdf =append (_cae ._cbdf ,_fafb );_eeab .TargetAttr =_cff .RelativeFilename (_eeg ,_eee .Typ ,_bbb ,len (_cae ._cbdf ));case _cff .ChartType :_ccg :=_fbe .NewChartSpace ();_bgda :=uint32 (len (_cae ._caf ));_c .AddTarget (_cdc ,_ccg ,_bbb ,_bgda );_cae ._caf =append (_cae ._caf ,_ccg );_eeab .TargetAttr =_cff .RelativeFilename (_eeg ,_eee .Typ ,_bbb ,len (_cae ._caf ));case _cff .HandoutMasterType :_ggaf :=_dbde .NewHandoutMaster ();_afg :=uint32 (len (_cae ._fcd ));_c .AddTarget (_cdc ,_ggaf ,_bbb ,_afg );_cae ._fcd =append (_cae ._fcd ,_ggaf );_eeab .TargetAttr =_cff .RelativeFilename (_eeg ,_eee .Typ ,_bbb ,len (_cae ._fcd ));case _cff .NotesMasterType :_eabb :=_dbde .NewNotesMaster ();_gdg :=uint32 (len (_cae ._fgf ));_c .AddTarget (_cdc ,_eabb ,_bbb ,_gdg );_cae ._fgf =append (_cae ._fgf ,_eabb );_eeab .TargetAttr =_cff .RelativeFilename (_eeg ,_eee .Typ ,_bbb ,len (_cae ._fgf ));case _cff .ExtendedPropertiesType :_c .AddTarget (_cdc ,_cae .AppProperties .X (),_bbb ,0);_eeab .TargetAttr =_cff .RelativeFilename (_eeg ,_eee .Typ ,_bbb ,0);case _cff .SlideType :_dbcc :=_dbde .NewSld ();_cae ._aff =append (_cae ._aff ,_dbcc );_c .AddTarget (_cdc ,_dbcc ,_bbb ,uint32 (len (_cae ._aff )));_eeab .TargetAttr =_cff .RelativeFilename (_eeg ,_eee .Typ ,_bbb ,len (_cae ._aff ));_dffg :=_eaeg .NewRelationships ();_c .AddTarget (_feff .RelationsPathFor (_cdc ),_dffg .X (),_bbb ,0);_cae ._fcb =append (_cae ._fcb ,_dffg );case _cff .SlideMasterType :_daf :=_dbde .NewSldMaster ();if !_c .AddTarget (_cdc ,_daf ,_bbb ,uint32 (len (_cae ._gfb )+1)){return nil ;};_cae ._gfb =append (_cae ._gfb ,_daf );_eeab .TargetAttr =_cff .RelativeFilename (_eeg ,_eee .Typ ,_bbb ,len (_cae ._gfb ));_dcg :=_eaeg .NewRelationships ();_c .AddTarget (_feff .RelationsPathFor (_cdc ),_dcg .X (),_bbb ,0);_cae ._cbd =append (_cae ._cbd ,_dcg );case _cff .SlideLayoutType :_ec :=_dbde .NewSldLayout ();if !_c .AddTarget (_cdc ,_ec ,_bbb ,uint32 (len (_cae ._gfe )+1)){return nil ;};_cae ._gfe =append (_cae ._gfe ,_ec );_eeab .TargetAttr =_cff .RelativeFilename (_eeg ,_eee .Typ ,_bbb ,len (_cae ._gfe ));_fgc :=_eaeg .NewRelationships ();_c .AddTarget (_feff .RelationsPathFor (_cdc ),_fgc .X (),_bbb ,0);_cae ._a =append (_cae ._a ,_fgc );case _cff .ThumbnailType :for _dfcb ,_facc :=range _b {if _facc ==nil {continue ;};if _facc .Name ==_cdc {_gbd ,_dbe :=_facc .Open ();if _dbe !=nil {return _ead .Errorf ("e\u0072\u0072\u006f\u0072\u0020\u0072e\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0068\u0075m\u0062\u006e\u0061i\u006c:\u0020\u0025\u0073",_dbe );};_cae .Thumbnail ,_ ,_dbe =_dbc .Decode (_gbd );_gbd .Close ();if _dbe !=nil {return _ead .Errorf ("\u0065\u0072\u0072\u006fr\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020t\u0068u\u006d\u0062\u006e\u0061\u0069\u006c\u003a \u0025\u0073",_dbe );};_b [_dfcb ]=nil ;};};case _cff .ThemeType :_adb :=_dbd .NewTheme ();if !_c .AddTarget (_cdc ,_adb ,_bbb ,uint32 (len (_cae ._gec )+1)){return nil ;};_cae ._gec =append (_cae ._gec ,_adb );_eeab .TargetAttr =_cff .RelativeFilename (_eeg ,_eee .Typ ,_bbb ,len (_cae ._gec ));_e :=_eaeg .NewRelationships ();_c .AddTarget (_feff .RelationsPathFor (_cdc ),_e .X (),_bbb ,0);_cae ._gcg =append (_cae ._gcg ,_e );case _cff .ImageType :_cdc =_cgb .Clean (_cdc );if _fbb ,_ffd :=_cae ._abb [_cdc ];_ffd {_eeab .TargetAttr =_fbb ;return nil ;};_efd :="";for _ege ,_cfbd :=range _b {if _cfbd ==nil {continue ;};if _cfbd .Name ==_cdc {_dff ,_gfa :=_feff .ExtractToDiskTmp (_cfbd ,_cae .TmpPath );if _gfa !=nil {return _gfa ;};_cdg ,_gfa :=_eaeg .ImageFromFile (_dff );if _gfa !=nil {return _gfa ;};_efd =_cdg .Format ;_dgdd :=_eaeg .MakeImageRef (_cdg ,&_cae .DocBase ,_cae ._bgb );_cae .Images =append (_cae .Images ,_dgdd );_b [_ege ]=nil ;_c .RecordIndex (_cdc ,len (_cae .Images ));break ;};};_gga :=_c .IndexFor (_cdc );_eeab .TargetAttr =_cff .RelativeImageFilename (_eeg ,_eee .Typ ,_bbb ,_gga ,_efd );_cae ._abb [_cdc ]=_eeab .TargetAttr ;default:_cff .Log ("\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0072\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u0020\u0074\u0067\u0074\u003a\u0020\u0025\u0073",_bbb ,_cdc );};return nil ;};

// Slide represents a slide of a presentation.
type Slide struct{_ed *_dbde .CT_SlideIdListEntry ;_adf *_dbde .Sld ;_gbe *Presentation ;};

// SlideViewPr returns the SlideViewPr property.
func (_gag ViewProperties )SlideViewPr ()*_dbde .CT_SlideViewProperties {return _gag ._gaa .SlideViewPr };

// Type returns the type of the slide layout.
func (_ccd SlideLayout )Type ()_dbde .ST_SlideLayoutType {return _ccd ._cg .TypeAttr };

// GetImageByRelID returns an ImageRef with the associated relation ID in the
// document.
func (_fcag *Presentation )GetImageByRelID (relID string )(_eaeg .ImageRef ,bool ){for _ ,_ddf :=range _fcag .Images {if _ddf .RelID ()==relID {return _ddf ,true ;};};return _eaeg .ImageRef {},false ;};

// AddDefaultSlideWithLayout tries to replicate what PowerPoint does when
// inserting a slide with a new style by clearing placeholder content and removing
// some placeholders.  Use AddSlideWithLayout if you need more control.
func (_fad *Presentation )AddDefaultSlideWithLayout (l SlideLayout )(Slide ,error ){_fca ,_dcdf :=_fad .AddSlideWithLayout (l );for _ ,_cbf :=range _fca .PlaceHolders (){_cbf .Clear ();switch _cbf .Type (){case _dbde .ST_PlaceholderTypeFtr ,_dbde .ST_PlaceholderTypeDt ,_dbde .ST_PlaceholderTypeSldNum :_cbf .Remove ();};};return _fca ,_dcdf ;};func (_gdcd *Presentation )save (_ceed _gac .Writer ,_aaab bool )error {if _eca :=_gdcd ._edb .Validate ();_eca !=nil {_ecc .Printf ("\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u0020i\u006e\u0020\u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0073",_eca );};if !_gfgd .GetLicenseKey ().IsLicensed ()&&!_bdc {_ead .Println ("\u0055\u006e\u006ci\u0063\u0065\u006e\u0073e\u0064\u0020\u0076\u0065\u0072\u0073\u0069o\u006e\u0020\u006f\u0066\u0020\u0055\u006e\u0069\u004f\u0066\u0066\u0069\u0063\u0065");_ead .Println ("\u002d\u0020\u0047e\u0074\u0020\u0061\u0020\u0074\u0072\u0069\u0061\u006c\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");return _abg .New ("\u0075\u006e\u0069\u006f\u0066\u0066\u0069\u0063\u0065\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0064");};if _aaab {_gdcd .ContentTypes .RemoveOverride ("\u0061\u0070\u0070\u006c\u0069\u0063\u0061t\u0069\u006f\u006e\u002f\u0076\u006e\u0064\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002d\u006ff\u0066\u0069\u0063\u0065\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u002e\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002e\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u002e\u006d\u0061\u0069\u006e\u002b\u0078\u006d\u006c");_gdcd .ContentTypes .EnsureOverride ("/\u0070\u0070\u0074\u002fpr\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006e\u002e\u0078\u006d\u006c","\u0061\u0070pl\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0076\u006e\u0064\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066o\u0072\u006d\u0061\u0074s\u002d\u006f\u0066\u0066ic\u0065\u0064o\u0063u\u006d\u0065\u006e\u0074\u002e\u0070r\u0065\u0073\u0065n\u0074\u0061t\u0069\u006f\u006e\u006d\u006c\u002e\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065.\u006d\u0061\u0069\u006e\u002b\u0078\u006d\u006c");}else {_gdcd .ContentTypes .RemoveOverride ("\u0061\u0070pl\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0076\u006e\u0064\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066o\u0072\u006d\u0061\u0074s\u002d\u006f\u0066\u0066ic\u0065\u0064o\u0063u\u006d\u0065\u006e\u0074\u002e\u0070r\u0065\u0073\u0065n\u0074\u0061t\u0069\u006f\u006e\u006d\u006c\u002e\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065.\u006d\u0061\u0069\u006e\u002b\u0078\u006d\u006c");_gdcd .ContentTypes .EnsureOverride ("/\u0070\u0070\u0074\u002fpr\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006e\u002e\u0078\u006d\u006c","\u0061\u0070\u0070\u006c\u0069\u0063\u0061t\u0069\u006f\u006e\u002f\u0076\u006e\u0064\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002d\u006ff\u0066\u0069\u0063\u0065\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u002e\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002e\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u002e\u006d\u0061\u0069\u006e\u002b\u0078\u006d\u006c");};_ba :=_cff .DocTypePresentation ;_fed :=_d .NewWriter (_ceed );defer _fed .Close ();if _af :=_feff .MarshalXML (_fed ,_cff .BaseRelsFilename ,_gdcd .Rels .X ());_af !=nil {return _af ;};if _abbb :=_feff .MarshalXMLByType (_fed ,_ba ,_cff .ExtendedPropertiesType ,_gdcd .AppProperties .X ());_abbb !=nil {return _abbb ;};if _ff :=_feff .MarshalXMLByType (_fed ,_ba ,_cff .CorePropertiesType ,_gdcd .CoreProperties .X ());_ff !=nil {return _ff ;};if _cgcc :=_feff .MarshalXMLByType (_fed ,_ba ,_cff .PresentationPropertiesType ,_gdcd ._ecd .X ());_cgcc !=nil {return _cgcc ;};if _fdf :=_feff .MarshalXMLByType (_fed ,_ba ,_cff .ViewPropertiesType ,_gdcd ._dea .X ());_fdf !=nil {return _fdf ;};if _gbf :=_feff .MarshalXMLByType (_fed ,_ba ,_cff .TableStylesType ,_gdcd ._acbg .X ());_gbf !=nil {return _gbf ;};if _gdcd .CustomProperties .X ()!=nil {if _faff :=_feff .MarshalXMLByType (_fed ,_ba ,_cff .CustomPropertiesType ,_gdcd .CustomProperties .X ());_faff !=nil {return _faff ;};};if _gdcd .Thumbnail !=nil {_cgf ,_gece :=_fed .Create ("\u0064\u006f\u0063Pr\u006f\u0070\u0073\u002f\u0074\u0068\u0075\u006d\u0062\u006e\u0061\u0069\u006c\u002e\u006a\u0070\u0065\u0067");if _gece !=nil {return _gece ;};if _edc :=_gab .Encode (_cgf ,_gdcd .Thumbnail ,nil );_edc !=nil {return _edc ;};};_def :=_cff .AbsoluteFilename (_ba ,_cff .OfficeDocumentType ,0);if _eegd :=_feff .MarshalXML (_fed ,_def ,_gdcd ._edb );_eegd !=nil {return _eegd ;};if _g :=_feff .MarshalXML (_fed ,_feff .RelationsPathFor (_def ),_gdcd ._bgb .X ());_g !=nil {return _g ;};for _ef ,_dgf :=range _gdcd ._aff {_gf :=_cff .AbsoluteFilename (_cff .DocTypePresentation ,_cff .SlideType ,_ef +1);_feff .MarshalXML (_fed ,_gf ,_dgf );if !_gdcd ._fcb [_ef ].IsEmpty (){_bced :=_feff .RelationsPathFor (_gf );_feff .MarshalXML (_fed ,_bced ,_gdcd ._fcb [_ef ].X ());};};for _fbf ,_cfa :=range _gdcd ._gfb {_bbe :=_cff .AbsoluteFilename (_cff .DocTypePresentation ,_cff .SlideMasterType ,_fbf +1);_feff .MarshalXML (_fed ,_bbe ,_cfa );if !_gdcd ._cbd [_fbf ].IsEmpty (){_aaa :=_feff .RelationsPathFor (_bbe );_feff .MarshalXML (_fed ,_aaa ,_gdcd ._cbd [_fbf ].X ());};};for _adga ,_ebgd :=range _gdcd ._gfe {_efb :=_cff .AbsoluteFilename (_cff .DocTypePresentation ,_cff .SlideLayoutType ,_adga +1);_feff .MarshalXML (_fed ,_efb ,_ebgd );if !_gdcd ._a [_adga ].IsEmpty (){_gee :=_feff .RelationsPathFor (_efb );_feff .MarshalXML (_fed ,_gee ,_gdcd ._a [_adga ].X ());};};for _bcge ,_ccf :=range _gdcd ._gec {_eddb :=_cff .AbsoluteFilename (_cff .DocTypePresentation ,_cff .ThemeType ,_bcge +1);_feff .MarshalXML (_fed ,_eddb ,_ccf );if !_gdcd ._gcg [_bcge ].IsEmpty (){_bed :=_feff .RelationsPathFor (_eddb );_feff .MarshalXML (_fed ,_bed ,_gdcd ._gcg [_bcge ].X ());};};for _bef ,_cfbf :=range _gdcd ._caf {_dge :=_cff .AbsoluteFilename (_ba ,_cff .ChartType ,_bef +1);_feff .MarshalXML (_fed ,_dge ,_cfbf );};for _ega ,_fcff :=range _gdcd ._fcd {_dfc :=_cff .AbsoluteFilename (_ba ,_cff .HandoutMasterType ,_ega +1);_feff .MarshalXML (_fed ,_dfc ,_fcff );};for _ggag ,_bedg :=range _gdcd ._fgf {_dc :=_cff .AbsoluteFilename (_ba ,_cff .NotesMasterType ,_ggag +1);_feff .MarshalXML (_fed ,_dc ,_bedg );};for _gge ,_adbg :=range _gdcd ._cbdf {_f :=_cff .AbsoluteFilename (_ba ,_cff .CustomXMLType ,_gge +1);_feff .MarshalXML (_fed ,_f ,_adbg );};for _bab ,_bag :=range _gdcd .Images {if _ggf :=_eaeg .AddImageToZip (_fed ,_bag ,_bab +1,_cff .DocTypePresentation );_ggf !=nil {return _ggf ;};};_gdcd .ContentTypes .EnsureDefault ("\u0070\u006e\u0067","\u0069m\u0061\u0067\u0065\u002f\u0070\u006eg");_gdcd .ContentTypes .EnsureDefault ("\u006a\u0070\u0065\u0067","\u0069\u006d\u0061\u0067\u0065\u002f\u006a\u0070\u0065\u0067");_gdcd .ContentTypes .EnsureDefault ("\u006a\u0070\u0067","\u0069\u006d\u0061\u0067\u0065\u002f\u006a\u0070\u0065\u0067");_gdcd .ContentTypes .EnsureDefault ("\u0077\u006d\u0066","i\u006d\u0061\u0067\u0065\u002f\u0078\u002d\u0077\u006d\u0066");if _dag :=_feff .MarshalXML (_fed ,_cff .ContentTypesFilename ,_gdcd .ContentTypes .X ());_dag !=nil {return _dag ;};if _bggc :=_gdcd .WriteExtraFiles (_fed );_bggc !=nil {return _bggc ;};return nil ;};

// Name returns the name of the slide layout.
func (_daff SlideLayout )Name ()string {if _daff ._cg .CSld !=nil &&_daff ._cg .CSld .NameAttr !=nil {return *_daff ._cg .CSld .NameAttr ;};return "";};

// Remove removes a placeholder from a presentation.
func (_bcf PlaceHolder )Remove ()error {for _dafc ,_cbcb :=range _bcf ._caa .CSld .SpTree .Choice {for _ ,_dcc :=range _cbcb .Sp {if _dcc ==_bcf ._acd {copy (_bcf ._caa .CSld .SpTree .Choice [_dafc :],_bcf ._caa .CSld .SpTree .Choice [_dafc +1:]);_bcf ._caa .CSld .SpTree .Choice =_bcf ._caa .CSld .SpTree .Choice [0:len (_bcf ._caa .CSld .SpTree .Choice )-1];return nil ;};};};return _abg .New ("\u0070\u006c\u0061\u0063\u0065\u0068\u006f\u006c\u0064\u0065r\u0020\u006e\u006f\u0074\u0020\u0066\u006fu\u006e\u0064\u0020\u0069\u006e\u0020\u0073\u006c\u0069\u0064\u0065");};

// OpenTemplate opens a template file.
func OpenTemplate (fn string )(*Presentation ,error ){_fcaa ,_baga :=Open (fn );if _baga !=nil {return nil ,_baga ;};return _fcaa ,nil ;};

// AddParagraph adds a paragraph to the text box
func (_fcaf TextBox )AddParagraph ()_ffa .Paragraph {_fcc :=_dbd .NewCT_TextParagraph ();_fcaf ._ddeg .TxBody .P =append (_fcaf ._ddeg .TxBody .P ,_fcc );return _ffa .MakeParagraph (_fcc );};

// NewViewProperties constructs a new ViewProperties.
func NewViewProperties ()ViewProperties {return ViewProperties {_gaa :_dbde .NewViewPr ()}};

// ExtLst returns the ExtLst property.
func (_fbc ViewProperties )ExtLst ()*_dbde .CT_ExtensionList {return _fbc ._gaa .ExtLst };

// AddImageToRels adds an image relationship to a slide without putting image on the slide.
func (_ebg Slide )AddImageToRels (img _eaeg .ImageRef )string {_cgc :=0;for _ggec ,_faca :=range _ebg ._gbe .Images {if _faca ==img {_cgc =_ggec +1;break ;};};var _ageb string ;for _dda ,_ggg :=range _ebg ._gbe .Slides (){if _ggg ._adf ==_ebg ._adf {_ade :=_ead .Sprintf ("\u002e\u002e\u002f\u006ded\u0069\u0061\u002f\u0069\u006d\u0061\u0067\u0065\u0025\u0064\u002e\u0025\u0073",_cgc ,img .Format ());_efe :=_ebg ._gbe ._fcb [_dda ].AddRelationship (_ade ,_cff .ImageType );_ageb =_efe .ID ();};};return _ageb ;};

// WebPr returns the WebPr property.
func (_be PresentationProperties )WebPr ()*_dbde .CT_WebProperties {return _be ._dccd .WebPr };

// RemoveSlide removes a slide from a presentation.
func (_ca *Presentation )RemoveSlide (s Slide )error {_ced :=false ;_dga :=0;for _dcdb ,_gdf :=range _ca ._aff {if _gdf ==s ._adf {if _ca ._edb .SldIdLst .SldId [_dcdb ]!=s ._ed {return _abg .New ("i\u006e\u0063\u006f\u006e\u0073\u0069s\u0074\u0065\u006e\u0063\u0079\u0020i\u006e\u0020\u0073\u006c\u0069\u0064\u0065s\u0020\u0061\u006e\u0064\u0020\u0049\u0044\u0020\u006c\u0069s\u0074");};copy (_ca ._aff [_dcdb :],_ca ._aff [_dcdb +1:]);_ca ._aff =_ca ._aff [0:len (_ca ._aff )-1];copy (_ca ._fcb [_dcdb :],_ca ._fcb [_dcdb +1:]);_ca ._fcb =_ca ._fcb [0:len (_ca ._fcb )-1];copy (_ca ._edb .SldIdLst .SldId [_dcdb :],_ca ._edb .SldIdLst .SldId [_dcdb +1:]);_ca ._edb .SldIdLst .SldId =_ca ._edb .SldIdLst .SldId [0:len (_ca ._edb .SldIdLst .SldId )-1];_ced =true ;_dga =_dcdb ;};};if !_ced {return _abg .New ("u\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0066i\u006e\u0064\u0020\u0073li\u0064\u0065");};_cc :=_cff .AbsoluteFilename (_cff .DocTypePresentation ,_cff .SlideType ,0);return _ca .ContentTypes .RemoveOverrideByIndex (_cc ,_dga );};

// Type returns the placeholder type
func (_cdb PlaceHolder )Type ()_dbde .ST_PlaceholderType {return _cdb ._acd .NvSpPr .NvPr .Ph .TypeAttr };

// SlideLayouts returns the slide layouts defined in the presentation.
func (_abf *Presentation )SlideLayouts ()[]SlideLayout {_cagd :=[]SlideLayout {};for _ ,_bacg :=range _abf ._gfe {_cagd =append (_cagd ,SlideLayout {_bacg });};return _cagd ;};

// X returns the inner wrapped XML type.
func (_ge PresentationProperties )X ()*_dbde .PresentationPr {return _ge ._dccd };

// ClearAll completely clears a placeholder. To be useable, at least one
// paragraph must be added after ClearAll via AddParagraph.
func (_aeg PlaceHolder )ClearAll (){_aeg ._acd .SpPr =_dbd .NewCT_ShapeProperties ();_aeg ._acd .TxBody =_dbd .NewCT_TextBody ();_aeg ._acd .TxBody .LstStyle =_dbd .NewCT_TextListStyle ();};

// SlideMaster is the slide master for a presentation.
type SlideMaster struct{_afe *Presentation ;_fec _eaeg .Relationships ;_deg *_dbde .SldMaster ;};func _dde ()*Presentation {_bdg :=&Presentation {_edb :_dbde .NewPresentation ()};_bdg ._edb .SldIdLst =_dbde .NewCT_SlideIdList ();_bdg ._edb .ConformanceAttr =_fgea .ST_ConformanceClassTransitional ;_bdg .AppProperties =_eaeg .NewAppProperties ();_bdg .CoreProperties =_eaeg .NewCoreProperties ();_bdg ._acbg =_eaeg .NewTableStyles ();_bdg .ContentTypes =_eaeg .NewContentTypes ();_bdg .Rels =_eaeg .NewRelationships ();_bdg ._bgb =_eaeg .NewRelationships ();_bdg ._ecd =NewPresentationProperties ();_bdg ._dea =NewViewProperties ();_bdg ._abb =map[string ]string {};return _bdg ;};

// SetTextAnchor controls the text anchoring
func (_bade TextBox )SetTextAnchor (a _dbd .ST_TextAnchoringType ){_bade ._ddeg .TxBody .BodyPr =_dbd .NewCT_TextBodyProperties ();_bade ._ddeg .TxBody .BodyPr .AnchorAttr =a ;};

// SaveToFileAsTemplate writes the Presentation out to a file as a template.
func (_aceb *Presentation )SaveToFileAsTemplate (path string )error {return _aceb .saveToFile (path ,true );};

// NotesViewPr returns the NotesViewPr property.
func (_bdfg ViewProperties )NotesViewPr ()*_dbde .CT_NotesViewProperties {return _bdfg ._gaa .NotesViewPr ;};