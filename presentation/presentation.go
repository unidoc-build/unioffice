//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package presentation ;import (_a "archive/zip";_ge "bytes";_cbe "encoding/xml";_dc "errors";_eeecc "flag";_ccd "fmt";_ecc "github.com/unidoc/unioffice";_afdc "github.com/unidoc/unioffice/color";_dce "github.com/unidoc/unioffice/common";_ab "github.com/unidoc/unioffice/common/license";_dcf "github.com/unidoc/unioffice/drawing";_egab "github.com/unidoc/unioffice/measurement";_gabc "github.com/unidoc/unioffice/schema/soo/dml";_egfa "github.com/unidoc/unioffice/schema/soo/dml/chart";_bee "github.com/unidoc/unioffice/schema/soo/ofc/sharedTypes";_fcb "github.com/unidoc/unioffice/schema/soo/pkg/relationships";_bbc "github.com/unidoc/unioffice/schema/soo/pml";_effa "github.com/unidoc/unioffice/zippkg";_efe "image";_aad "image/jpeg";_bgf "io";_cddc "io/ioutil";_ag "log";_fga "os";_acgge "path";_egcf "strconv";_ceg "strings";);func (_ee *Presentation )saveToFile (_bcde string ,_fabf bool )error {_gadd ,_efb :=_fga .Create (_bcde );if _efb !=nil {return _efb ;};defer _gadd .Close ();return _ee .save (_gadd ,_fabf );};func (_fff *Presentation )onNewRelationship (_fe *_effa .DecodeMap ,_fgbd ,_cfcb string ,_bgg []*_a .File ,_ec *_fcb .Relationship ,_dfg _effa .Target )error {_ccb :=_ecc .DocTypePresentation ;switch _cfcb {case _ecc .OfficeDocumentType :_fff ._bbe =_bbc .NewPresentation ();_fe .AddTarget (_fgbd ,_fff ._bbe ,_cfcb ,0);_fe .AddTarget (_effa .RelationsPathFor (_fgbd ),_fff ._dfa .X (),_cfcb ,0);_ec .TargetAttr =_ecc .RelativeFilename (_ccb ,_dfg .Typ ,_cfcb ,0);case _ecc .CorePropertiesType :_fe .AddTarget (_fgbd ,_fff .CoreProperties .X (),_cfcb ,0);_ec .TargetAttr =_ecc .RelativeFilename (_ccb ,_dfg .Typ ,_cfcb ,0);case _ecc .CustomPropertiesType :_fe .AddTarget (_fgbd ,_fff .CustomProperties .X (),_cfcb ,0);_ec .TargetAttr =_ecc .RelativeFilename (_ccb ,_dfg .Typ ,_cfcb ,0);case _ecc .PresentationPropertiesType :_fe .AddTarget (_fgbd ,_fff ._bgdc .X (),_cfcb ,0);_ec .TargetAttr =_ecc .RelativeFilename (_ccb ,_dfg .Typ ,_cfcb ,0);case _ecc .ViewPropertiesType :_fe .AddTarget (_fgbd ,_fff ._dg .X (),_cfcb ,0);_ec .TargetAttr =_ecc .RelativeFilename (_ccb ,_dfg .Typ ,_cfcb ,0);case _ecc .TableStylesType :_fe .AddTarget (_fgbd ,_fff ._eeec .X (),_cfcb ,0);_ec .TargetAttr =_ecc .RelativeFilename (_ccb ,_dfg .Typ ,_cfcb ,0);case _ecc .HyperLinkType :_cgda :=_gabc .NewCT_Hyperlink ();_gc :=uint32 (len (_fff ._bdb ));_fe .AddTarget (_fgbd ,_cgda ,_cfcb ,_gc );_fff ._bdb =append (_fff ._bdb ,_cgda );case _ecc .CustomXMLType :_aa :=&_ecc .XSDAny {};_df :=uint32 (len (_fff ._bb ));_fe .AddTarget (_fgbd ,_aa ,_cfcb ,_df );_fff ._bb =append (_fff ._bb ,_aa );_ec .TargetAttr =_ecc .RelativeFilename (_ccb ,_dfg .Typ ,_cfcb ,len (_fff ._bb ));case _ecc .ChartType :_cfc :=_egfa .NewChartSpace ();_bff :=uint32 (len (_fff ._db ));_fe .AddTarget (_fgbd ,_cfc ,_cfcb ,_bff );_fff ._db =append (_fff ._db ,_cfc );_ec .TargetAttr =_ecc .RelativeFilename (_ccb ,_dfg .Typ ,_cfcb ,len (_fff ._db ));case _ecc .HandoutMasterType :_ffbe :=_bbc .NewHandoutMaster ();_ccg :=uint32 (len (_fff ._ff ));_fe .AddTarget (_fgbd ,_ffbe ,_cfcb ,_ccg );_fff ._ff =append (_fff ._ff ,_ffbe );_ec .TargetAttr =_ecc .RelativeFilename (_ccb ,_dfg .Typ ,_cfcb ,len (_fff ._ff ));case _ecc .NotesMasterType :_cg :=_bbc .NewNotesMaster ();_gb :=uint32 (len (_fff ._ffc ));_fe .AddTarget (_fgbd ,_cg ,_cfcb ,_gb );_fff ._ffc =append (_fff ._ffc ,_cg );_ec .TargetAttr =_ecc .RelativeFilename (_ccb ,_dfg .Typ ,_cfcb ,len (_fff ._ffc ));case _ecc .ExtendedPropertiesType :_fe .AddTarget (_fgbd ,_fff .AppProperties .X (),_cfcb ,0);_ec .TargetAttr =_ecc .RelativeFilename (_ccb ,_dfg .Typ ,_cfcb ,0);case _ecc .SlideType :_fg :=_bbc .NewSld ();_fff ._adg =append (_fff ._adg ,_fg );_fe .AddTarget (_fgbd ,_fg ,_cfcb ,uint32 (len (_fff ._adg )));_ec .TargetAttr =_ecc .RelativeFilename (_ccb ,_dfg .Typ ,_cfcb ,len (_fff ._adg ));_bf :=_dce .NewRelationships ();_fe .AddTarget (_effa .RelationsPathFor (_fgbd ),_bf .X (),_cfcb ,0);_fff ._g =append (_fff ._g ,_bf );case _ecc .SlideMasterType :_eec :=_bbc .NewSldMaster ();if !_fe .AddTarget (_fgbd ,_eec ,_cfcb ,uint32 (len (_fff ._gce )+1)){return nil ;};_fff ._gce =append (_fff ._gce ,_eec );_ec .TargetAttr =_ecc .RelativeFilename (_ccb ,_dfg .Typ ,_cfcb ,len (_fff ._gce ));_dfbg :=_dce .NewRelationships ();_fe .AddTarget (_effa .RelationsPathFor (_fgbd ),_dfbg .X (),_cfcb ,0);_fff ._dfb =append (_fff ._dfb ,_dfbg );case _ecc .SlideLayoutType :_edg :=_bbc .NewSldLayout ();if !_fe .AddTarget (_fgbd ,_edg ,_cfcb ,uint32 (len (_fff ._aeg )+1)){return nil ;};_fff ._aeg =append (_fff ._aeg ,_edg );_ec .TargetAttr =_ecc .RelativeFilename (_ccb ,_dfg .Typ ,_cfcb ,len (_fff ._aeg ));_eac :=_dce .NewRelationships ();_fe .AddTarget (_effa .RelationsPathFor (_fgbd ),_eac .X (),_cfcb ,0);_fff ._ecb =append (_fff ._ecb ,_eac );case _ecc .ThumbnailType :for _bgdca ,_bac :=range _bgg {if _bac ==nil {continue ;};if _bac .Name ==_fgbd {_ddc ,_cdd :=_bac .Open ();if _cdd !=nil {return _ccd .Errorf ("e\u0072\u0072\u006f\u0072\u0020\u0072e\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0068\u0075m\u0062\u006e\u0061i\u006c:\u0020\u0025\u0073",_cdd );};_fff .Thumbnail ,_ ,_cdd =_efe .Decode (_ddc );_ddc .Close ();if _cdd !=nil {return _ccd .Errorf ("\u0065\u0072\u0072\u006fr\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020t\u0068u\u006d\u0062\u006e\u0061\u0069\u006c\u003a \u0025\u0073",_cdd );};_bgg [_bgdca ]=nil ;};};case _ecc .ThemeType :_gef :=_gabc .NewTheme ();if !_fe .AddTarget (_fgbd ,_gef ,_cfcb ,uint32 (len (_fff ._eg )+1)){return nil ;};_fff ._eg =append (_fff ._eg ,_gef );_ec .TargetAttr =_ecc .RelativeFilename (_ccb ,_dfg .Typ ,_cfcb ,len (_fff ._eg ));_ceeb :=_dce .NewRelationships ();_fe .AddTarget (_effa .RelationsPathFor (_fgbd ),_ceeb .X (),_cfcb ,0);_fff ._cddcd =append (_fff ._cddcd ,_ceeb );case _ecc .ImageType :_fgbd =_acgge .Clean (_fgbd );if _bgfc ,_fgf :=_fff ._aba [_fgbd ];_fgf {_ec .TargetAttr =_bgfc ;return nil ;};_cfeea :="";for _gda ,_gd :=range _bgg {if _gd ==nil {continue ;};if _gd .Name ==_fgbd {_abc ,_cgbe :=_effa .ExtractToDiskTmp (_gd ,_fff .TmpPath );if _cgbe !=nil {return _cgbe ;};_adc ,_cgbe :=_dce .ImageFromFile (_abc );if _cgbe !=nil {return _cgbe ;};_cfeea =_adc .Format ;_e :=_dce .MakeImageRef (_adc ,&_fff .DocBase ,_fff ._dfa );_fff .Images =append (_fff .Images ,_e );_bgg [_gda ]=nil ;_fe .RecordIndex (_fgbd ,len (_fff .Images ));break ;};};_fac :=_fe .IndexFor (_fgbd );_ec .TargetAttr =_ecc .RelativeImageFilename (_ccb ,_dfg .Typ ,_cfcb ,_fac ,_cfeea );_fff ._aba [_fgbd ]=_ec .TargetAttr ;default:_ecc .Log ("\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0072\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u0020\u0074\u0067\u0074\u003a\u0020\u0025\u0073",_cfcb ,_fgbd );};return nil ;};

// SlideLayouts returns the slide layouts defined in the presentation.
func (_eee *Presentation )SlideLayouts ()[]SlideLayout {_cfe :=[]SlideLayout {};for _ ,_fbe :=range _eee ._aeg {_cfe =append (_cfe ,SlideLayout {_fbe });};return _cfe ;};

// HtmlPubPr returns the HtmlPubPr property.
func (_f PresentationProperties )HtmlPubPr ()*_bbc .CT_HtmlPublishProperties {return _f ._caf .HtmlPubPr };

// AddImageToRels adds an image relationship to a slide without putting image on the slide.
func (_cgc Slide )AddImageToRels (img _dce .ImageRef )string {_aee :=0;for _cef ,_cd :=range _cgc ._bbcd .Images {if _cd ==img {_aee =_cef +1;break ;};};var _eba string ;for _ca ,_bea :=range _cgc ._bbcd .Slides (){if _bea ._dgfc ==_cgc ._dgfc {_fd :=_ccd .Sprintf ("\u002e\u002e\u002f\u006ded\u0069\u0061\u002f\u0069\u006d\u0061\u0067\u0065\u0025\u0064\u002e\u0025\u0073",_aee ,img .Format ());_bc :=_cgc ._bbcd ._g [_ca ].AddRelationship (_fd ,_ecc .ImageType );_eba =_bc .ID ();};};return _eba ;};

// AddTextBox adds an empty textbox to a slide.
func (_ecaa Slide )AddTextBox ()TextBox {_bdf :=_bbc .NewCT_GroupShapeChoice ();_ecaa ._dgfc .CSld .SpTree .Choice =append (_ecaa ._dgfc .CSld .SpTree .Choice ,_bdf );_adb :=_bbc .NewCT_Shape ();_bdf .Sp =append (_bdf .Sp ,_adb );_adb .SpPr =_gabc .NewCT_ShapeProperties ();_adb .SpPr .Xfrm =_gabc .NewCT_Transform2D ();_adb .SpPr .PrstGeom =_gabc .NewCT_PresetGeometry2D ();_adb .SpPr .PrstGeom .PrstAttr =_gabc .ST_ShapeTypeRect ;_adb .TxBody =_gabc .NewCT_TextBody ();_adb .TxBody .BodyPr =_gabc .NewCT_TextBodyProperties ();_adb .TxBody .BodyPr .WrapAttr =_gabc .ST_TextWrappingTypeSquare ;_adb .TxBody .BodyPr .SpAutoFit =_gabc .NewCT_TextShapeAutofit ();_egcd :=TextBox {_adb };_egcd .Properties ().SetWidth (3*_egab .Inch );_egcd .Properties ().SetHeight (1*_egab .Inch );_egcd .Properties ().SetPosition (0,0);return _egcd ;};

// GetPlaceholderByIndex returns a placeholder given its index.  If there are multiplace
// placeholders of the same index, this method returns the first one.  You must use the
// PlaceHolders() method to access the others.
func (_eea Slide )GetPlaceholderByIndex (idx uint32 )(PlaceHolder ,error ){for _ ,_fba :=range _eea ._dgfc .CSld .SpTree .Choice {for _ ,_eafe :=range _fba .Sp {if _eafe .NvSpPr !=nil &&_eafe .NvSpPr .NvPr !=nil &&_eafe .NvSpPr .NvPr .Ph !=nil {if (idx ==0&&_eafe .NvSpPr .NvPr .Ph .IdxAttr ==nil )||(_eafe .NvSpPr .NvPr .Ph .IdxAttr !=nil &&*_eafe .NvSpPr .NvPr .Ph .IdxAttr ==idx ){return PlaceHolder {_eafe ,_eea ._dgfc },nil ;};};};};return PlaceHolder {},_dc .New ("\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0066i\u006e\u0064\u0020\u0070\u006c\u0061\u0063\u0065\u0068\u006fl\u0064\u0065\u0072");};

// OpenTemplate opens a template file.
func OpenTemplate (fn string )(*Presentation ,error ){_bdd ,_gge :=Open (fn );if _gge !=nil {return nil ,_gge ;};return _bdd ,nil ;};

// SlideMasters returns the slide masters defined in the presentation.
func (_gba *Presentation )SlideMasters ()[]SlideMaster {_acf :=[]SlideMaster {};for _ccac ,_bgfd :=range _gba ._gce {_acf =append (_acf ,SlideMaster {_gba ,_gba ._dfb [_ccac ],_bgfd });};return _acf ;};

// Paragraphs returns the paragraphs defined in the placeholder.
func (_aca PlaceHolder )Paragraphs ()[]_dcf .Paragraph {_ege :=[]_dcf .Paragraph {};for _ ,_bge :=range _aca ._gcd .TxBody .P {_ege =append (_ege ,_dcf .MakeParagraph (_bge ));};return _ege ;};

// TextBox is a text box within a slide.
type TextBox struct{_bfee *_bbc .CT_Shape };

// Slide represents a slide of a presentation.
type Slide struct{_gdd *_bbc .CT_SlideIdListEntry ;_dgfc *_bbc .Sld ;_bbcd *Presentation ;};

// ShowPr returns the ShowPr property.
func (_dgg PresentationProperties )ShowPr ()*_bbc .CT_ShowProperties {return _dgg ._caf .ShowPr };

// X returns the inner wrapped XML type.
func (_eef PlaceHolder )X ()*_bbc .CT_Shape {return _eef ._gcd };

// ClrMru returns the ClrMru property.
func (_ea PresentationProperties )ClrMru ()*_gabc .CT_ColorMRU {return _ea ._caf .ClrMru };

// GetImageByRelID returns an ImageRef with the associated relation ID in the
// document.
func (_cgef *Presentation )GetImageByRelID (relID string )(_dce .ImageRef ,bool ){for _ ,_cgb :=range _cgef .Images {if _cgb .RelID ()==relID {return _cgb ,true ;};};return _dce .ImageRef {},false ;};

// AddImage adds an image to the document package, returning a reference that
// can be used to add the image to a run and place it in the document contents.
func (_fda *Presentation )AddImage (i _dce .Image )(_dce .ImageRef ,error ){_agg :=_dce .MakeImageRef (i ,&_fda .DocBase ,_fda ._dfa );if i .Data ==nil &&i .Path ==""{return _agg ,_dc .New ("\u0069\u006d\u0061\u0067\u0065\u0020\u006d\u0075\u0073\u0074 \u0068\u0061\u0076\u0065\u0020\u0064\u0061t\u0061\u0020\u006f\u0072\u0020\u0061\u0020\u0070\u0061\u0074\u0068");};if i .Format ==""{return _agg ,_dc .New ("\u0069\u006d\u0061\u0067\u0065\u0020\u006d\u0075\u0073\u0074 \u0068\u0061\u0076\u0065\u0020\u0061\u0020v\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if i .Size .X ==0||i .Size .Y ==0{return _agg ,_dc .New ("\u0069\u006d\u0061\u0067e\u0020\u006d\u0075\u0073\u0074\u0020\u0068\u0061\u0076\u0065 \u0061 \u0076\u0061\u006c\u0069\u0064\u0020\u0073i\u007a\u0065");};_fda .Images =append (_fda .Images ,_agg );_fda .ContentTypes .EnsureDefault ("\u0070\u006e\u0067","\u0069m\u0061\u0067\u0065\u002f\u0070\u006eg");_fda .ContentTypes .EnsureDefault ("\u006a\u0070\u0065\u0067","\u0069\u006d\u0061\u0067\u0065\u002f\u006a\u0070\u0065\u0067");_fda .ContentTypes .EnsureDefault ("\u006a\u0070\u0067","\u0069\u006d\u0061\u0067\u0065\u002f\u006a\u0070\u0065\u0067");_fda .ContentTypes .EnsureDefault ("\u0077\u006d\u0066","i\u006d\u0061\u0067\u0065\u002f\u0078\u002d\u0077\u006d\u0066");_fda .ContentTypes .EnsureDefault (i .Format ,"\u0069\u006d\u0061\u0067\u0065\u002f"+i .Format );return _agg ,nil ;};

// X returns the inner wrapped XML type.
func (_cad Slide )X ()*_bbc .Sld {return _cad ._dgfc };

// X returns the inner wrapped XML type.
func (_geg SlideLayout )X ()*_bbc .SldLayout {return _geg ._ac };

// AddImage adds an image textbox to a slide.
func (_abbe Slide )AddImage (img _dce .ImageRef )Image {_ecge :=_bbc .NewCT_GroupShapeChoice ();_abbe ._dgfc .CSld .SpTree .Choice =append (_abbe ._dgfc .CSld .SpTree .Choice ,_ecge );_aebg :=_bbc .NewCT_Picture ();_ecge .Pic =append (_ecge .Pic ,_aebg );_aebg .NvPicPr .CNvPicPr =_gabc .NewCT_NonVisualPictureProperties ();_aebg .NvPicPr .CNvPicPr .PicLocks =_gabc .NewCT_PictureLocking ();_aebg .NvPicPr .CNvPicPr .PicLocks .NoChangeAspectAttr =_ecc .Bool (true );_aebg .BlipFill =_gabc .NewCT_BlipFillProperties ();_aebg .BlipFill .Blip =_gabc .NewCT_Blip ();_gdf :=_abbe .AddImageToRels (img );_aebg .BlipFill .Blip .EmbedAttr =_ecc .String (_gdf );_aebg .BlipFill .Stretch =_gabc .NewCT_StretchInfoProperties ();_aebg .BlipFill .Stretch .FillRect =_gabc .NewCT_RelativeRect ();_aebg .SpPr =_gabc .NewCT_ShapeProperties ();_aebg .SpPr .PrstGeom =_gabc .NewCT_PresetGeometry2D ();_aebg .SpPr .PrstGeom .PrstAttr =_gabc .ST_ShapeTypeRect ;_cca :=Image {_aebg };_gbd :=img .Size ();_cca .Properties ().SetWidth (_egab .Distance (_gbd .X )*_egab .Pixel72 );_cca .Properties ().SetHeight (_egab .Distance (_gbd .Y )*_egab .Pixel72 );_cca .Properties ().SetPosition (0,0);return _cca ;};

// Slides returns the slides in the presentation.
func (_bfa *Presentation )Slides ()[]Slide {_ggf :=[]Slide {};for _aef ,_ggc :=range _bfa ._adg {_ggf =append (_ggf ,Slide {_bfa ._bbe .SldIdLst .SldId [_aef ],_ggc ,_bfa });};return _ggf ;};

// AddSlideWithLayout adds a new slide with content copied from a layout.  Normally you should
// use AddDefaultSlideWithLayout as it will do some post processing similar to PowerPoint to
// clear place holder text, etc.
func (_faa *Presentation )AddSlideWithLayout (l SlideLayout )(Slide ,error ){_cge :=_bbc .NewCT_SlideIdListEntry ();_cge .IdAttr =256;for _ ,_aed :=range _faa ._bbe .SldIdLst .SldId {if _aed .IdAttr >=_cge .IdAttr {_cge .IdAttr =_aed .IdAttr +1;};};_faa ._bbe .SldIdLst .SldId =append (_faa ._bbe .SldIdLst .SldId ,_cge );_dgf :=_bbc .NewSld ();_gbg :=_ge .Buffer {};_bde :=_cbe .NewEncoder (&_gbg );_gaaa :=_cbe .StartElement {Name :_cbe .Name {Local :"\u0073\u006c\u0069d\u0065"}};_gaaa .Attr =append (_gaaa .Attr ,_cbe .Attr {Name :_cbe .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"});_gaaa .Attr =append (_gaaa .Attr ,_cbe .Attr {Name :_cbe .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0061"},Value :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"});_gaaa .Attr =append (_gaaa .Attr ,_cbe .Attr {Name :_cbe .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0070"},Value :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"});_gaaa .Attr =append (_gaaa .Attr ,_cbe .Attr {Name :_cbe .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0072"},Value :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"});_gaaa .Attr =append (_gaaa .Attr ,_cbe .Attr {Name :_cbe .Name {Local :"\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"},Value :"\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"});_gaaa .Attr =append (_gaaa .Attr ,_cbe .Attr {Name :_cbe .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});if _gbe :=l ._ac .CSld .MarshalXML (_bde ,_gaaa );_gbe !=nil {return Slide {},_gbe ;};_bde .Flush ();_fec :=_cbe .NewDecoder (&_gbg );_dgf .CSld =_bbc .NewCT_CommonSlideData ();if _gbda :=_fec .Decode (_dgf .CSld );_gbda !=nil {return Slide {},_gbda ;};_dgf .CSld .NameAttr =nil ;_dgf .CSld .SpTree .Choice =_cfd (_dgf .CSld .SpTree .Choice );_faa ._adg =append (_faa ._adg ,_dgf );_aac :=_faa ._dfa .AddAutoRelationship (_ecc .DocTypePresentation ,_ecc .OfficeDocumentType ,len (_faa ._adg ),_ecc .SlideType );_cge .RIdAttr =_aac .ID ();_eagd :=_ecc .AbsoluteFilename (_ecc .DocTypePresentation ,_ecc .SlideType ,len (_faa ._adg ));_faa .ContentTypes .AddOverride (_eagd ,_ecc .SlideContentType );_ddf :=_dce .NewRelationships ();_faa ._g =append (_faa ._g ,_ddf );_fgba :=len (_faa ._g )-1;for _efa ,_def :=range _faa ._aeg {if _def ==l .X (){_fde :=_faa ._ecb [_efa ];for _ ,_dge :=range _fde .X ().Relationship {if _dge .TypeAttr !=_ecc .SlideMasterType {_faa ._g [_fgba ].X ().Relationship =append (_faa ._g [_fgba ].X ().Relationship ,_dge );};};_ddf .AddAutoRelationship (_ecc .DocTypePresentation ,_ecc .SlideType ,_efa +1,_ecc .SlideLayoutType );};};_ggfc :=Slide {_cge ,_dgf ,_faa };return _ggfc ,nil ;};

// LastViewAttr returns the LastViewAttr property.
func (_cgd ViewProperties )LastViewAttr ()_bbc .ST_ViewType {return _cgd ._cfa .LastViewAttr };func (_eb *Presentation )addCustomRelationships (){_eb .ContentTypes .AddOverride ("/\u0064o\u0063\u0050\u0072\u006f\u0070\u0073\u002f\u0063u\u0073\u0074\u006f\u006d.x\u006d\u006c","\u0061\u0070\u0070\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002fv\u006e\u0064\u002e\u006f\u0070\u0065n\u0078\u006d\u006c\u0066\u006fr\u006d\u0061\u0074\u0073\u002d\u006f\u0066\u0066\u0069\u0063\u0065\u0064o\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0063\u0075\u0073\u0074\u006f\u006d\u002d\u0070r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073+\u0078\u006d\u006c");_eb .Rels .AddRelationship ("\u0064\u006f\u0063\u0050ro\u0070\u0073\u002f\u0063\u0075\u0073\u0074\u006f\u006d\u002e\u0078\u006d\u006c",_ecc .CustomPropertiesType );};

// SlideLayout is a layout from which slides can be created.
type SlideLayout struct{_ac *_bbc .SldLayout };

// SaveToFile writes the Presentation out to a file.
func (_efd *Presentation )SaveToFile (path string )error {return _efd .saveToFile (path ,false )};

// NotesViewPr returns the NotesViewPr property.
func (_dfec ViewProperties )NotesViewPr ()*_bbc .CT_NotesViewProperties {return _dfec ._cfa .NotesViewPr };

// NewViewProperties constructs a new ViewProperties.
func NewViewProperties ()ViewProperties {return ViewProperties {_cfa :_bbc .NewViewPr ()}};

// Name returns the name of the slide layout.
func (_cabc SlideLayout )Name ()string {if _cabc ._ac .CSld !=nil &&_cabc ._ac .CSld .NameAttr !=nil {return *_cabc ._ac .CSld .NameAttr ;};return "";};

// X returns the inner wrapped XML type.
func (_deda PresentationProperties )X ()*_bbc .PresentationPr {return _deda ._caf };

// New initializes and reurns a new presentation
func New ()*Presentation {_dcc :=_eaf ();_dcc .ContentTypes .AddOverride ("/\u0070\u0070\u0074\u002fpr\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006e\u002e\u0078\u006d\u006c","\u0061\u0070\u0070\u006c\u0069\u0063\u0061t\u0069\u006f\u006e\u002f\u0076\u006e\u0064\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002d\u006ff\u0066\u0069\u0063\u0065\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u002e\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002e\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u002e\u006d\u0061\u0069\u006e\u002b\u0078\u006d\u006c");_dcc .Rels .AddRelationship ("\u0064\u006f\u0063\u0050\u0072\u006f\u0070\u0073\u002f\u0063\u006f\u0072e\u002e\u0078\u006d\u006c","\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066o\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006ba\u0067\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073\u002f\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061/\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006f\u0070e\u0072\u0074i\u0065\u0073");_dcc .Rels .AddRelationship ("\u0064\u006fc\u0050\u0072\u006fp\u0073\u002f\u0061\u0070\u0070\u002e\u0078\u006d\u006c","\u0068t\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002eo\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072\u006da\u0074\u0073.\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0073\u0068\u0069p\u0073\u002f\u0065x\u0074\u0065\u006e\u0064\u0065d\u002d\u0070\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_dcc .Rels .AddRelationship ("p\u0070t\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074a\u0074\u0069\u006f\u006e.x\u006d\u006c","\u0068\u0074\u0074\u0070\u003a\u002f\u002fs\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006da\u0074\u0073\u002e\u006f\u0072g\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006fc\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074");_dcc .Rels .AddRelationship ("\u0070\u0070\u0074\u002f\u0070\u0072\u0065\u0073\u0050\u0072\u006f\u0070s\u002e\u0078\u006d\u006c","ht\u0074\u0070\u003a\u002f\u002f\u0073\u0063he\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006da\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006et\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068i\u0070s\u002f\u0070\u0072\u0065\u0073\u0050\u0072\u006f\u0070\u0073");_dcc .Rels .AddRelationship ("\u0070\u0070\u0074\u002f\u0076\u0069\u0065\u0077\u0050\u0072\u006f\u0070s\u002e\u0078\u006d\u006c","ht\u0074\u0070\u003a\u002f\u002f\u0073\u0063he\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006da\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006et\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068i\u0070s\u002f\u0076\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0073");_dcc .Rels .AddRelationship ("\u0070\u0070\u0074\u002fta\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073\u002e\u0078\u006d\u006c","\u0068\u0074\u0074\u0070\u003a\u002f\u002fs\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006cf\u006fr\u006d\u0061\u0074\u0073\u002e\u006fr\u0067\u002f\u006f\u0066\u0066\u0069\u0063e\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073\u002f\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0073");_dcc ._bbe .SldMasterIdLst =_bbc .NewCT_SlideMasterIdList ();_gaa :=_bbc .NewSldMaster ();_gaa .ClrMap .Bg1Attr =_gabc .ST_ColorSchemeIndexLt1 ;_gaa .ClrMap .Bg2Attr =_gabc .ST_ColorSchemeIndexLt2 ;_gaa .ClrMap .Tx1Attr =_gabc .ST_ColorSchemeIndexDk1 ;_gaa .ClrMap .Tx2Attr =_gabc .ST_ColorSchemeIndexDk2 ;_gaa .ClrMap .Accent1Attr =_gabc .ST_ColorSchemeIndexAccent1 ;_gaa .ClrMap .Accent2Attr =_gabc .ST_ColorSchemeIndexAccent2 ;_gaa .ClrMap .Accent3Attr =_gabc .ST_ColorSchemeIndexAccent3 ;_gaa .ClrMap .Accent4Attr =_gabc .ST_ColorSchemeIndexAccent4 ;_gaa .ClrMap .Accent5Attr =_gabc .ST_ColorSchemeIndexAccent5 ;_gaa .ClrMap .Accent6Attr =_gabc .ST_ColorSchemeIndexAccent6 ;_gaa .ClrMap .HlinkAttr =_gabc .ST_ColorSchemeIndexHlink ;_gaa .ClrMap .FolHlinkAttr =_gabc .ST_ColorSchemeIndexFolHlink ;_dcc ._gce =append (_dcc ._gce ,_gaa );_aea :=_ecc .AbsoluteFilename (_ecc .DocTypePresentation ,_ecc .SlideMasterType ,1);_dcc .ContentTypes .AddOverride (_aea ,_ecc .SlideMasterContentType );_age :=_dcc ._dfa .AddAutoRelationship (_ecc .DocTypePresentation ,_ecc .OfficeDocumentType ,1,_ecc .SlideMasterType );_ebaa :=_bbc .NewCT_SlideMasterIdListEntry ();_ebaa .IdAttr =_ecc .Uint32 (2147483648);_ebaa .RIdAttr =_age .ID ();_dcc ._bbe .SldMasterIdLst .SldMasterId =append (_dcc ._bbe .SldMasterIdLst .SldMasterId ,_ebaa );_cdda :=_dce .NewRelationships ();_dcc ._dfb =append (_dcc ._dfb ,_cdda );_afa :=_bbc .NewSldLayout ();_badf :=_cdda .AddAutoRelationship (_ecc .DocTypePresentation ,_ecc .SlideMasterType ,1,_ecc .SlideLayoutType );_bbf :=_ecc .AbsoluteFilename (_ecc .DocTypePresentation ,_ecc .SlideLayoutType ,1);_dcc .ContentTypes .AddOverride (_bbf ,_ecc .SlideLayoutContentType );_cdda .AddAutoRelationship (_ecc .DocTypePresentation ,_ecc .SlideMasterType ,1,_ecc .ThemeType );_dcc ._aeg =append (_dcc ._aeg ,_afa );_gaa .SldLayoutIdLst =_bbc .NewCT_SlideLayoutIdList ();_fegd :=_bbc .NewCT_SlideLayoutIdListEntry ();_fegd .IdAttr =_ecc .Uint32 (2147483649);_fegd .RIdAttr =_badf .ID ();_gaa .SldLayoutIdLst .SldLayoutId =append (_gaa .SldLayoutIdLst .SldLayoutId ,_fegd );_bg :=_dce .NewRelationships ();_dcc ._ecb =append (_dcc ._ecb ,_bg );_bg .AddAutoRelationship (_ecc .DocTypePresentation ,_ecc .SlideType ,1,_ecc .SlideMasterType );_dcc ._bbe .NotesSz .CxAttr =6858000;_dcc ._bbe .NotesSz .CyAttr =9144000;_gabab :=_gabc .NewTheme ();_gabab .NameAttr =_ecc .String ("\u0067\u006f\u006fx\u006d\u006c\u0020\u0054\u0068\u0065\u006d\u0065");_gabab .ThemeElements .ClrScheme .NameAttr ="\u004f\u0066\u0066\u0069\u0063\u0065";_gabab .ThemeElements .ClrScheme .Dk1 .SysClr =_gabc .NewCT_SystemColor ();_gabab .ThemeElements .ClrScheme .Dk1 .SysClr .LastClrAttr =_ecc .String ("\u0030\u0030\u0030\u0030\u0030\u0030");_gabab .ThemeElements .ClrScheme .Dk1 .SysClr .ValAttr =_gabc .ST_SystemColorValWindowText ;_gabab .ThemeElements .ClrScheme .Lt1 .SysClr =_gabc .NewCT_SystemColor ();_gabab .ThemeElements .ClrScheme .Lt1 .SysClr .LastClrAttr =_ecc .String ("\u0066\u0066\u0066\u0066\u0066\u0066");_gabab .ThemeElements .ClrScheme .Lt1 .SysClr .ValAttr =_gabc .ST_SystemColorValWindow ;_gabab .ThemeElements .ClrScheme .Dk2 .SrgbClr =_gabc .NewCT_SRgbColor ();_gabab .ThemeElements .ClrScheme .Dk2 .SrgbClr .ValAttr ="\u0034\u0034\u0035\u0034\u0036\u0061";_gabab .ThemeElements .ClrScheme .Lt2 .SrgbClr =_gabc .NewCT_SRgbColor ();_gabab .ThemeElements .ClrScheme .Lt2 .SrgbClr .ValAttr ="\u0065\u0037\u0065\u0037\u0065\u0036";_gabab .ThemeElements .ClrScheme .Accent1 .SrgbClr =_gabc .NewCT_SRgbColor ();_gabab .ThemeElements .ClrScheme .Accent1 .SrgbClr .ValAttr ="\u0034\u0034\u0037\u0032\u0063\u0034";_gabab .ThemeElements .ClrScheme .Accent2 .SrgbClr =_gabc .NewCT_SRgbColor ();_gabab .ThemeElements .ClrScheme .Accent2 .SrgbClr .ValAttr ="\u0065\u0064\u0037\u0064\u0033\u0031";_gabab .ThemeElements .ClrScheme .Accent3 .SrgbClr =_gabc .NewCT_SRgbColor ();_gabab .ThemeElements .ClrScheme .Accent3 .SrgbClr .ValAttr ="\u0061\u0035\u0061\u0035\u0061\u0035";_gabab .ThemeElements .ClrScheme .Accent4 .SrgbClr =_gabc .NewCT_SRgbColor ();_gabab .ThemeElements .ClrScheme .Accent4 .SrgbClr .ValAttr ="\u0066\u0066\u0063\u0030\u0030\u0030";_gabab .ThemeElements .ClrScheme .Accent5 .SrgbClr =_gabc .NewCT_SRgbColor ();_gabab .ThemeElements .ClrScheme .Accent5 .SrgbClr .ValAttr ="\u0035\u0062\u0039\u0062\u0064\u0035";_gabab .ThemeElements .ClrScheme .Accent6 .SrgbClr =_gabc .NewCT_SRgbColor ();_gabab .ThemeElements .ClrScheme .Accent6 .SrgbClr .ValAttr ="\u0037\u0030\u0061\u0064\u0034\u0037";_gabab .ThemeElements .ClrScheme .Hlink .SrgbClr =_gabc .NewCT_SRgbColor ();_gabab .ThemeElements .ClrScheme .Hlink .SrgbClr .ValAttr ="\u0030\u0035\u0036\u0033\u0063\u0031";_gabab .ThemeElements .ClrScheme .FolHlink .SrgbClr =_gabc .NewCT_SRgbColor ();_gabab .ThemeElements .ClrScheme .FolHlink .SrgbClr .ValAttr ="\u0039\u0035\u0034\u0066\u0037\u0032";_gabab .ThemeElements .FontScheme .NameAttr ="\u004f\u0066\u0066\u0069\u0063\u0065";_gabab .ThemeElements .FontScheme .MajorFont .Latin .TypefaceAttr ="\u0043\u0061\u006c\u0069\u0062\u0072\u0069\u0020\u004c\u0069\u0067\u0068\u0074";_gabab .ThemeElements .FontScheme .MinorFont .Latin .TypefaceAttr ="\u0043a\u006c\u0069\u0062\u0072\u0069";_gabab .ThemeElements .FmtScheme .NameAttr =_ecc .String ("\u004f\u0066\u0066\u0069\u0063\u0065");_ecga :=_gabc .NewEG_FillProperties ();_gabab .ThemeElements .FmtScheme .FillStyleLst .EG_FillProperties =append (_gabab .ThemeElements .FmtScheme .FillStyleLst .EG_FillProperties ,_ecga );_ecga .SolidFill =&_gabc .CT_SolidColorFillProperties {SchemeClr :&_gabc .CT_SchemeColor {ValAttr :_gabc .ST_SchemeColorValPhClr }};_ecga =_gabc .NewEG_FillProperties ();_gabab .ThemeElements .FmtScheme .FillStyleLst .EG_FillProperties =append (_gabab .ThemeElements .FmtScheme .FillStyleLst .EG_FillProperties ,_ecga );_gabab .ThemeElements .FmtScheme .FillStyleLst .EG_FillProperties =append (_gabab .ThemeElements .FmtScheme .FillStyleLst .EG_FillProperties ,_ecga );_ecga .GradFill =&_gabc .CT_GradientFillProperties {RotWithShapeAttr :_ecc .Bool (true ),GsLst :&_gabc .CT_GradientStopList {},Lin :&_gabc .CT_LinearShadeProperties {}};_ecga .GradFill .Lin .AngAttr =_ecc .Int32 (5400000);_ecga .GradFill .Lin .ScaledAttr =_ecc .Bool (false );_fcbg :=_gabc .NewCT_GradientStop ();_fcbg .PosAttr .ST_PositiveFixedPercentageDecimal =_ecc .Int32 (0);_fcbg .SchemeClr =&_gabc .CT_SchemeColor {ValAttr :_gabc .ST_SchemeColorValPhClr };_ecga .GradFill .GsLst .Gs =append (_ecga .GradFill .GsLst .Gs ,_fcbg );_fcbg =_gabc .NewCT_GradientStop ();_fcbg .PosAttr .ST_PositiveFixedPercentageDecimal =_ecc .Int32 (50000);_fcbg .SchemeClr =&_gabc .CT_SchemeColor {ValAttr :_gabc .ST_SchemeColorValPhClr };_ecga .GradFill .GsLst .Gs =append (_ecga .GradFill .GsLst .Gs ,_fcbg );_gabab .ThemeElements .FmtScheme .LnStyleLst =_gabc .NewCT_LineStyleList ();for _gbc :=0;_gbc < 3;_gbc ++{_cffc :=_gabc .NewCT_LineProperties ();_cffc .WAttr =_ecc .Int32 (int32 (6350*(_gbc +1)));_cffc .CapAttr =_gabc .ST_LineCapFlat ;_cffc .CmpdAttr =_gabc .ST_CompoundLineSng ;_cffc .AlgnAttr =_gabc .ST_PenAlignmentCtr ;_gabab .ThemeElements .FmtScheme .LnStyleLst .Ln =append (_gabab .ThemeElements .FmtScheme .LnStyleLst .Ln ,_cffc );};_gabab .ThemeElements .FmtScheme .EffectStyleLst =_gabc .NewCT_EffectStyleList ();for _dded :=0;_dded < 3;_dded ++{_dcac :=_gabc .NewCT_EffectStyleItem ();_dcac .EffectLst =_gabc .NewCT_EffectList ();_gabab .ThemeElements .FmtScheme .EffectStyleLst .EffectStyle =append (_gabab .ThemeElements .FmtScheme .EffectStyleLst .EffectStyle ,_dcac );};_efff :=_gabc .NewEG_FillProperties ();_efff .SolidFill =&_gabc .CT_SolidColorFillProperties {SchemeClr :&_gabc .CT_SchemeColor {ValAttr :_gabc .ST_SchemeColorValPhClr }};_gabab .ThemeElements .FmtScheme .BgFillStyleLst .EG_FillProperties =append (_gabab .ThemeElements .FmtScheme .BgFillStyleLst .EG_FillProperties ,_efff );_gabab .ThemeElements .FmtScheme .BgFillStyleLst .EG_FillProperties =append (_gabab .ThemeElements .FmtScheme .BgFillStyleLst .EG_FillProperties ,_efff );_gabab .ThemeElements .FmtScheme .BgFillStyleLst .EG_FillProperties =append (_gabab .ThemeElements .FmtScheme .BgFillStyleLst .EG_FillProperties ,_ecga );_dcc ._eg =append (_dcc ._eg ,_gabab );_faae :=_ecc .AbsoluteFilename (_ecc .DocTypePresentation ,_ecc .ThemeType ,1);_dcc .ContentTypes .AddOverride (_faae ,_ecc .ThemeContentType );_dcc ._dfa .AddAutoRelationship (_ecc .DocTypePresentation ,_ecc .OfficeDocumentType ,1,_ecc .ThemeType );_dfaa :=_dce .NewRelationships ();_dcc ._cddcd =append (_dcc ._cddcd ,_dfaa );return _dcc ;};

// PrnPr returns the PrnPr property.
func (_cee PresentationProperties )PrnPr ()*_bbc .CT_PrintProperties {return _cee ._caf .PrnPr };

// PlaceHolder is a place holder from a slide.
type PlaceHolder struct{_gcd *_bbc .CT_Shape ;_agf *_bbc .Sld ;};

// PresentationProperties contains document specific properties.
type PresentationProperties struct{_caf *_bbc .PresentationPr };

// Index returns the placeholder index
func (_fb PlaceHolder )Index ()uint32 {if _fb ._gcd .NvSpPr .NvPr .Ph .IdxAttr ==nil {return 0;};return *_fb ._gcd .NvSpPr .NvPr .Ph .IdxAttr ;};

// Properties returns the properties of the TextBox.
func (_cga TextBox )Properties ()_dcf .ShapeProperties {if _cga ._bfee .SpPr ==nil {_cga ._bfee .SpPr =_gabc .NewCT_ShapeProperties ();};return _dcf .MakeShapeProperties (_cga ._bfee .SpPr );};

// AddSlide adds a new slide to the presentation.
func (_aebgd *Presentation )AddSlide ()Slide {_egga :=_bbc .NewCT_SlideIdListEntry ();_egga .IdAttr =_aebgd .nextSlideID ();_aebgd ._bbe .SldIdLst .SldId =append (_aebgd ._bbe .SldIdLst .SldId ,_egga );_dfeg :=_bbc .NewSld ();_dfeg .CSld .SpTree .NvGrpSpPr .CNvPr .IdAttr =1;_dfeg .CSld .SpTree .GrpSpPr .Xfrm =_gabc .NewCT_GroupTransform2D ();_dfeg .CSld .SpTree .GrpSpPr .Xfrm .Off =_gabc .NewCT_Point2D ();_dfeg .CSld .SpTree .GrpSpPr .Xfrm .Off .XAttr .ST_CoordinateUnqualified =_ecc .Int64 (0);_dfeg .CSld .SpTree .GrpSpPr .Xfrm .Off .YAttr .ST_CoordinateUnqualified =_ecc .Int64 (0);_dfeg .CSld .SpTree .GrpSpPr .Xfrm .Ext =_gabc .NewCT_PositiveSize2D ();_dfeg .CSld .SpTree .GrpSpPr .Xfrm .Ext .CxAttr =int64 (0*_egab .Point );_dfeg .CSld .SpTree .GrpSpPr .Xfrm .Ext .CyAttr =int64 (0*_egab .Point );_dfeg .CSld .SpTree .GrpSpPr .Xfrm .ChOff =_dfeg .CSld .SpTree .GrpSpPr .Xfrm .Off ;_dfeg .CSld .SpTree .GrpSpPr .Xfrm .ChExt =_dfeg .CSld .SpTree .GrpSpPr .Xfrm .Ext ;_aebgd ._adg =append (_aebgd ._adg ,_dfeg );_bec :=_aebgd ._dfa .AddAutoRelationship (_ecc .DocTypePresentation ,_ecc .OfficeDocumentType ,len (_aebgd ._adg ),_ecc .SlideType );_egga .RIdAttr =_bec .ID ();_cb :=_ecc .AbsoluteFilename (_ecc .DocTypePresentation ,_ecc .SlideType ,len (_aebgd ._adg ));_aebgd .ContentTypes .AddOverride (_cb ,_ecc .SlideContentType );_bfb :=_dce .NewRelationships ();_aebgd ._g =append (_aebgd ._g ,_bfb );_bfb .AddAutoRelationship (_ecc .DocTypePresentation ,_ecc .SlideType ,len (_aebgd ._aeg ),_ecc .SlideLayoutType );return Slide {_egga ,_dfeg ,_aebgd };};

// ExtLst returns the ExtLst property.
func (_cbg PresentationProperties )ExtLst ()*_bbc .CT_ExtensionList {return _cbg ._caf .ExtLst };

// OutlineViewPr returns the OutlineViewPr property.
func (_defb ViewProperties )OutlineViewPr ()*_bbc .CT_OutlineViewProperties {return _defb ._cfa .OutlineViewPr ;};

// RemoveSlide removes a slide from a presentation.
func (_ccagc *Presentation )RemoveSlide (s Slide )error {_bd :=false ;_fa :=0;for _dca ,_efg :=range _ccagc ._adg {if _efg ==s ._dgfc {if _ccagc ._bbe .SldIdLst .SldId [_dca ]!=s ._gdd {return _dc .New ("i\u006e\u0063\u006f\u006e\u0073\u0069s\u0074\u0065\u006e\u0063\u0079\u0020i\u006e\u0020\u0073\u006c\u0069\u0064\u0065s\u0020\u0061\u006e\u0064\u0020\u0049\u0044\u0020\u006c\u0069s\u0074");};copy (_ccagc ._adg [_dca :],_ccagc ._adg [_dca +1:]);_ccagc ._adg =_ccagc ._adg [0:len (_ccagc ._adg )-1];copy (_ccagc ._g [_dca :],_ccagc ._g [_dca +1:]);_ccagc ._g =_ccagc ._g [0:len (_ccagc ._g )-1];copy (_ccagc ._bbe .SldIdLst .SldId [_dca :],_ccagc ._bbe .SldIdLst .SldId [_dca +1:]);_ccagc ._bbe .SldIdLst .SldId =_ccagc ._bbe .SldIdLst .SldId [0:len (_ccagc ._bbe .SldIdLst .SldId )-1];_bd =true ;_fa =_dca ;};};if !_bd {return _dc .New ("u\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0066i\u006e\u0064\u0020\u0073li\u0064\u0065");};_fcbd :=_ecc .AbsoluteFilename (_ecc .DocTypePresentation ,_ecc .SlideType ,0);return _ccagc .ContentTypes .RemoveOverrideByIndex (_fcbd ,_fa );};

// SaveAsTemplate writes the presentation out to a writer in the Zip package format as a template
func (_bgd *Presentation )SaveAsTemplate (w _bgf .Writer )error {return _bgd .save (w ,true )};

// NewPresentationProperties constructs a new PresentationProperties.
func NewPresentationProperties ()PresentationProperties {return PresentationProperties {_caf :_bbc .NewPresentationPr ()};};

// Type returns the type of the slide layout.
func (_fc SlideLayout )Type ()_bbc .ST_SlideLayoutType {return _fc ._ac .TypeAttr };

// Open opens and reads a document from a file (.pptx).
func Open (filename string )(*Presentation ,error ){_bace ,_agfa :=_fga .Open (filename );if _agfa !=nil {return nil ,_ccd .Errorf ("e\u0072r\u006f\u0072\u0020\u006f\u0070\u0065\u006e\u0069n\u0067\u0020\u0025\u0073: \u0025\u0073",filename ,_agfa );};defer _bace .Close ();_bce ,_agfa :=_fga .Stat (filename );if _agfa !=nil {return nil ,_ccd .Errorf ("e\u0072r\u006f\u0072\u0020\u006f\u0070\u0065\u006e\u0069n\u0067\u0020\u0025\u0073: \u0025\u0073",filename ,_agfa );};_ =_bce ;return Read (_bace ,_bce .Size ());};

// GetOrCreateCustomProperties returns the custom properties of the document (and if they not exist yet, creating them first)
func (_beg *Presentation )GetOrCreateCustomProperties ()_dce .CustomProperties {if _beg .CustomProperties .X ()==nil {_beg .createCustomProperties ();};return _beg .CustomProperties ;};

// ViewProperties contains presentation specific properties.
type ViewProperties struct{_cfa *_bbc .ViewPr };

// SetTextAnchor controls the text anchoring
func (_caa TextBox )SetTextAnchor (a _gabc .ST_TextAnchoringType ){_caa ._bfee .TxBody .BodyPr =_gabc .NewCT_TextBodyProperties ();_caa ._bfee .TxBody .BodyPr .AnchorAttr =a ;};

// SlideMaster is the slide master for a presentation.
type SlideMaster struct{_fecb *Presentation ;_faca _dce .Relationships ;_bbeg *_bbc .SldMaster ;};

// ExtLst returns the ExtLst property.
func (_gfg ViewProperties )ExtLst ()*_bbc .CT_ExtensionList {return _gfg ._cfa .ExtLst };func (_bbbb *Presentation )Validate ()error {if _acge :=_bbbb ._bbe .Validate ();_acge !=nil {return _acge ;};for _ded ,_bcb :=range _bbbb .Slides (){if _gff :=_bcb .ValidateWithPath (_ccd .Sprintf ("\u0053l\u0069\u0064\u0065\u005b\u0025\u0064]",_ded ));_gff !=nil {return _gff ;};};for _eebe ,_fbgc :=range _bbbb ._gce {if _badc :=_fbgc .ValidateWithPath (_ccd .Sprintf ("\u0053l\u0069d\u0065\u004d\u0061\u0073\u0074\u0065\u0072\u005b\u0025\u0064\u005d",_eebe ));_badc !=nil {return _badc ;};};for _egc ,_edb :=range _bbbb ._aeg {if _afgd :=_edb .ValidateWithPath (_ccd .Sprintf ("\u0053l\u0069d\u0065\u004c\u0061\u0079\u006f\u0075\u0074\u005b\u0025\u0064\u005d",_egc ));_afgd !=nil {return _afgd ;};};return nil ;};

// Type returns the placeholder type
func (_ebg PlaceHolder )Type ()_bbc .ST_PlaceholderType {return _ebg ._gcd .NvSpPr .NvPr .Ph .TypeAttr };

// Image is an image within a slide.
type Image struct{_bbag *_bbc .CT_Picture };

// AddParagraph adds a new paragraph to a placeholder.
func (_dfe PlaceHolder )AddParagraph ()_dcf .Paragraph {_daa :=_dcf .MakeParagraph (_gabc .NewCT_TextParagraph ());_dfe ._gcd .TxBody .P =append (_dfe ._gcd .TxBody .P ,_daa .X ());return _daa ;};

// ShowCommentsAttr returns the WebPr property.
func (_dcd ViewProperties )ShowCommentsAttr ()*bool {return _dcd ._cfa .ShowCommentsAttr };

// NotesTextViewPr returns the NotesTextViewPr property.
func (_b ViewProperties )NotesTextViewPr ()*_bbc .CT_NotesTextViewProperties {return _b ._cfa .NotesTextViewPr ;};

// PlaceHolders returns all of the content place holders within a given slide.
func (_ccf Slide )PlaceHolders ()[]PlaceHolder {_eeb :=[]PlaceHolder {};for _ ,_eag :=range _ccf ._dgfc .CSld .SpTree .Choice {for _ ,_bbaa :=range _eag .Sp {if _bbaa .NvSpPr !=nil &&_bbaa .NvSpPr .NvPr !=nil &&_bbaa .NvSpPr .NvPr .Ph !=nil {_eeb =append (_eeb ,PlaceHolder {_bbaa ,_ccf ._dgfc });};};};return _eeb ;};

// Presentation is the a presentation base document.
type Presentation struct{_dce .DocBase ;_bbe *_bbc .Presentation ;_dfa _dce .Relationships ;_adg []*_bbc .Sld ;_g []_dce .Relationships ;_gce []*_bbc .SldMaster ;_dfb []_dce .Relationships ;_aeg []*_bbc .SldLayout ;_ecb []_dce .Relationships ;_eg []*_gabc .Theme ;_cddcd []_dce .Relationships ;_eeec _dce .TableStyles ;_bgdc PresentationProperties ;_dg ViewProperties ;_bdb []*_gabc .CT_Hyperlink ;_db []*_egfa .ChartSpace ;_ff []*_bbc .HandoutMaster ;_ffc []*_bbc .NotesMaster ;_bb []*_ecc .XSDAny ;_aba map[string ]string ;};

// SetText sets the text of a placeholder for the initial paragraph. This is a
// shortcut method that is useful for things like titles which only contain a
// single paragraph.
func (_ecg PlaceHolder )SetText (text string ){_ecg .Clear ();_egd :=_gabc .NewEG_TextRun ();_egd .R =_gabc .NewCT_RegularTextRun ();_egd .R .T =text ;if len (_ecg ._gcd .TxBody .P )==0{_ecg ._gcd .TxBody .P =append (_ecg ._gcd .TxBody .P ,_gabc .NewCT_TextParagraph ());};_ecg ._gcd .TxBody .P [0].EG_TextRun =nil ;_ecg ._gcd .TxBody .P [0].EG_TextRun =append (_ecg ._gcd .TxBody .P [0].EG_TextRun ,_egd );};func _eaf ()*Presentation {_af :=&Presentation {_bbe :_bbc .NewPresentation ()};_af ._bbe .SldIdLst =_bbc .NewCT_SlideIdList ();_af ._bbe .ConformanceAttr =_bee .ST_ConformanceClassTransitional ;_af .AppProperties =_dce .NewAppProperties ();_af .CoreProperties =_dce .NewCoreProperties ();_af ._eeec =_dce .NewTableStyles ();_af .ContentTypes =_dce .NewContentTypes ();_af .Rels =_dce .NewRelationships ();_af ._dfa =_dce .NewRelationships ();_af ._bgdc =NewPresentationProperties ();_af ._dg =NewViewProperties ();_af ._aba =map[string ]string {};return _af ;};

// Remove removes a placeholder from a presentation.
func (_ggcb PlaceHolder )Remove ()error {for _acfd ,_gac :=range _ggcb ._agf .CSld .SpTree .Choice {for _ ,_fcd :=range _gac .Sp {if _fcd ==_ggcb ._gcd {copy (_ggcb ._agf .CSld .SpTree .Choice [_acfd :],_ggcb ._agf .CSld .SpTree .Choice [_acfd +1:]);_ggcb ._agf .CSld .SpTree .Choice =_ggcb ._agf .CSld .SpTree .Choice [0:len (_ggcb ._agf .CSld .SpTree .Choice )-1];return nil ;};};};return _dc .New ("\u0070\u006c\u0061\u0063\u0065\u0068\u006f\u006c\u0064\u0065r\u0020\u006e\u006f\u0074\u0020\u0066\u006fu\u006e\u0064\u0020\u0069\u006e\u0020\u0073\u006c\u0069\u0064\u0065");};

// SlideViewPr returns the SlideViewPr property.
func (_cgg ViewProperties )SlideViewPr ()*_bbc .CT_SlideViewProperties {return _cgg ._cfa .SlideViewPr };

// ValidateWithPath validates the slide passing path informaton for a better
// error message.
func (_d Slide )ValidateWithPath (path string )error {if _dde :=_d ._dgfc .ValidateWithPath (path );_dde !=nil {return _dde ;};for _ ,_abg :=range _d ._dgfc .CSld .SpTree .Choice {for _ ,_cdfe :=range _abg .Sp {if _cdfe .TxBody !=nil {if len (_cdfe .TxBody .P )==0{return _dc .New (path +"\u0020\u003a \u0073\u006c\u0069\u0064\u0065 \u0073\u0068\u0061\u0070\u0065 \u0077\u0069\u0074\u0068\u0020\u0061\u0020\u0074\u0078\u0062\u006f\u0064\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0070\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068\u0073");};};};};return nil ;};

// Read reads a document from an io.Reader.
func Read (r _bgf .ReaderAt ,size int64 )(*Presentation ,error ){_gad :=_eaf ();_begc ,_cf :=_cddc .TempDir ("","g\u006f\u006f\u0078\u006d\u006c\u002d\u0070\u0070\u0074\u0078");if _cf !=nil {return nil ,_cf ;};_gad .TmpPath =_begc ;_dab ,_cf :=_a .NewReader (r ,size );if _cf !=nil {return nil ,_ccd .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u007a\u0069\u0070\u003a\u0020\u0025\u0073",_cf );};_ega :=[]*_a .File {};_ega =append (_ega ,_dab .File ...);_eca :=false ;for _ ,_ggb :=range _ega {if _ggb .FileHeader .Name =="\u0064\u006f\u0063\u0050ro\u0070\u0073\u002f\u0063\u0075\u0073\u0074\u006f\u006d\u002e\u0078\u006d\u006c"{_eca =true ;break ;};};if _eca {_gad .createCustomProperties ();};_ggcd :=_effa .DecodeMap {};_ggcd .SetOnNewRelationshipFunc (_gad .onNewRelationship );_ggcd .AddTarget (_ecc .ContentTypesFilename ,_gad .ContentTypes .X (),"",0);_ggcd .AddTarget (_ecc .BaseRelsFilename ,_gad .Rels .X (),"",0);if _fdf :=_ggcd .Decode (_ega );_fdf !=nil {return nil ,_fdf ;};for _ ,_dgbe :=range _ega {if _dgbe ==nil {continue ;};if _fbgg :=_gad .AddExtraFileFromZip (_dgbe );_fbgg !=nil {return nil ,_fbgg ;};};if _eca {_acc :=false ;for _ ,_fad :=range _gad .Rels .X ().Relationship {if _fad .TargetAttr =="\u0064\u006f\u0063\u0050ro\u0070\u0073\u002f\u0063\u0075\u0073\u0074\u006f\u006d\u002e\u0078\u006d\u006c"{_acc =true ;break ;};};if !_acc {_gad .addCustomRelationships ();};};return _gad ,nil ;};

// X returns the inner wrapped XML type.
func (_fgd ViewProperties )X ()*_bbc .ViewPr {return _fgd ._cfa };

// Save writes the presentation out to a writer in the Zip package format
func (_gab *Presentation )Save (w _bgf .Writer )error {return _gab .save (w ,false )};

// AddDefaultSlideWithLayout tries to replicate what PowerPoint does when
// inserting a slide with a new style by clearing placeholder content and removing
// some placeholders.  Use AddSlideWithLayout if you need more control.
func (_cc *Presentation )AddDefaultSlideWithLayout (l SlideLayout )(Slide ,error ){_gcb ,_acgg :=_cc .AddSlideWithLayout (l );for _ ,_dba :=range _gcb .PlaceHolders (){_dba .Clear ();switch _dba .Type (){case _bbc .ST_PlaceholderTypeFtr ,_bbc .ST_PlaceholderTypeDt ,_bbc .ST_PlaceholderTypeSldNum :_dba .Remove ();};};return _gcb ,_acgg ;};func (_ead *Presentation )nextSlideID ()uint32 {_ffag :=uint32 (256);for _ ,_bfg :=range _ead ._bbe .SldIdLst .SldId {if _bfg .IdAttr >=_ffag {_ffag =_bfg .IdAttr +1;};};return _ffag ;};func _cfd (_gcf []*_bbc .CT_GroupShapeChoice )[]*_bbc .CT_GroupShapeChoice {var _bba []*_bbc .CT_GroupShapeChoice ;for _ ,_bcd :=range _gcf {if len (_bcd .Pic )==0{_bba =append (_bba ,_bcd );};};return _bba ;};

// GridSpacing returns the GridSpacing property.
func (_dgc ViewProperties )GridSpacing ()*_gabc .CT_PositiveSize2D {return _dgc ._cfa .GridSpacing };

// SorterViewPr returns the SorterViewPr property.
func (_gfd ViewProperties )SorterViewPr ()*_bbc .CT_SlideSorterViewProperties {return _gfd ._cfa .SorterViewPr ;};

// Clear clears the placeholder contents and adds a single empty paragraph.  The
// empty paragrah is required by PowerPoint or it will report the file as being
// invalid.
func (_ce PlaceHolder )Clear (){_ce .ClearAll ();_ade :=_gabc .NewCT_TextParagraph ();_ce ._gcd .TxBody .P =[]*_gabc .CT_TextParagraph {_ade };_ade .EndParaRPr =_gabc .NewCT_TextCharacterProperties ();_ade .EndParaRPr .LangAttr =_ecc .String ("\u0065\u006e\u002dU\u0053");};func (_cabe *Presentation )save (_dae _bgf .Writer ,_ad bool )error {if _c :=_cabe ._bbe .Validate ();_c !=nil {_ag .Printf ("\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u0020i\u006e\u0020\u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0073",_c );};if !_ab .GetLicenseKey ().IsLicensed ()&&_eeecc .Lookup ("\u0074\u0065\u0073\u0074\u002e\u0076")==nil {_ccd .Println ("\u0055\u006e\u006ci\u0063\u0065\u006e\u0073e\u0064\u0020\u0076\u0065\u0072\u0073\u0069o\u006e\u0020\u006f\u0066\u0020\u0055\u006e\u0069\u004f\u0066\u0066\u0069\u0063\u0065");_ccd .Println ("\u002d\u0020Ge\u0074\u0020\u0061 \u006c\u0069\u0063\u0065nse\u0020on\u0020\u0068\u0074\u0074\u0070\u0073\u003a//\u0075\u006e\u0069\u0064\u006f\u0063\u002ei\u006f");_bfcd :=_cabe .Slides ()[0];_ba :=_bfcd .AddTextBox ();_ba .Properties ().SetPosition (0,0);_ba .Properties ().LineProperties ().SetWidth (2*_egab .Inch );_fgb :=_ba .AddParagraph ();_fab :=_fgb .AddRun ();_fab .SetText ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u006ff\u0020\u0055\u006e\u0069\u004f\u0066\u0066\u0069\u0063\u0065\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073\u003a/\u002f\u0075\u006ei\u0064\u006f\u0063\u002e\u0069\u006f");_fab .Properties ().SetSize (12*_egab .Point );_fab .Properties ().SetBold (true );_fab .Properties ().SetSolidFill (_afdc .Red );};if _ad {_cabe .ContentTypes .RemoveOverride ("\u0061\u0070\u0070\u006c\u0069\u0063\u0061t\u0069\u006f\u006e\u002f\u0076\u006e\u0064\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002d\u006ff\u0066\u0069\u0063\u0065\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u002e\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002e\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u002e\u006d\u0061\u0069\u006e\u002b\u0078\u006d\u006c");_cabe .ContentTypes .EnsureOverride ("/\u0070\u0070\u0074\u002fpr\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006e\u002e\u0078\u006d\u006c","\u0061\u0070pl\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0076\u006e\u0064\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066o\u0072\u006d\u0061\u0074s\u002d\u006f\u0066\u0066ic\u0065\u0064o\u0063u\u006d\u0065\u006e\u0074\u002e\u0070r\u0065\u0073\u0065n\u0074\u0061t\u0069\u006f\u006e\u006d\u006c\u002e\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065.\u006d\u0061\u0069\u006e\u002b\u0078\u006d\u006c");}else {_cabe .ContentTypes .RemoveOverride ("\u0061\u0070pl\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0076\u006e\u0064\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066o\u0072\u006d\u0061\u0074s\u002d\u006f\u0066\u0066ic\u0065\u0064o\u0063u\u006d\u0065\u006e\u0074\u002e\u0070r\u0065\u0073\u0065n\u0074\u0061t\u0069\u006f\u006e\u006d\u006c\u002e\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065.\u006d\u0061\u0069\u006e\u002b\u0078\u006d\u006c");_cabe .ContentTypes .EnsureOverride ("/\u0070\u0070\u0074\u002fpr\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006e\u002e\u0078\u006d\u006c","\u0061\u0070\u0070\u006c\u0069\u0063\u0061t\u0069\u006f\u006e\u002f\u0076\u006e\u0064\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002d\u006ff\u0066\u0069\u0063\u0065\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u002e\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002e\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u002e\u006d\u0061\u0069\u006e\u002b\u0078\u006d\u006c");};_fbc :=_ecc .DocTypePresentation ;_da :=_a .NewWriter (_dae );defer _da .Close ();if _fbg :=_effa .MarshalXML (_da ,_ecc .BaseRelsFilename ,_cabe .Rels .X ());_fbg !=nil {return _fbg ;};if _cab :=_effa .MarshalXMLByType (_da ,_fbc ,_ecc .ExtendedPropertiesType ,_cabe .AppProperties .X ());_cab !=nil {return _cab ;};if _dcg :=_effa .MarshalXMLByType (_da ,_fbc ,_ecc .CorePropertiesType ,_cabe .CoreProperties .X ());_dcg !=nil {return _dcg ;};if _bdda :=_effa .MarshalXMLByType (_da ,_fbc ,_ecc .PresentationPropertiesType ,_cabe ._bgdc .X ());_bdda !=nil {return _bdda ;};if _gag :=_effa .MarshalXMLByType (_da ,_fbc ,_ecc .ViewPropertiesType ,_cabe ._dg .X ());_gag !=nil {return _gag ;};if _bbg :=_effa .MarshalXMLByType (_da ,_fbc ,_ecc .TableStylesType ,_cabe ._eeec .X ());_bbg !=nil {return _bbg ;};if _cabe .CustomProperties .X ()!=nil {if _aafg :=_effa .MarshalXMLByType (_da ,_fbc ,_ecc .CustomPropertiesType ,_cabe .CustomProperties .X ());_aafg !=nil {return _aafg ;};};if _cabe .Thumbnail !=nil {_ebaf ,_ga :=_da .Create ("\u0064\u006f\u0063Pr\u006f\u0070\u0073\u002f\u0074\u0068\u0075\u006d\u0062\u006e\u0061\u0069\u006c\u002e\u006a\u0070\u0065\u0067");if _ga !=nil {return _ga ;};if _agb :=_aad .Encode (_ebaf ,_cabe .Thumbnail ,nil );_agb !=nil {return _agb ;};};_gdae :=_ecc .AbsoluteFilename (_fbc ,_ecc .OfficeDocumentType ,0);if _ggg :=_effa .MarshalXML (_da ,_gdae ,_cabe ._bbe );_ggg !=nil {return _ggg ;};if _afb :=_effa .MarshalXML (_da ,_effa .RelationsPathFor (_gdae ),_cabe ._dfa .X ());_afb !=nil {return _afb ;};for _bdc ,_gcab :=range _cabe ._adg {_agge :=_ecc .AbsoluteFilename (_ecc .DocTypePresentation ,_ecc .SlideType ,_bdc +1);_effa .MarshalXML (_da ,_agge ,_gcab );if !_cabe ._g [_bdc ].IsEmpty (){_bbb :=_effa .RelationsPathFor (_agge );_effa .MarshalXML (_da ,_bbb ,_cabe ._g [_bdc ].X ());};};for _afg ,_ecef :=range _cabe ._gce {_abb :=_ecc .AbsoluteFilename (_ecc .DocTypePresentation ,_ecc .SlideMasterType ,_afg +1);_effa .MarshalXML (_da ,_abb ,_ecef );if !_cabe ._dfb [_afg ].IsEmpty (){_cff :=_effa .RelationsPathFor (_abb );_effa .MarshalXML (_da ,_cff ,_cabe ._dfb [_afg ].X ());};};for _fcdc ,_eff :=range _cabe ._aeg {_ebc :=_ecc .AbsoluteFilename (_ecc .DocTypePresentation ,_ecc .SlideLayoutType ,_fcdc +1);_effa .MarshalXML (_da ,_ebc ,_eff );if !_cabe ._ecb [_fcdc ].IsEmpty (){_gaba :=_effa .RelationsPathFor (_ebc );_effa .MarshalXML (_da ,_gaba ,_cabe ._ecb [_fcdc ].X ());};};for _dfbd ,_de :=range _cabe ._eg {_bad :=_ecc .AbsoluteFilename (_ecc .DocTypePresentation ,_ecc .ThemeType ,_dfbd +1);_effa .MarshalXML (_da ,_bad ,_de );if !_cabe ._cddcd [_dfbd ].IsEmpty (){_gbae :=_effa .RelationsPathFor (_bad );_effa .MarshalXML (_da ,_gbae ,_cabe ._cddcd [_dfbd ].X ());};};for _bcc ,_eabg :=range _cabe ._db {_dgcb :=_ecc .AbsoluteFilename (_fbc ,_ecc .ChartType ,_bcc +1);_effa .MarshalXML (_da ,_dgcb ,_eabg );};for _fef ,_efbc :=range _cabe ._ff {_beb :=_ecc .AbsoluteFilename (_fbc ,_ecc .HandoutMasterType ,_fef +1);_effa .MarshalXML (_da ,_beb ,_efbc );};for _bbd ,_cfee :=range _cabe ._ffc {_edd :=_ecc .AbsoluteFilename (_fbc ,_ecc .NotesMasterType ,_bbd +1);_effa .MarshalXML (_da ,_edd ,_cfee );};for _fbga ,_aeb :=range _cabe ._bb {_bfe :=_ecc .AbsoluteFilename (_fbc ,_ecc .CustomXMLType ,_fbga +1);_effa .MarshalXML (_da ,_bfe ,_aeb );};for _cce ,_gfb :=range _cabe .Images {if _acga :=_dce .AddImageToZip (_da ,_gfb ,_cce +1,_ecc .DocTypePresentation );_acga !=nil {return _acga ;};};_cabe .ContentTypes .EnsureDefault ("\u0070\u006e\u0067","\u0069m\u0061\u0067\u0065\u002f\u0070\u006eg");_cabe .ContentTypes .EnsureDefault ("\u006a\u0070\u0065\u0067","\u0069\u006d\u0061\u0067\u0065\u002f\u006a\u0070\u0065\u0067");_cabe .ContentTypes .EnsureDefault ("\u006a\u0070\u0067","\u0069\u006d\u0061\u0067\u0065\u002f\u006a\u0070\u0065\u0067");_cabe .ContentTypes .EnsureDefault ("\u0077\u006d\u0066","i\u006d\u0061\u0067\u0065\u002f\u0078\u002d\u0077\u006d\u0066");if _ccag :=_effa .MarshalXML (_da ,_ecc .ContentTypesFilename ,_cabe .ContentTypes .X ());_ccag !=nil {return _ccag ;};if _dd :=_cabe .WriteExtraFiles (_da );_dd !=nil {return _dd ;};return nil ;};

// NormalViewPr returns the NormalViewPr property.
func (_ef ViewProperties )NormalViewPr ()*_bbc .CT_NormalViewProperties {return _ef ._cfa .NormalViewPr };

// WebPr returns the WebPr property.
func (_gga PresentationProperties )WebPr ()*_bbc .CT_WebProperties {return _gga ._caf .WebPr };

// X returns the inner wrapped XML type.
func (_cgf *Presentation )X ()*_bbc .Presentation {return _cgf ._bbe };

// Properties returns the properties of the TextBox.
func (_eeg Image )Properties ()_dcf .ShapeProperties {if _eeg ._bbag .SpPr ==nil {_eeg ._bbag .SpPr =_gabc .NewCT_ShapeProperties ();};return _dcf .MakeShapeProperties (_eeg ._bbag .SpPr );};

// GetPlaceholder returns a placeholder given its type.  If there are multiplace
// placeholders of the same type, this method returns the first one.  You must use the
// PlaceHolders() method to access the others.
func (_abbea Slide )GetPlaceholder (t _bbc .ST_PlaceholderType )(PlaceHolder ,error ){for _ ,_cac :=range _abbea ._dgfc .CSld .SpTree .Choice {for _ ,_egg :=range _cac .Sp {if _egg .NvSpPr !=nil &&_egg .NvSpPr .NvPr !=nil &&_egg .NvSpPr .NvPr .Ph !=nil {if _egg .NvSpPr .NvPr .Ph .TypeAttr ==t {return PlaceHolder {_egg ,_abbea ._dgfc },nil ;};};};};return PlaceHolder {},_dc .New ("\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0066i\u006e\u0064\u0020\u0070\u006c\u0061\u0063\u0065\u0068\u006fl\u0064\u0065\u0072");};

// ClearAll completely clears a placeholder. To be useable, at least one
// paragraph must be added after ClearAll via AddParagraph.
func (_bfc PlaceHolder )ClearAll (){_bfc ._gcd .SpPr =_gabc .NewCT_ShapeProperties ();_bfc ._gcd .TxBody =_gabc .NewCT_TextBody ();_bfc ._gcd .TxBody .LstStyle =_gabc .NewCT_TextListStyle ();};func (_bef *Presentation )createCustomProperties (){_bef .CustomProperties =_dce .NewCustomProperties ();_bef .addCustomRelationships ();};

// X returns the inner wrapped XML type.
func (_dcca SlideMaster )X ()*_bbc .SldMaster {return _dcca ._bbeg };

// SaveToFileAsTemplate writes the Presentation out to a file as a template.
func (_dbc *Presentation )SaveToFileAsTemplate (path string )error {return _dbc .saveToFile (path ,true )};

// AddParagraph adds a paragraph to the text box
func (_dag TextBox )AddParagraph ()_dcf .Paragraph {_gbaa :=_gabc .NewCT_TextParagraph ();_dag ._bfee .TxBody .P =append (_dag ._bfee .TxBody .P ,_gbaa );return _dcf .MakeParagraph (_gbaa );};

// GetLayoutByName retrieves a slide layout given a layout name.
func (_abgd *Presentation )GetLayoutByName (name string )(SlideLayout ,error ){for _ ,_cgcb :=range _abgd ._aeg {if _cgcb .CSld .NameAttr !=nil &&name ==*_cgcb .CSld .NameAttr {return SlideLayout {_cgcb },nil ;};};return SlideLayout {},_dc .New ("\u0075\u006eab\u006c\u0065\u0020t\u006f\u0020\u0066\u0069nd \u006cay\u006f\u0075\u0074\u0020\u0077\u0069\u0074h \u0074\u0068\u0061\u0074\u0020\u006e\u0061m\u0065");};

// SlideLayouts returns a slice of all layouts in SlideMaster.
func (_ffb SlideMaster )SlideLayouts ()[]SlideLayout {_dgb :=map[string ]int {};_cffd :=[]SlideLayout {};for _ ,_eae :=range _ffb ._faca .Relationships (){_deg :=_ceg .Replace (_eae .Target (),".\u002e\u002f\u0073\u006c\u0069\u0064e\u004c\u0061\u0079\u006f\u0075\u0074\u0073\u002f\u0073l\u0069\u0064\u0065L\u0061y\u006f\u0075\u0074","",-1);_deg =_ceg .Replace (_deg ,"\u002e\u0078\u006d\u006c","",-1);if _ffa ,_bfd :=_egcf .ParseInt (_deg ,10,32);_bfd ==nil {_dgb [_eae .ID ()]=int (_ffa );};};for _ ,_gaf :=range _ffb ._bbeg .SldLayoutIdLst .SldLayoutId {if _acd ,_bddc :=_dgb [_gaf .RIdAttr ];_bddc {_fbb :=_ffb ._fecb ._aeg [_acd -1];_cffd =append (_cffd ,SlideLayout {_fbb });};};return _cffd ;};